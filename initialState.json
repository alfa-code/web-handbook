{
    "app": {
        "settings": {
            "features": {
                "htmlRules": false,
                "cssRules": false
            }
        }
    },
    "data": {
        "htmlTagsList": {
            "list": [
                {
                    "name": "a"
                },
                {
                    "name": "abbr"
                },
                {
                    "name": "acronym",
                    "obsolete": true
                },
                {
                    "name": "address"
                },
                {
                    "name": "applet",
                    "obsolete": true
                },
                {
                    "name": "area"
                },
                {
                    "name": "article"
                },
                {
                    "name": "aside"
                },
                {
                    "name": "audio"
                },
                {
                    "name": "b"
                },
                {
                    "name": "base"
                },
                {
                    "name": "basefont",
                    "obsolete": true
                },
                {
                    "name": "bdi"
                },
                {
                    "name": "bdo"
                },
                {
                    "name": "big",
                    "obsolete": true
                },
                {
                    "name": "blink",
                    "obsolete": true
                },
                {
                    "name": "blockquote"
                },
                {
                    "name": "body"
                },
                {
                    "name": "br"
                },
                {
                    "name": "button"
                },
                {
                    "name": "canvas"
                },
                {
                    "name": "caption"
                },
                {
                    "name": "center",
                    "obsolete": true
                },
                {
                    "name": "cite"
                },
                {
                    "name": "code"
                },
                {
                    "name": "col"
                },
                {
                    "name": "colgroup"
                },
                {
                    "name": "comment"
                },
                {
                    "name": "data"
                },
                {
                    "name": "datalist"
                },
                {
                    "name": "dd"
                },
                {
                    "name": "del"
                },
                {
                    "name": "details"
                },
                {
                    "name": "dfn"
                },
                {
                    "name": "dialog"
                },
                {
                    "name": "dir",
                    "obsolete": true
                },
                {
                    "name": "div"
                },
                {
                    "name": "dl"
                },
                {
                    "name": "dt"
                },
                {
                    "name": "em"
                },
                {
                    "name": "embed"
                },
                {
                    "name": "fieldset"
                },
                {
                    "name": "figcaption"
                },
                {
                    "name": "figure"
                },
                {
                    "name": "font",
                    "obsolete": true
                },
                {
                    "name": "footer"
                },
                {
                    "name": "form"
                },
                {
                    "name": "frame",
                    "obsolete": true
                },
                {
                    "name": "frameset",
                    "obsolete": true
                },
                {
                    "name": "h1"
                },
                {
                    "name": "h2"
                },
                {
                    "name": "h3"
                },
                {
                    "name": "h4"
                },
                {
                    "name": "h5"
                },
                {
                    "name": "h6"
                },
                {
                    "name": "head"
                },
                {
                    "name": "header"
                },
                {
                    "name": "hr"
                },
                {
                    "name": "html"
                },
                {
                    "name": "i"
                },
                {
                    "name": "iframe"
                },
                {
                    "name": "img"
                },
                {
                    "name": "input"
                },
                {
                    "name": "ins"
                },
                {
                    "name": "kbd"
                },
                {
                    "name": "keygen",
                    "obsolete": true
                },
                {
                    "name": "label"
                },
                {
                    "name": "legend"
                },
                {
                    "name": "li"
                },
                {
                    "name": "link"
                },
                {
                    "name": "main"
                },
                {
                    "name": "map"
                },
                {
                    "name": "mark"
                },
                {
                    "name": "menu"
                },
                {
                    "name": "menuitem",
                    "obsolete": true
                },
                {
                    "name": "meta"
                },
                {
                    "name": "meter"
                },
                {
                    "name": "nav"
                },
                {
                    "name": "noframes",
                    "obsolete": true
                },
                {
                    "name": "noscript"
                },
                {
                    "name": "object"
                },
                {
                    "name": "ol"
                },
                {
                    "name": "optgroup"
                },
                {
                    "name": "option"
                },
                {
                    "name": "output"
                },
                {
                    "name": "p"
                },
                {
                    "name": "param"
                },
                {
                    "name": "pre"
                },
                {
                    "name": "progress"
                },
                {
                    "name": "q"
                },
                {
                    "name": "rp"
                },
                {
                    "name": "rt"
                },
                {
                    "name": "ruby"
                },
                {
                    "name": "s"
                },
                {
                    "name": "samp"
                },
                {
                    "name": "script"
                },
                {
                    "name": "section"
                },
                {
                    "name": "select"
                },
                {
                    "name": "small"
                },
                {
                    "name": "source"
                },
                {
                    "name": "span"
                },
                {
                    "name": "strike",
                    "obsolete": true
                },
                {
                    "name": "strong"
                },
                {
                    "name": "style"
                },
                {
                    "name": "sub"
                },
                {
                    "name": "summary"
                },
                {
                    "name": "sup"
                },
                {
                    "name": "table"
                },
                {
                    "name": "tbody"
                },
                {
                    "name": "td"
                },
                {
                    "name": "tfoot"
                },
                {
                    "name": "th"
                },
                {
                    "name": "thead"
                },
                {
                    "name": "time"
                },
                {
                    "name": "title"
                },
                {
                    "name": "tr"
                },
                {
                    "name": "track"
                },
                {
                    "name": "tt",
                    "obsolete": true
                },
                {
                    "name": "u"
                },
                {
                    "name": "ul"
                },
                {
                    "name": "var"
                },
                {
                    "name": "video"
                },
                {
                    "name": "wbr"
                }
            ]
        },
        "htmlTagsInfo": {
            "isLoading": false,
            "list": {
                "dir": null,
                "head": null,
                "div": null,
                "button": null,
                "dl": null,
                "option": {
                    "tagName": "option",
                    "categories": [
                        "Отсутствуют"
                    ],
                    "tag_omission": [
                        "Конечный тег элемента <LE>option</LE> может быть опущен, если за элементом <LE>option</LE> сразу же следует другой элемент <LE>option</LE>, или если за ним сразу следует элемент <LE>optgroup</LE>, или если в родительском элементе больше нет содержимого."
                    ],
                    "description": [
                        "Элемент <LE>option</LE> отображает вариант из списка элемента <LE>select</LE> или как часть списка вариантов в элементе <LE>datalist</LE>."
                    ],
                    "content_model": [
                        "Если у элемента есть атрибут <LA>label</LA> и атрибут <LA>value</LA> то внутри не должно быть ничего.",
                        "Если у элемента есть атрибут <LA>label</LA>, но нет атрибута <LA>value</LA>, то внутри можно разместить обычный текст.",
                        "Если элемент не имеет атрибута <LA>label</LA> и не является дочерним элементом элемента <LE>datalist</LE>, то внутри можно разместить обычный текст.",
                        "Если элемент не имеет атрибута <LA>label</LA> и является дочерним элементом элемента  <LE>datalist</LE>, то внутри можно разместить обычный текст."
                    ],
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "disabled",
                                "description": "Отключен ли элемент управления формой"
                            },
                            {
                                "name": "label",
                                "description": "Ярлык, видимый пользователем"
                            },
                            {
                                "name": "selected",
                                "description": "Выбрана ли эта опция по умолчанию"
                            },
                            {
                                "name": "value",
                                "description": "Значение, которое будет использоваться для отправки формы"
                            }
                        ]
                    }
                },
                "track": {
                    "tagName": "track",
                    "categories": [
                        "Отсутствуют"
                    ],
                    "tag_omission": [
                        "Закрывающий тег отсутствует."
                    ],
                    "description": [
                        "Элемент `track` позволяет указывать явные внешние синхронизированные текстовые дорожки (`text tracks`) для мультимедийных элементов (`media elements`) <audio> и <video>. Сам по себе он ничего не представляет.",
                        "Такая дорожка может содержать субтитры на разных языках, различные комментарии и заголовки"
                    ],
                    "content_model": "Контент отсутсвует",
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "kind",
                                "description": "Тип дорожки"
                            },
                            {
                                "name": "src",
                                "description": "Путь к файлу"
                            },
                            {
                                "name": "srclang",
                                "description": "Язык дорожки."
                            },
                            {
                                "name": "label",
                                "description": "Название дорожки - отображается пользователю."
                            },
                            {
                                "name": "default",
                                "description": "Дорожка по умолчанию. Только одна дорожка может иметь атрибут default."
                            }
                        ]
                    },
                    "example": false
                },
                "tt": {
                    "tagName": "tt",
                    "categories": [
                        "Отсутствуют"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "тег tt относится к группе тегов физического форматирования."
                    ],
                    "content_model": "Контент отсутсвует",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false
                },
                "wbr": {
                    "tagName": "wbr",
                    "categories": [
                        "flow content",
                        "phrasing content"
                    ],
                    "tag_omission": [
                        "Закрывающий тег отсутствует."
                    ],
                    "description": [
                        "Элемент wbr представляет собой возможность разрыва строки. Данным тегом можно определить где именно будут разрывы в слове при переносе на следующую строку."
                    ],
                    "content_model": "Не имеет",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false
                },
                "var": {
                    "tagName": "var",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент var представляет 'переменную'.",
                        "Это может быть фактическая переменная в математическом выражении или контексте программирования, идентификатор, представляющий константу, символ, идентифицирующий физическую величину, параметр функции, или просто термин в тексте."
                    ],
                    "content_model": "phrasing content",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false
                },
                "video": {
                    "tagName": "video",
                    "categories": [
                        "flow content.",
                        "phrasing content.",
                        "embedded content.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент video используется для воспроизведения видео или фильмов, а также аудиофайлов с субтитрами."
                    ],
                    "content_model": "Контент отсутсвует",
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "src",
                                "description": "Адрес ресурса."
                            },
                            {
                                "name": "crossorigin",
                                "description": "Как элемент обрабатывает запросы на перекрестное происхождение."
                            },
                            {
                                "name": "poster",
                                "description": "Кадр плаката для показа перед воспроизведением видео."
                            },
                            {
                                "name": "preload",
                                "description": "Указывает, сколько буферизации медиаресурса потребуется."
                            },
                            {
                                "name": "playsinline",
                                "description": "Позволяет отображать видеоконтент в области воспроизведения элемента."
                            },
                            {
                                "name": "loop",
                                "description": "Следует ли повторять медиаресурс."
                            },
                            {
                                "name": "muted",
                                "description": "Отключить ли звук медиаресурса по умолчанию."
                            },
                            {
                                "name": "сontrols",
                                "description": "Показать элементы управления пользовательского агента."
                            },
                            {
                                "name": "width",
                                "description": "Горизонтальный размер."
                            },
                            {
                                "name": "autoplay",
                                "description": "Подсказка, что медиаресурс может запускаться автоматически при загрузке страницы."
                            }
                        ]
                    },
                    "example": false
                },
                "caption": {
                    "tagName": "caption",
                    "categories": [
                        "Отсутствуют."
                    ],
                    "tag_omission": [
                        "Конечный тег элемента caption может быть опущен, если за элементом сразу не следует пробел ASCII или комментарий."
                    ],
                    "description": [
                        "Элемент caption представляет заголовок таблицы."
                    ],
                    "fullDescription": true,
                    "content_model": "Отсутствует.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>caption</LE> представляет заголовок таблицы.\n</p>\n\n<p>\n\tЭлемент <LE>caption</LE> участвует в табличной модели.\n</p>\n\n<p>\n\tКогда элемент <LE>table</LE> является единственным содержимым в элементе <LE>figure</LE>, кроме <LE>figcaption</LE>, элемент <LE>caption</LE> заменить <LE>figcaption</LE>.\n</p>\n\n<p>\n\t<LE>caption</LE> может вводить контекст для таблицы, что значительно упрощает понимание.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n\t<caption>\n\t\t<p>Таблица 1.\n\t\t<p>В таблице показан общий балл.\n\t</caption>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "area": {
                    "tagName": "area",
                    "categories": [
                        "slow content",
                        "phrasing content"
                    ],
                    "tag_omission": [
                        "Закрывающий тег отсутствует."
                    ],
                    "description": [
                        "Элемент 'area' представляет собой либо гиперссылку с некоторым текстом и соответствующей областью на карте изображения (image map), либо мертвую область на карте изображения (image map).",
                        "Элемент 'area' должен иметь предка элемент 'map'."
                    ],
                    "content_model": "Отсутствует",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "alt",
                                "description": "Заменяющий текст для использования, когда изображения недоступны."
                            },
                            {
                                "name": "coords",
                                "description": "Координаты формы, которая будет создана на карте изображения."
                            },
                            {
                                "name": "shape",
                                "description": "Тип формы, создаваемой на карте изображения."
                            },
                            {
                                "name": "href",
                                "description": "Адрес гиперссылки"
                            },
                            {
                                "name": "target",
                                "description": "Контекст просмотра для навигации по гиперссылкам"
                            },
                            {
                                "name": "download",
                                "description": "Следует ли загружать ресурс вместо перехода к нему, и имя самого загружаемого файла."
                            },
                            {
                                "name": "ping",
                                "description": "URL-адреса для пинга."
                            },
                            {
                                "name": "rel",
                                "description": "Связь между местом в документе, содержащем гиперссылку, и целевым ресурсом."
                            },
                            {
                                "name": "referrerpolicy",
                                "description": "Политика реферера для выборок, инициированных элементо."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>area</LE> представляет собой либо гиперссылку с некоторым текстом и соответствующей областью на карте изображения (image map), либо мертвую область на карте изображения (image map). Элемент <LE>area</LE> должен иметь предка элемент <LE>map</LE>.\n</p>\n\n<p>\n\t Взамен необходимо использовать более гибкий тег <LE>object</LE>. Между открывающим и закрывающим тегом можно добавить текст, который будет отображаться в браузере, если он не поддерживает апплеты. В противном случае текст не выводится.\n</p>\n\n<p>\n     Если элемент области имеет атрибут <LA>href</LA>, то элемент области представляет собой гиперссылку. В этом случае должен присутствовать атрибут <LA>alt</LA>. Он определяет текст гиперссылки. Его значением должен быть текст - указание для других гиперссылок карты изображения, и с альтернативным текстом изображения, но без самого изображения. Атрибут <LA>alt</LA> можно оставить пустым, если на той же карте изображения есть другой элемент области, который указывает на ту же ссылку и имеет непустой атрибут <LA>alt</LA>.\n</p>\n\n<p>\n     Если элемент <LE>area</LE> не имеет атрибута <LA>href</LA>, то область, представленная элементом, не может быть выбрана, и атрибут <LA>alt</LA> должен быть опущен.\n</p>\n\n<p>\n     Атрибуты <LA>shape</LA> и <LA>coords</LA> определяют площадь.\n</p>\n\n\n\n\n"
                    }
                },
                "bdo": {
                    "tagName": "bdo",
                    "categories": [
                        "flow content.",
                        "phrasing content.",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент bdo представляет собой элемент управления форматированием направления текста для своих дочерних элементов.",
                        "Это позволяет авторам переопределить двунаправленный алгоритм Unicode, верно указав переадресацию направления."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n  Элемент <LE>bdo</LE> представляет собой элемент управления форматированием направления текста для своих дочерних элементов. Это позволяет авторам переопределить двунаправленный алгоритм Unicode, верно указав переадресацию направления.\n</p>\n\n<p>\n  Авторы должны указать атрибут <LA>dir</LA> для этого элемента со значением  <LA>ltr</LA>, чтобы указать направление слева направо, и со значением <LA>rtl</LA> , чтобы указать направление справа налево. Значение <LA>auto</LA> указывать нельзя.\n</p>\n\n\n\n"
                    }
                },
                "acronym": {
                    "tagName": "acronym",
                    "description": [
                        "Элемент acronym служит для выделения в тексте акронима. Данный элемент устарел, используйте элемент <Link to=\"/html-list/abbr\">abbr</Link>"
                    ],
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "fullDescription": true,
                    "obsolete": true,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>acronym</LE> служит для выделения в тексте акронима. Данный элемент устарел, используйте элемент <LE>abbr</LE>\n</p>\n\n<p>\n\t В отличие от аббревиатуры, акроним — это устоявшееся сокращение, которое применяется как самостоятельное слово. \n</p>\n\n<p>\n\tПо умолчанию, текст заключенный в контейнере <LE>acronym</LE> подчеркивается пунктирной линией.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n  \"http://www.w3.org/TR/html4/strict.dtd\">\n \t<html>\n  \t<head>\n   \t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n   \t\t<title>Тег ACRONYM</title>\n   \t<style type=\"text/css\">\n    acronym {\n     border-bottom: 1px dashed blue; \n     color: maroon; \n    }\n   \t</style>\n  \t</head>\n  \t<body> \n  \t\t<p>Северную Америку многие воспринимают толкьо как <acronym title=\"Название страны\">США</acronym>.</p>\n \t</body> \n\t</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "a": {
                    "tagName": "a",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "palpable content",
                        "interactive content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Если элемент <LE>a</LE> имеет атрибут <LA>href</LA>, он представляет собой гиперссылку, представленную ее содержимым.",
                        "Это основной элемент html страницы, служит для связки страниц в единую сеть",
                        "Если элемент <LE>a</LE> не имеет атрибута <LA>href</LA>, тогда элемент представляет собой заглушку, где в противном случае могла бы быть размещена ссылка, состоящая только из содержимого элемента.",
                        "Атрибуты <LA>target</LA>, <LA>download</LA>, <LA>ping</LA>, <LA>rel</LA>, <LA>hreflang</LA>, <LA>type</LA> и <LA>referrerpolicy</LA> должны быть опущены, если атрибут <LA>href</LA> отсутствует."
                    ],
                    "fullDescription": true,
                    "content_model": "---",
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "href",
                                "description": "Адрес гиперссылки"
                            },
                            {
                                "name": "target",
                                "description": "Контекст в котором будет происходить навигация по гиперссылкам"
                            },
                            {
                                "name": "download",
                                "description": "Стоит ли загрузить ресурс по ссылке и название файла если будет выполнена загрузка"
                            },
                            {
                                "name": "ping",
                                "description": "URL-адреса для выполнения уведомлений о переходе по ссылке"
                            },
                            {
                                "name": "rel",
                                "description": "Связь между местом в документе, содержащем гиперссылку, и целевым ресурсом"
                            },
                            {
                                "name": "hreflang",
                                "description": "Язык связанного ресурса"
                            },
                            {
                                "name": "type",
                                "description": "Подсказка для типа ссылочного ресурса"
                            },
                            {
                                "name": "referrerpolicy",
                                "description": "Установка политики реферрера"
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n    Если элемент <LE>a</LE> имеет атрибут <LA>href</LA>, то он представляет собой гиперссылку (гипертекстовую привязку), помеченную ее содержимым.\n</p>\n\n<p>\n    Если элемент <LE>a</LE> не имеет атрибута <LA>href</LA>, тогда элемент представляет собой заполнитель, где в противном случае могла бы быть размещена ссылка, если бы она была релевантной, состоящая только из содержимого элемента.\n</p>\n\n<p>\n    Атрибуты <LE>target</LE>, <LE>download</LE>, <LE>ping</LE>, <LE>rel</LE>, <LE>hreflang</LE>, <LE>type</LE>, и <LE>referrerpolicy</LE> не должны использоваться, если атрибут <LE>href</LE> отсутствует.\n</p>\n\n<p>\n    Если атрибут <LE>itemprop</LE> указан в элементе <LE>a</LE>, то необходимо также указать атрибут <LE>href</LE>.\n</p>\n\n<ExampleBox>\n    Если сайт использует единую панель навигации на каждой странице, то ссылка, которая ведет на саму страницу (текущую), может быть размечена с помощью элемента <LE>a</LE> без атрибута <LA>href</LA>:\n\n    <Code>\n{`<nav>\n    <ul>\n        <li> <a href=\"/\">Home</a> </li>\n        <li> <a href=\"/news\">News</a> </li>\n        <li> <a>Examples</a> </li>\n        <li> <a href=\"/legal\">Legal</a> </li>\n    </ul>\n</nav>`}\n    </Code>\n</ExampleBox>\n\n<p>\n    Атрибуты <LA>href</LA>, <LA>target</LA>, <LA>download</LA>, <LA>ping</LA>, и <LA>referrerpolicy</LA> влияют на то, что происходит, когда пользователи переходят по гиперссылкам или загружают гиперссылки, созданные с помощью элемента <LE>a</LE>.\n</p>\n"
                    }
                },
                "body": {
                    "tagName": "body",
                    "categories": [
                        "sectioning root"
                    ],
                    "tag_omission": [
                        "Начальный тег элемента body может быть опущен, если элемент пустой или если первое, что внутри элемента body не является пробелом ASCII или комментарием, кроме случаев, когда первое, что внутри элемента body - это теги meta, link, script, style, или template",
                        "Конечный тег элемента body может быть опущен, если за элементом body сразу не следует комментарий."
                    ],
                    "description": [
                        "Элемент body представляет содержимое веб страницы (документ / document).",
                        "В документе может быть только один элемент body"
                    ],
                    "content_model": "Контент потока.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "onafterprint",
                                "description": ""
                            },
                            {
                                "name": "onbeforeprint",
                                "description": ""
                            },
                            {
                                "name": "onbeforeunload",
                                "description": ""
                            },
                            {
                                "name": "onhashchange",
                                "description": ""
                            },
                            {
                                "name": "onlanguagechange",
                                "description": ""
                            },
                            {
                                "name": "onmessage",
                                "description": ""
                            },
                            {
                                "name": "onmessageerror",
                                "description": ""
                            },
                            {
                                "name": "onoffline",
                                "description": ""
                            },
                            {
                                "name": "ononline",
                                "description": ""
                            },
                            {
                                "name": "onpagehide",
                                "description": ""
                            },
                            {
                                "name": "onpageshow",
                                "description": ""
                            },
                            {
                                "name": "onpopstate",
                                "description": ""
                            },
                            {
                                "name": "onrejectionhandled",
                                "description": ""
                            },
                            {
                                "name": "onstorage",
                                "description": ""
                            },
                            {
                                "name": "onunhandledrejection",
                                "description": ""
                            },
                            {
                                "name": "onunload",
                                "description": ""
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>body</LE> представляет содержимое веб страницы (документ / document). В документе может быть только один элемент <LE>body</LE>\n</p>\n\n<p>\n\tЭлемент <LE>body</LE> содержит в себе атрибуты для <LE>Window</LE>. Он также отражает их IDL-атрибуты.\n</p>\n\n<p>\n\tПомощники <LE>Window</LE>, названные Window-reflecting body element event handler set, отражают окно, представленное в элементе <LE>body</LE>, заменяют event handlers теми же именами, которые обычно поддерживаются элементами HTML.\n</p>\n\n\n<ExampleBox>\n\tНа этой странице обновляется индикатор, чтобы показать, находится ли пользователь в сети:\n\n<Code>\n{`\n<!DOCTYPE HTML>\n<html lang=\"en\">\n \t<head>\n  \t<title>В сети или нет?</title>\n  \t<script>\n  \t\t function update(online) {\n    \t document.getElementById('status').textContent =\n      \t online ? 'Online' : 'Offline';\n   \t}\n \t</script>\n \t</head>\n \t<body \tononline=\"update(true)\"\n      \t\tonoffline=\"update(false)\"\n       \t\tonload=\"update(navigator.onLine)\">\n  \t\t\t<p>Ты: <span id=\"status\">(Неизвестно)</span></p>\n \t</body>\n</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "abbr": {
                    "tagName": "abbr",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент abbr представляет собой аббревиатуру или акроним, необязательно с его расшифровкой.",
                        "Атрибут title может использоваться для расширения аббревиатуры. Атрибут, если он указан, должен содержать расшифровку аббревиатуры и ничего больше."
                    ],
                    "content_model": "---",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "title",
                                "description": "Глобальный атрибут title имеет особую семантику"
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n    Элемент <LE>abbr</LE> представляет собой аббревиатуру или акроним, необязательно с его расшифровкой.\n</p>\n\n<p>\n    Атрибут <LA>title</LA> может использоваться для расширения аббревиатуры. Атрибут, если он указан, должен содержать расшифровку аббревиатуры и ничего больше.\n</p>\n\n<ExampleBox>\n    Приведенный ниже абзац содержит аббревиатуру, помеченную элементом <LE>abbr</LE>. В этом абзаце дается определение термину «Веб приложение для разработки технологий».\n\n<Code>\n{`\n<p>\n    <dfn id=whatwg><abbr title=\"Web Hypertext Application Technology Working Group\">WHATWG</abbr></dfn> -\n    это неофициальное объединение производителей веб-браузеров, которое позволяет авторам писать и размещать \n    приложения во всемирной сети.\n</p>\n`}\n</Code>\n\nДругой способ написать это же предложение:\n\n<Code>\n{`\n<p>\n    The <dfn id=whatwg>Web Hypertext Application Technology Working Group</dfn>\n    (<abbr title=\"Web Hypertext Application Technology Working Group\">WHATWG</abbr>) -\n    это неофициальное объединение производителей веб-браузеров, которое позволяет авторам писать и размещать \n    приложения во всемирной сети.\n</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n    Этот абзац состоит из двух аббервиатур. Обратите внимание, что только одна из них выделяется; другая не использует элемент <LE>abbr</LE>.\n\n<Code>\n{`\n<p>\n    <abbr title=\"Web Hypertext Application Technology Working Group\">WHATWG</abbr> \n    начала работать в HTML5 в 2004.\n</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n    В этом примере аббревиатура связана с ее расшифровкой.\n\n<Code>\n{`\n<p>\n    <a href=\"#whatwg\"><abbr title=\"Web Hypertext Application Technology Working Group\">WHATWG</abbr></a>\n    сообщество не имеет большого колличества представителей в Азии.\n</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n    В следующем примере аббревиатура указана без расширения, возможно, чтобы применить стиль сокращения (например, smallcaps).\n\n<Code>\n{`\n<p>\n    Филипп и Дашива отрицали то, что решили избежать возможного возникновения проблем из-за прошлого редактирования спецификации, и заполнили график возникших проблем <abbr> WHATWG </abbr> в свою пользу.\n</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<p>\n    Если аббревиатура представлена во множественном числе, то ее раскрытие (множественное или единственное число) должено соответствовать содержимому элемента.\n</p>\n\n<ExampleBox>\n    Здесь показатель множественного числа находится вне элемента, поэтому расширение поставлено в единственном числе:\n\n<Code>\n{`\n<p>\n    Двое <abbr title=\"Working Group\">WG</abbr> \n    работают над спецификацией: <abbr>WHATWG</abbr> и\n    <abbr>HTMLWG</abbr>.\n</p>\n`}\n</Code>\n\nВ этом примере множественное число находится внутри элемента, поэтому расширение представлено во множественном числе:\n\n<Code>\n{`\n<p>\n    Двое <abbr title=\"Working Groups\">WGs</abbr> работают над специализацией: <abbr>WHATWG</abbr> и\n    <abbr>HTMLWG</abbr>.\n</p>\n`}\n</Code>\n\n<p>\n    Аббревиатуры не нужно выделять с помощью этого элемента всегда. Это будет полезно в следующих случаях:\n</p>\n<p>\n<ul>\n    <li>Аббревиатуры, для которых автор хочет расшифровку, используют элемент <LE>abbr</LE> с атрибутом <LA>title</LA>, он является альтернативой для другимх видов расшифровки (например, в круглых скобках).</li>\n    <li>Некоторые аббревиатуры могут быть незнакомы читателям документа, авторам в таком случае рекомендуется либо выделить аббревиатуру с помощью элемента <LE>abbr</LE> с атрибутом <LA>title</LA>, либо напсиать расшифровку в строку при первом упоминании аббревиатуры.</li>\n    <li>Аббревиатуры, для которых требуется описание, к примеру, для того, чтобы они могли быть идентифицированы по стилю, используют элемент <LE>abbr</LE> без атрибута <LA>title</LA>.</li>\n</ul>\n</p>\n\n<p>\n    Использование атрибута <LA>title</LA> единожды в тексте не обязательно приведет к тому, что другие элементы <LE>abbr</LE> в том же документе будут с тем же содержимым, но без использования атрибута <LA>title</LA> они будут вести себя одинокого. Каждый элемент <LE>abbr</LE> независим.\n</p>\n\n</ExampleBox>"
                    }
                },
                "em": {
                    "tagName": "em",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент <LE>em</LE> акцентирует внимание на своем содержании.",
                        "Масштаб акцента, который испытывает тот или иной фрагмент, определяеься количеством предыдущих <LE>em</LE> элементтов.",
                        "Расположение акцента меняет смысл предложения. Таким образом, данный элемент составляет важную часть контента. Эффективный путь использования ударения зависит от языка."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n    Элемент <LE>em</LE> акцентирует внимание на своем содержании. Масштаб акцента, который испытывает тот или иной фрагмент, определяеься количеством предыдущих <LE>em</LE> элементтов. Расположение акцента меняет смысл предложения. Таким образом, данный элемент составляет важную часть контента. Эффективный путь использования ударения зависит от языка.\n</p>\n\n<ExampleBox>\n\nДанный пример покзывает, как изменеие акцента меняет само предложение. Во-первых, когда мы говорим о каком-либо факте, без акцентирования:\n\n<Code>\n{`\n<p>\nCats are cute animals.\n</p>\n`}\n</Code>\n\nКогда мы обращаем внимние на первое слово, подразумевается, что речь идет о виде животного (возможно, кто-то полагает, что собаки - милые):\n\n<Code>\n{`\n<p>\n    <em>Cats</em> are cute animals.\n</p>\n`}\n</Code>\n\nКогда мы акцентируем внимание на глаголе, подчеркивается то, что истинность самого предложения может быть сомнительной (возможно, кто-то считает, что кошки не милые):\n\n<Code>\n{`\n<p>\n    Cats <em>are</em> cute animals.\n</p>\n`}\n</Code>\n\nПри акценте внимания на прилагательном, мы обращаем внимание на природу кошек (возможно, кто-то думет, что кошки были злыми):\n\n<Code>\n{`\n<p>\n    Cats are <em>cute</em> animals.\n</p>\n`}\n</Code>\n\nТакже, если бы кто-то думал, что кошки - это овощи, то можно было бы изменить мнение, выделив даное слово:\n\n<Code>\n{`\n<p>\n    Cats are cute <em>animals</em>.\n</p>\n`}\n</Code>\n\nЕсли выделить все предложение целиком, то становится понятно, что говорящий максимально пытается передать суть всего предложения. Этот вид акцентирования обычно влияет на пунктуацию, поэтому появляется восклицательный знак:\n\n<Code>\n{`\n<p>\n    <em>Cats are cute animals!</em>\n</p>\n`}\n</Code>\n\nПредложение, содержащее долю гнева одновременно с привлекательностью, может содержать разметку такого типа:\n\n<Code>\n{`\n<p>\n    <em>Cats are <em>cute</em> animals!</em>\n</p>\n`}\n</Code>\n\n</ExampleBox>\n"
                    }
                },
                "dfn": {
                    "tagName": "dfn",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент <LE>dfn</LE> представляет собой термин или аббревиатуру.",
                        "Близлежащий абзац, список или раздел к элементу <LE>dfn</LE> должен содержать его расшифровку или описание."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>dfn</LE> представляет собой термин или аббревиатуру. Близлежащий абзац, список или раздел к элементу <LE>dfn</LE> должен содержать его расшифровку или описание.\n</p>\n\n<p>\n\tОпределение термина: если элемент <LE>dfn</LE> имеет атрибут <LE>title</LE>, значит значение атрибута определяется термином. В случае того, когда он содержит в себе только один дочерний элемент и не содержит <LE>text</LE>, то такой дочерний элемент является <LE>abbr</LE> с атрибутом <LE>title</LE>, чем и определяется точное значение данного атрибута. В противном случае термин выдает содержимое элемента <LE>dfn</LE>\n</p> \n\n<p>\n\tЕсли атрибут <LE>title</LE> находится в <LE>dfn</LE>, то он содержит только определяемый термин. \n</p>\n\n<p>\n\tЭлемент <LE>a</LE>, который ссылается на <LE>dfn</LE>, представляет собой термин (он описывается при помощи <LE>dfn</LE>)\n</p>\n\n<ExampleBox>\n\nВ следующем фрагменте термин \"Garage Door Opener\" сначала присутствует в первом абзаце, а потом появляется во втором. В обоих случаях по факту отображается только его аббревиатура. \n\n<Code>\n{`\n<p>\n\t<dfn><abbr title=\"Garage Door Opener\">GDO</abbr></dfn>\n\tэто устройство, которое позволяет исследовать радужную оболочку глаза.\n</p>\n<!-- ... later in the document: -->\n<p>\n\tТил привел в действие <abbr title=\"Garage Door Opener\">GDO</abbr>\n\tзатем Хаммонд принялся исследовать радужную оболочку.\n</p>\n`}\n</Code>\n\nС помощью элемента <LE>a</LE> ссылку можно сделать заметной:\n\n<Code>\n{`\n<p>\n\t<dfn id=gdo><abbr title=\"Garage Door Opener\">GDO</abbr></dfn>\n\tэто устройство, которое позволяет исследовать радужную оболочку глаза.\n</p>\n<!-- ... later in the document: -->\n<p>\n\tТил привел в действие <a href=#gdo><abbr title=\"Garage Door Opener\">GDO</abbr></a>\n\tзатем Хаммонд принялся исследовать радужную оболочку.\n</p>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "center": {
                    "tagName": "center",
                    "categories": [
                        "Отсутствуют."
                    ],
                    "tag_omission": [
                        "Закрывающий тег обязателен."
                    ],
                    "description": [
                        "Тег center выравнивает содержимое контейнера по центру относительно родительского элемента."
                    ],
                    "fullDescription": true,
                    "content_model": "Отсутствует.",
                    "content_attributes": {
                        "global_attributes": false
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tТег <LE>center</LE> выравнивает содержимое контейнера по центру относительно родительского элемента.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n\t<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n\t<html>\n \t<head>\n  \t\t\t<title>Тег CENTER</title>\n  \t\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n \t</head>\n \t<body> \n \t\t\t<center>\n\t\t\t  \t<p>Текст выравнивается по центру.</p>\n  \t\t\t</center>  \n \t</body> \n\t</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "font": {
                    "tagName": "font",
                    "categories": [
                        "Отсутствуют."
                    ],
                    "tag_omission": [
                        "Закрывающий тег обязателен."
                    ],
                    "description": [
                        "Тег font представляет собой контейнер для изменения характеристик шрифта, таких как размер, цвет и гарнитура."
                    ],
                    "content_model": "Отсутствует.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "color",
                                "description": "Устанавливает цвет текста."
                            },
                            {
                                "name": "face",
                                "description": "Определяет гарнитуру шрифта."
                            },
                            {
                                "name": "size",
                                "description": "Задает размер шрифта в условных единицах."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n  Тег <LE>font</LE> представляет собой контейнер для изменения характеристик шрифта, таких как размер, цвет и гарнитура. Хотя этот тег до сих пор поддерживается всеми браузерами, он считается устаревшим и от его использования рекомендуется отказаться в пользу стилей.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n   \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n \t  <head>\n  \t  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n  \t\t\t<title>Тег FONT</title>\n \t  </head>\n \t  <body>\n  \t\t\t<p><font size=\"5\" color=\"red\" face=\"Arial\">П</font>ервая буква этого предложения \n    \t\tнаписана шрифтом Arial, выделена красным цветом и увеличена в размерах.</p>\n \t  </body>\n</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "basefont": {
                    "tagName": "basefont",
                    "categories": [
                        "Отсутствует."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Тег basefont предназначен для задания шрифта, размера и цвета текста по умолчанию."
                    ],
                    "content_model": [
                        "Контент отсутствует."
                    ],
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "color",
                                "description": "Устанавливает цвет текста."
                            },
                            {
                                "name": "face",
                                "description": "Определяет гарнитуру шрифта."
                            },
                            {
                                "name": "size",
                                "description": "Задает размер шрифта в условных единицах."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tТег <LE>basefont</LE> предназначен для задания шрифта, размера и цвета текста по умолчанию. Указанные значения будут использоваться во всем документе за исключением тега <LE>font</LE>, в котором можно переопределить параметры оформления текста. Допускается использование тега в контейнере <LE>head</LE> или <LE>body</LE>, причем несколько раз. Это позволяет изменять вид шрифта для части документа.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n  \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n \t<head>\n  \t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n \t\t\t <title>Тег BASEFONT</title>\n \t</head>\n \t<body>\n  \t\t\t<basefont face=\"Arial, Helvetica, sans-serif\" size=\"4\" color=\"maroon\">\n  \t\t\t<p>Страница оформлена с помощью тега BASEFONT</p>\n \t</body>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "address": {
                    "tagName": "address",
                    "categories": [
                        "flow content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент <LE>address</LE> показывает контактную информацию и находится вблизи элементов <LE>article</LE> или <LE>body</LE>.",
                        "Если это основной элемент, то контактная информация применяется ко всему документу."
                    ],
                    "fullDescription": true,
                    "content_model": "Базовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>address</LE> показывает контактную информацию и находится вблизи элементов <LE>article</LE> или <LE>body</LE>. Если это основной элемент, то контактная информация применяется ко всему документу.\n</p>\n\n<ExampleBox>\n\nНапример, страница веб-сайта W3C, связанная с HTML, может включать следующую контактную информацию:\n\n<Code>\n{`\n<ADDRESS>\n \t<A href=\"../People/Raggett/\">Дейв Раггет</A>,\n\t<A href=\"../People/Arnaud/\">Эранд Ле Хорс</A>,\n \tможете связаться с данными людьми <A href=\"Activity\">W3C HTML Activity</A>\n</ADDRESS>\n`}\n</Code>\n\n</ExampleBox>\n\n<p>\n\tЭлемент <LE>address</LE> не должен использоваться для ссылки на произвольные адреса (например, почтовые адресов), если только эти адреса не являются необходимой контактной информацией. (Элемент <LE>p</LE> является подходящим элементом для разметки почтовых адресов в целом.)\n</p>\n\n<p>\n\tЭлемент <LE>address</LE> не должен содержать никакой другой информации, кроме контактной информации.\n</p>\n\n<ExampleBox>\n\nПример ниже является некорректным для использованием элемента <LE>address</LE>\n\n<Code>\n{`\n<ADDRESS>Last Modified: 1999/12/24 23:37:50</ADDRESS>\n`}\n</Code>\n\n</ExampleBox>\n\n<p>\n\tОбычно элемент <LE>address</LE> включается вместе с другой информацией в элемент <LE>footer</LE>.\n</p>\n\n<p>\n\tКонтактная информация для узла сети <i>node</i> представляет собой набор элементов адреса в соответствии пунктами из следующего списка:\n</p>\n\n<p>\n<ul>\n    <li><b>Если <i>узел сети (node)</i> - это элемент <LE>article</LE></b></li>\n    <li><b>Если <i>узел сети (node)</i> - это элемент <LE>body</LE></b></li>\n    Контактная информация состоит из всех элементов <LE>address</LE>, в которых включен <i>узел сети (node)</i> в качестве предка и они не имеют другого предка с элементами <LE>body</LE> или <LE>article</LE>, которые являлияь бы потомком <i>узел сети (node)</i>.\n    <li><b>Если у<i>узела сети (node)</i> есть элемент-предок <LE>article</LE></b></li>\n    <li><b>Если у<i>узела сети (node)</i> есть элемент-предок <LE>body</LE></b></li>\n    Контактная информация <i>узела сети (node)</i> совпадает с контактной информацией ближайшего предка элемента <LE>article</LE> или <LE>body</LE>, в зависимости от того, какой из них ближайший.\n    <li><b>Если <i>узел сети (node)</i> содержит  <i>node document</i> и <LE>body</LE> элемент.</b></li>\n    Контактная информация <i>узла сети (node)</i> совпадает с контактной информацией элемента <LE>body</LE> в документе.\n    <li><b>Другие случаи</b></li>\n    Контактная информация для <i>узла сети (node)</i> отсутствует.\n</ul>\n</p>\n\n<p>\n\tПользовательские агенты могут предоставлять пользователю контактную информацию <i>узла сети (node)</i> или использовать ее для других целей, таких как индексация разделов на основе контактной информации данных разделов.\n</p>\n\n<ExampleBox>\n\nВ этом примере <LE>footer</LE> содержит контактную информацию и уведомление об авторских правах.\n\n<Code>\n{`\n<footer>\n \t<address>\n  \t\tFor more details, contact\n  \t\t<a href=\"mailto:js@example.com\">John Smith</a>.\n \t</address>\n \t<p>\n \t\t<small>© copyright 2038 Example Corp.</small>\n\t </p>\n</footer>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "fieldset": {
                    "tagName": "fieldset",
                    "categories": [
                        "flow content",
                        "sectioning root",
                        "listed",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент fieldset представляет собой набор элементов управления формой (или другого содержимого), сгруппированных вместе, необязательно с заголовком.",
                        "Заголовок задается первым элементом legend, который является дочерним элементом элемента fieldset, если таковой имеется.",
                        "Остальные дочерние элементы образуют группу."
                    ],
                    "fullDescription": true,
                    "content_model": "flow content.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>fieldset</LE> представляет собой набор элементов управления формой (или другого содержимого), сгруппированных вместе, необязательно с заголовком. Заголовок задается первым элементом <LE>legend</LE>, который является дочерним элементом элемента <LE>fieldset</LE>, если таковой имеется. Остальные дочерние элементы образуют группу.\n</p>\n\n<p>\n\tАтрибут <LA>disabled</LA>, если он указан, вызывает отключение всех дочерних элементов <LE>fieldset</LE>, за исключением тех, которые являются дочерними элементами первого элемента <LE>legend</LE> элемента <LE>fieldset</LE>, если таковые имеются. \n</p>\n\n<p>\n\tЭлемент <LE>fieldset</LE> является неактивным набором полей, если он соответствует любому из следующих условий:\n</p>\n\n<p>\n    <ul>\n        <li>Указывается <LA>disabled</LA> атрибут</li>\n        <li>Это дочерний элемент другого элемента <LE>fieldset</LE>, для которого указан атрибут <LA>disabled</LA>, и не является дочерним элементом <LE>legend</LE> и <LE>fieldset</LE>, если таковой имеется.</li>\n    </ul>\n</p>\n\n<p>\n\tАтрибут <LA>form</LA> используется для явного связывания элемента <LE>fieldset</LE> с его главным элементом. Атрибут <LA>name</LA> представляет имя элемента.\n</p>\n\n<p>\n\tАтрибут <LA>disabled</LA> IDL должен отражать атрибут содержимого с тем же именем.\n</p>\n\n<p>\n\tАтрибут IDL <LA>type</LA> должен возвращать строку «fieldset».\n</p>\n\n<p>\n\tАтрибут IDL <LE>elements</LE> должен возвращать HTMLCollection в корень элемента <LE>fieldset</LE>.\n</p>\n\n<p>\n\tАтрибуты <LA>willValidate</LA>, <LA>validity</LA> и <LA>validationMessage</LA>, а также методы checkValidity (), reportValidity () и setCustomValidity () являются частью API проверки. Атрибуты IDL <LA>name</LA> и <LA>form</LA> являются частью API форм элемента.\n</p>\n\n<ExampleBox>\n\nВ этом примере показан элемент <LE>fieldset</LE>, используемый для группировки набора связанных элементов управления:\n\n<Code>\n{`\n<fieldset>\n \t<legend>Экран</legend>\n \t<p><label><input type=radio name=c value=0 checked> Черно-белое</label>\n \t<p><label><input type=radio name=c value=1>Белое на черном</label>\n \t<p><label><input type=checkbox name=g> Использовать серый</label>\n \t<p><label>Контраст<input type=range name=e list=contrast min=0 max=100 value=0 step=1></label>\n \t<datalist id=contrast>\n  \t\t<option label=Normal value=0>\n  \t\t<option label=Maximum value=100>\n\t</datalist>\n</fieldset>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ следующем фрагменте показан <LE>fieldset</LE> с отметкой в <LE>legend</LE>, который определяет, включен ли <LE>fieldset</LE>. Содержимое <LE>fieldset</LE> состоит из двух обязательных текстовых элементов управления и дополнительного элемента управления годом / месяцем.\n\n<Code>\n{`\n<fieldset name=\"clubfields\" disabled>\n \t<legend> <label>\n \t <input type=checkbox name=club onchange=\"form.clubfields.disabled = !checked\">\n \t\t Используйте клубную карту\n \t</label> </legend>\n \t<p><label>Название карты: <input name=clubname required></label></p>\n\t<p><label>Номер карты: <input name=clubnum required pattern=\"[-0-9]+\"></label></p>\n \t<p><label>Дата: <input name=clubexp type=month></label></p>\n</fieldset>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВы также можете вкладывать элементы в <LE>fieldset</LE>. Вот пример, расширяющий предыдущий, показывающий это:\n\n<Code>\n{`\n<fieldset name=\"clubfields\" disabled>\n\t<legend> <label>\n  \t<input type=checkbox name=club onchange=\"form.clubfields.disabled = !checked\">\n  \t\tИспользовать клубную карту\n \t</label> </legend>\n \t<p><label>Название карты: <input name=clubname required></label></p>\n<fieldset name=\"numfields\">\n  \t<legend> <label>\n   \t<input type=radio checked name=clubtype onchange=\"form.numfields.disabled = !checked\">\n  \t\t На моей карте есть номер\n  \t</label> </legend>\n  \t<p><label>Номер карты: <input name=clubnum required pattern=\"[-0-9]+\"></label></p>\n</fieldset>\n<fieldset name=\"letfields\" disabled>\n \t<legend> <label>\n\t<input type=radio name=clubtype onchange=\"form.letfields.disabled = !checked\">\n\t   На моей карте есть буквы\n  \t</label> </legend>\n \t <p><label>Код: <input name=clublet required pattern=\"[A-Za-z]+\"></label></p>\n</fieldset>\n</fieldset>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ этом примере показано группирование элементов управления, в котором элемент <LE>legend</LE> обозначает группировку, а вложенный элемент заголовка отображает группировку в структуре документа:\n\n<Code>\n{`\n<fieldset>\n \t<legend> <h2>\n  \t\tКак вы можете связаться с нами?\n \t</h2> </legend>\n \t<p> <label>\n \t<input type=radio checked name=contact_pref>\n \t\t Телефон\n \t</label> </p>\n \t<p> <label>\n \t <input type=radio name=contact_pref>\n \t\t Текст\n\t</label> </p>\n \t<p> <label>\n \t <input type=radio name=contact_pref>\n \t\t Почта\n \t</label> </p>\n</fieldset>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "blockquote": {
                    "tagName": "blockquote",
                    "categories": [
                        "flow content.",
                        "sectioning root.",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент blockquote представляет собой текст, цитируемый из другого источника."
                    ],
                    "fullDescription": true,
                    "content_model": "flow content.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n  Элемент <LE>blockquote</LE> представляет собой текст, цитируемый из другого источника.\n</p>\n\n<p>\n  Контент внутри <LE>blockquote</LE> должен быть процитирован из другого источника, адрес которого, если он есть, может быть указан в атрибуте <LA>cite</LA>.\n</p>\n\n<p>\n  Если атрибут <LA>cite</LA> присутствует, то должен быть действительный URL, окруженный пробелами. Чтобы получить соответствующую ссылку для цитирования, значение атрибута должно быть проанализировано относительно узла элемента в жокументе. Пользовательские агенты могут позволять пользователям переходить по таким ссылкам для цитирования, но они в первую очередь они предназначены для частного использования (например, серверными скриптами, собирающими статистику об использовании сайтом цитат), а не для читателей.\n</p>\n\n<p>\n  Содержание <LE>blockquote</LE> может быть сокращено или может иметь обычный контекст.\n</p>\n\n<ExampleBox>\n\nНапример, в английском языке это традиционно делается с использованием квадратных скобок. Рассмотрим страницу с предложением «Джейн съела крекер. Затем она сказала, что любит яблоки и рыбу»; его можно процитировать следующим образом:\n\n<Code>\n{`\n<blockquote>\n \t<p>[Джейн] затем сказала, что любит [...] рыбу.</p>\n</blockquote>\n`}\n</Code>\n\n</ExampleBox>\n\n<p>\n  Ссылка на цитату, если таковая имеется, должна быть размещена вне элемента <LE>blockquote</LE>.\n</p>\n\n<ExampleBox>\n\nНапример, здесь авторство указано в абзаце после цитаты:\n\n<Code>\n{`\n<blockquote>\n \t<p>Я утверждаю, что мы оба атеисты. Я просто верю, что Бог внутри каждого из нас. Поэтому я отказываюсь от всех богов.</p>\n</blockquote>\n<p>— Стефен Робертс</p>\n`}\n</Code>\n\nВ других примерах ниже показаны другие способы указания авторства.\n\n</ExampleBox>\n\n<p>\n  IDL-атрибут <LA>cite</LA> должен отражать атрибут содержимого <LA>cite</LA> элемента.\n</p>\n\n<ExampleBox>\n\nЗдесь элемент <LE>blockquote</LE> используется вместе с элементом <LE>figure</LE> и его <LE>figcaption</LE>, чтобы четко связать цитату с ее значением (которое не является частью цитаты и, следовательно, не входит в сам <LE>blockquote</LE>):\n\n<Code>\n{`\n<figure>\n\t<blockquote>\n\t   <p>Правда может вызывать недоумение. Придется поразмыслить.\n\t   Это может показаться нелогичным. Это может противоречить глубоко укоренившимся\n\t   предрассудкам. Это может не соответствовать тому, чего мы отчаянно хотим\n\t   видеть в настоящем. Но наши предпочтения не определяют правду. У нас есть\n\t   способ, и этот способ помогает нам достичь не абсолютной истины, а только\n\t   освоить подходы к истине - просто ближе\n\t   и ближе, всегда находя огромные новые океаны неизведанных\n\t   возможностей. Ключ к успеху - грамотно спланированные эксперименты.</p>\n \t</blockquote>\n \t<figcaption>\n \t\tКарл Саган в \"<cite>Удивительном скептицизме</cite>\", из <cite>Опрос скептиков</cite> том 19, выпуск 1 (январь-февраль 1995)\n \t</figcaption>\n</figure>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ следующем примере показано использование <LA>cite</LA> вместе с <LE>blockquote</LE>:\n\n<Code>\n{`\n<p>\n\tЕго следующая работа была названа <cite>Сонета 130</cite>:\n</p>\n<blockquote cite=\"https://quotes.example.org/s/sonnet130.html\">\n  \tГлаза моей госпожи похожи на солнце,<br>\n  \tЕе губы красны как коралл,<br>\n  ...\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ этом примере показано, как сообщение на форуме может использовать <LE>blockquote</LE>, чтобы показать, на какое сообщение отвечает пользователь. Элемент <LE>article</LE> используется для каждого сообщения, чтобы продолжать цепочку сообщений.\n\n<Code>\n{`\n<article>\n \t<h1><a href=\"https://bacon.example.com/?blog=109431\">Бекон</a></h1>\n    <article>\n  \t\t<header><strong>t3yw</strong> 12 баллов 1 час назад</header>\n  \t\t<p>Точно скажу, что narwhal понравилось бы.</p>\n  \t\t<footer><a href=\"?pid=29578\">permalink</a></footer>\n  \t<article>\n  \t\t<header><strong>greg</strong> 8 балловs 1 час назад</header>\n   \t\t<blockquote><p>Точно скажу, что narwhal понравилось бы.</p></blockquote>\n   \t\t<p> narwhals не ест бекон.</p>\n   \t\t<footer><a href=\"?pid=29579\">permalink</a></footer>\n    <article>\n   \t\t <header><strong>t3yw</strong> 15 баллов 1 час назад</header>\n   \t\t <blockquote>\n    \t\t<blockquote><p>Точно скажу, что narwhal понравилось бы</p></blockquote>\n    \t\t<p>narwhals не ест бекон.</p>\n   \t\t</blockquote>\n    \t<p>Следующее, что вы скажете, у них нет плаща волшебника\n        шляпы тоже нет!</p>\n   \t\t<footer><a href=\"?pid=29580\">permalink</a></footer>\n    <article>\n    <article>\n      \t<header><strong>boing</strong> -5 баллов 1 час назад</header>\n     \t<p>narwhals глупее, чем стена!</p>\n      \t<footer><a href=\"?pid=29581\">permalink</a></footer>\n    </article>\n    </article>\n   \t</article>\n    </article>\n    <article>\n   \t\t<header><strong>fred</strong> 1 балл 23 минуты назад</header>\n   \t\t<blockquote><p>Точно скажу, что narwhal понравилось бы.</p></blockquote>\n   \t\t<p>Он бы еще и банан почистил.</p>\n   \t\t<footer><a href=\"?pid=29582\">permalink</a></footer>\n  \t</article>\n \t</article>\n</article>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ этом примере показано использование <LE>blockquote</LE> для коротких фрагментов, не обязательно использовать элементы <LE>p</LE> внутри элементов <LE>blockquote</LE>:\n\n<Code>\n{`\n<p>Он начал свой список «правил» со следующего:</p>\n<blockquote>Никогда не думайте, что ваш недостаток заметят, не говоря уже о заслугах.</blockquote>\n<p>Он продолжил:</p>\n<blockquote>Нужно быть готовым к угрозе\nсрыва переговоров в любой момент, не\nбояться такой возможности.</blockquote>\nТеперь обсудим эти моменты ...\n`}\n</Code>\n\n</ExampleBox>"
                    }
                },
                "big": {
                    "tagName": "big",
                    "categories": [
                        "Отсутствует."
                    ],
                    "tag_omission": [
                        "Закрывающий тег обязателен."
                    ],
                    "description": [
                        "Тег big увеличивает размер шрифта на единицу по сравнению с обычным текстом."
                    ],
                    "content_model": [
                        "Контент отсутствует."
                    ],
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tТег <LE>big</LE> увеличивает размер шрифта на единицу по сравнению с обычным текстом. В HTML размер шрифта измеряется в условных единицах от 1 до 7, средний размер текста, используемый по умолчанию, принят 3. Таким образом, добавление тега <LE>big</LE> увеличивает текст на одну условную единицу. Допускается применение вложенных тегов <LE>big</LE>, при этом размер шрифта будет больше с каждым уровнем.\n</p>\n\n<p>\n\tНа размер шрифта влияет не только заданный атрибут <LA>size</LA> тега <LE>font</LE>, но и выбор гарнитуры шрифта. Шрифт Arial выглядит крупнее, чем шрифт Times, а шрифт Verdana чуть больше шрифта Arial. Учитывайте эту особенность при выборе шрифта и его размеров. Для более точного управления размером текста используйте стили.\n</p>\t\n\n<ExampleBox>\n\n<Code>\n{`\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \n  \"http://www.w3.org/TR/html4/strict.dtd\">\n<html>\n\t <head>\n \t <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n \t\t\t <title>Тег BIG</title>\n \t</head>\n \t<body>\n \t\t\t<p><big><big>Можно увеличить шрифт по-разному</big></big></p>\n\t\t\t<p><big>Например,</big> вот так. <big>Или</big>таким образом</p>\n \t</body>\n</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "aside": {
                    "tagName": "aside",
                    "categories": [
                        "flow content",
                        "sectioning content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент aside представляет собой раздел страницы, состоящий из контента, который косвенно связан с контентом вокруг элемента aside, также его можно рассматривать как отдельный от контента.",
                        "Такие разделы часто представлены в виде боковых панелей."
                    ],
                    "fullDescription": true,
                    "content_model": "flow content.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n    Элемент <LE>aside</LE> представляет собой раздел страницы, состоящий из контента, который косвенно связан с контентом вокруг элемента <LE>aside</LE>, также его можно рассматривать как отдельный от контента. Такие разделы часто представлены в виде боковых панелей.\n</p>\n\n<p>\n    Элемент может использоваться для типографских эффектов, таких как кавычки или боковые панели, для рекламы, для групп навигационных элементов и для другого содержимого, которое считается отдельным от основного содержимого страницы.\n</p>\n\n<ExampleBox>\n\nВ следующем примере показано, как <LE>aside</LE> используется для разметки справочного материала о Швейцарии в длинном выпуске новостей о Европе.\n\n<Code>\n{`\n<aside>\n \t<h1>Швейцария</h1>\n \t<p>Швейцария не имеет выхода к морю, она находится в центре\n \t Европы, не присоединена к Европейскому Союзу, хотя подписала ряд европейских договоров.</p>\n</aside>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ следующем примере показано, как <LE>aside</LE> используется для разметки цитаты в более длинной статье.\n\n<Code>\n{`\n...\n\t<p>Позже он присоединился к крупной компании и продолжил работать.\n\t\t<q>Я люблю свою работу. Меня спрашивают, чем я занимаюсь. Мне платят за то, что я занимаюсь своим хобби, поэтому я никогда не знаю, чем на самом деле заняться и что ответить. Некоторые люди задаются вопросом, чем бы они занимались, если бы им не пришлось работать ... но я уже знаю, чем займусь, потому что я был безработным какое-то время.\n\t\tПримерно год, и я заполнил это время, сейчас я продолжаю делать ту работу, что и раньше.</q>\n\t</p>\n\t<aside>\n \t\t<q>Люди спрашивают меня, чем я занимаюсь в свободное от работы время. Но мне платят за мое хобби, поэтому я никогда не знаю, что ответить.</q>\n\t</aside>\n\t<p>Конечно, его работа - это хобби? - не единственная же его страсть. Он получает удовольствие и от другой деятельсноти.\n\t</p>\n...\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nСледующий пример показывает, как можно использовать <LE>aside</LE> для блогов:\n\n<Code>\n{`\n<body>\n<header>\n  \t<h1>Мой прекрасный блог</h1>\n  \t<p>My подзагаловок</p>\n</header>\n<aside>\n  \t<!-- здесь aside содержит два раздела, которые связаны на странице: ссылки и другие сообщения в блогах  -->\n  \t<nav>\n   \t\t<h1>Мой список</h1>\n  \t\t <ul>\n   \t\t\t <li><a href=\"https://blog.example.com/\">Пример блога</a>\n   \t\t</ul>\n  \t</nav>\n  \t<nav>\n  \t\t<h1>Архив</h1>\n   \t\t<ol reversed>\n   \t\t\t<li><a href=\"/last-post\">Мой последний пост</a>\n    \t\t<li><a href=\"/first-post\">Мой первый пост</a>\n   \t\t</ol>\n  \t</nav>\n</aside>\n<aside>\n  \t<!-- здесь aside таже связан с информацией на странице и содержит сообщения из твиттера автора блога -->\n  \t<h1>Twitter страничка</h1>\n  \t<blockquote cite=\"https://twitter.example.net/t31351234\">\n  \t\tЯ на отдыхе, пишу блог.\n \t</blockquote>\n  \t<blockquote cite=\"https://twitter.example.net/t31219752\">\n  \t\tЯ скоро собираюсь на отдых.\n  \t</blockquote>\n</aside>\n<article>\n \t<!-- это пост из блога -->\n  \t<h1>Мой последний пост</h1>\n  \t\t<p>Это мой последний пост.</p>\n \t<footer>\n   \t\t<p><a href=\"/last-post\" rel=bookmark>Постоянная ссылка</a>\n  \t</footer>\n</article>\n<article>\n  \t<!-- это тоже пост из блога -->\n  \t<h1>MМой первый пост</h1>\n  \t\t<p>Это мой первый пост.</p>\n  \t\t<aside>\n  \t\t <!-- здесь aside употребляется для написания поста в блоге, он находится внутри\n   \t\t<article> элемента; это неверно, взамен, сюда нужно поставить подзаголовок, даже если он кажется здесь несовсем уместным,\n   \t\tособенно, для отображения на всей странице целиком -->\n   \t\t<h1>Посты</h1>\n   \t\t<p>Я немного поразмыслил, я хочу сказать пару слов о написании постов. Это очень веселый процесс!</p>\n  \t\t</aside>\n \t<footer>\n   \t\t<p><a href=\"/first-post\" rel=bookmark>Постоянная ссылка</a>\n  \t</footer>\n \t</article>\n \t<footer>\n \t\t<p><a href=\"/archives\">Архив</a> -\n  \t\t<a href=\"/about\">Обо мне</a> -\n   \t\t<a href=\"/copyright\">Права</a></p>\n \t</footer>\n</body>\n`}\n</Code>\n\n</ExampleBox>\n"
                    }
                },
                "figure": {
                    "tagName": "figure",
                    "categories": [
                        "flow content.",
                        "sectioning root.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент figure представляет некоторое содержимое, необязательно с заголовком, которое является самостоятельным (например, полное предложение) и обычно упоминается как единый блок из основного документа."
                    ],
                    "fullDescription": true,
                    "content_model": "flow content.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>figure</LE> представляет некоторое содержимое, необязательно с заголовком, которое является самостоятельным (например, полное предложение) и обычно упоминается как единый блок из основного документа.\n</p>\n\n<p>\n\tТаким образом, элемент можно использовать для описания иллюстраций, диаграмм, фотографий, списков кодов и т.д.\n</p>\n\n<p>\n\tПервый дочерний элемент <LE>figcaption</LE>, если таковой имеется, представляет заголовок содержимого элемента <LE>figure</LE>. Если дочернего элемента <LE>figcaption</LE> нет, значит, нет и заголовка.\n</p>\n\n<p>\n\tСодержимое элемента <LE>figure</LE> является частью окружающего содержимого. Если целью страницы является отображение рисунка, например фотографии на сайте обмена изображениями, элементы <LE>figure</LE> и <LE>figcaption</LE> могут использоваться для  отображения заголовка для этого рисунка. Для контента, который связан только косвенно или служит для другой цели, следует использовать элемент <LE>aside</LE>. Например, цитата, повторяющая контент из статьи, была бы более уместной, находясь в стороне, чем на рисунке, потому что это не часть контента.\n</p>\n\n<ExampleBox>\n\nВ этом примере показан элемент <LE>figure</LE> для разметки кода.\n\n<Code>\n{`\n<p>В <a href=\"#l4\">четвертом</a> мы видим основной интерфейс.</p>\n<figure id=\"l4\">\n \t<figcaption>Номер четыре. Главный интерфейс.</figcaption>\n \t<pre><code>interface PrimaryCore {\n \t\tboolean verifyDataLine();\n\t\tundefined sendData(sequence&lt;byte> data);\n \t\tundefined initSelfDestruct();\n}</code></pre>\n</figure>\n<p>Дизайн создан с помощью UTF-8.</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nЗдесь мы видим элемент <LE>figure</LE> для разметки фотографии, которая является основным содержимым страницы (как в галерее).\n\n<Code>\n{`\n<!DOCTYPE HTML>\n\t<html lang=\"en\">\n\t<title>Воздушные шары- моя галлерея</title>\n\t<figure>\n\t\t <img src=\"bubbles-work.jpeg\"\n      \t\talt=\"Описание.\">\n \t<figcaption>Воздушные шары</figcaption>\n\t</figure>\n\t<nav><a href=\"19414.html\">Prev</a> — <a href=\"19416.html\">Next</a></nav>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ этом примере мы видим изображение, которое не <LE>figure</LE>, а также изображение и видео - <LE>figure</LE>. Первое изображение буквально является частью второго предложения примера, поэтому оно - не автономная единица, и <LE>figure</LE> будет неуместным.\n\n<Code>\n{`\n<h2>Комиксы</h2>\n<p>\n\tЭто касалось некой «интеллектуальной собственностью» -\n\tнарушение, связанное с комиксом (см. Приложение A). Начинается после слов из трейлера:\n<blockquote>\n \t<img src=\"promblem-packed-action.png\" alt=\"ROUGH COPY! Promblem-Packed Action!\">\n</blockquote>\n<p>\n\t... был показан в эфире. Юрист, вооруженный блокнотом Bigger Notebook, запустил\n \tснежками. Полная копия трейлера есть в Приложение Б.\n<figure>\n \t<img src=\"ex-a.png\" alt=\"Two squiggles on a dirty piece of paper.\">\n \t<figcaption>Пример A. Предполагаемая <cite>копия</cite>комикса.</figcaption>\n</figure>\n<figure>\n \t<video src=\"ex-b.mov\"></video>\n \t<figcaption>Пример B.<cite>Главный</cite> трейлер.</figcaption>\n</figure>\n<p>\n\tДело было разрешено во внесудебном порядке.\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nЗдесь часть стихотворения размечена <LE>figure</LE>.\n\n<Code>\n{`\n<figure>\n \t<p>Ослепляющего вида рисунки,<br>\n \tКружатся в моей голове,<br>\n \tОттенок кажеься багровым,<br>\n \tВ мгновенье наедине.</p>\n <figcaption><cite>Джаберворси</cite> Льюс Керолл, 1832-98</figcaption>\n</figure>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nЭтот пример может быть частью более крупной работы, посвященной замку, вложенные элементы <LE>figure</LE> используются для предоставления как заголовка группы, так и отдельных заголовков для каждой фигуры в группе:\n\n<Code>\n{`\n<figure>\n \t<figcaption>Замок на протяжении веков: 1423, 1858 и 1999 годы соответственно.</figcaption>\n<figure>\n  \t<figcaption>Офорт. Аноним, ок. 1423.</figcaption>\n  \t<img src=\"castle1423.jpeg\" alt=\"Замок имеет одну башню и высокую стену вокруг нее.\">\n</figure>\n<figure>\n  \t<figcaption>Холст, масляная краска. Мария Тауле, 1858.</figcaption>\n  \t<img src=\"castle1858.jpeg\" alt=\"Замок имеет одну башню и высокую стену вокруг нее.\">\n</figure>\n<figure>\n\t<figcaption>Пленочная фотография. Питер Янкл, 1999.</figcaption>\n  \t<img src=\"castle1999.jpeg\" alt=\"Замок лежит в руинах, оригинальная башня - целая.\">\n</figure>\n</figure>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nПредыдущий пример также можно было бы более кратко записать следующим образом (используя атрибуты <LA>title</LA> вместо вложенных пар <LE>figure</LE> / <LE>figcaption</LE>):\n\n<Code>\n{`\n<figure>\n\t <img src=\"castle1423.jpeg\" title=\"Офорт. Аноним, ок. 1423.\"\n     \t  alt=\"Замок имеет одну башню и высокую стену вокруг нее.\">\n\t <img src=\"castle1858.jpeg\" title=\"Холст, масляная краска. Мария Тауле, 18588.\"\n     \t alt=\"Замок имеет одну башню и высокую стену вокруг нее.\">\n \t<img src=\"castle1999.jpeg\" title=\"Пленочная фотография. Питер Янкл, 1999.\"\n     \t alt=\"Замок лежит в руинах, оригинальная башня - целая.\">\n <figcaption>Замок на протяжении веков: 1423, 1858 и 1999 годы соответственно.</figcaption>\n</figure>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nНа <LE>figure</LE> иногда ссылаются только неактивного содержимого:\n\n<Code>\n{`\n<article>\n\t <h1>Переговоры в Конгрессе застопорились, так как крайний срок приближается</h1>\n\t <figure>\n \t \t\t<img src=\"obama-reid.jpeg\" alt=\"Obama and Reid sit together smiling in the Oval Office.\">\n  \t<figcaption>Барак Обама и Гарри Рид. Фотография из прессы Белого дома.</figcaption>\n\t</figure>\n\t<p>\n\t\tПереговоры в Конгрессе по выходу из финансового тупика прошли во вторник, в результате чего обе палаты\n\t\tподнялись в глазах страны в отношении займов, крайняя дата - в четверг.\n \t</p>\n ...\n</article>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n"
                    }
                },
                "bdi": {
                    "tagName": "bdi",
                    "categories": [
                        "flow content.",
                        "phrasing content.",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент bdi представляет собой отрезок текста, который отделен от остального текста с целью двунаправленного форматирования текста."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n  Элемент <LE>bdi</LE> представляет собой отрезок текста, который отделен от остального текста с целью двунаправленного форматирования текста.\n</p>\n\n<ExampleBox>\n\nЭтот элемент особенно полезен при встраивании пользовательского контента с неопределенной направленностью.\n\nВ этом примере имена пользователей показаны вместе с количеством сообщений, отправленных пользователем. Если бы элемент <LE>bdi</LE> не использовался, имя пользователя на арабском языке могло бы ввести в заблуждение (двунаправленный алгоритм поместил бы двоеточие и цифру «3» рядом со словом «Пользователь», а не рядом со словом «сообщения».)\n\n<Code>\n{`\n<ul>\n    <li>Пользователь <bdi>jcranmer</bdi>: 12 posts.\n    <li>Пользователь <bdi>hober</bdi>: 5 posts.\n    <li>Пользователь <bdi>إيان</bdi>: 3 posts.\n</ul>\n`}\n</Code>\n\nПри использовании элемента <LE>bdi</LE> имя пользователя отображается верно.\n\nЕсли бы элемент <LE>bdi</LE> был заменен элементом <LE>ab</LE>, имя пользователя могло бы сбить с толку двунаправленный алгоритм, и строка завершалась бы словами «Пользователь 3:», за которым следовало арабское имя (справа налево), а затем «сообщения» и точка.\n\n</ExampleBox>\n\n\n"
                    }
                },
                "dd": {
                    "tagName": "dd",
                    "categories": [
                        "Отсутствуют."
                    ],
                    "tag_omission": [
                        "Конечный тег элемента dd может не ставится, если за элементом dd сразу следует другой элемент dd или элемент dt, или если в родительском элементе больше нет содержимого."
                    ],
                    "description": [
                        "Элемент dd представляет собой описание, определение или значение, часть описания термина в списке (элемент dl)."
                    ],
                    "fullDescription": true,
                    "content_model": "flow content",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>dd</LE> представляет собой описание, определение или значение, часть описания термина в списке (элемент<LE>dl</LE>).\n</p>\n\n<ExampleBox>\n\n<LE>dl</LE> можно использовать для заглавия словарного списка в словаре. В следующем примере каждая запись, заданная <LE>dt</LE> с <LE>dfn</LE>, имеет несколько <LE>dd</LE>, показывающих различные части составляющего.\n\n<Code>\n{`\n<dl>\n \t<dt><dfn>счастье</dfn></dt>\n \t<dd class=\"pronunciation\">/ˈhæpinəs/</dd>\n \t<dd class=\"part-of-speech\"><i><abbr>сущ.</abbr></i></dd>\n \t<dd>Оставаться счастливым!</dd>\n \t<dd>Хорошая удача; успех. <q>Ох <b>счастье</b>! Это работает!</q></dd>\n \t<dt><dfn>радоваться</dfn></dt>\n \t<dd class=\"pronunciation\">/rɪˈdʒɔɪs/</dd>\n \t<dd><i class=\"part-of-speech\"><abbr> глагол непереходный.</abbr></i> Радоваться самому.</dd>\n \t<dd><i class=\"part-of-speech\"><abbr>глагол переходный</abbr></i> Причина восторга.</dd>\n</dl>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "article": {
                    "tagName": "article",
                    "categories": [
                        "flow content",
                        "sectioning content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент article представляет собой самостоятельную часть документа и может использоваться повторно.",
                        "Это может быть блок сообщения на форуме, статья в журнале, запись в блоге, пользовательский комментарий и так далее.",
                        "Чаще всего используется в прямом смысле, для обозначения блока содержащего статью."
                    ],
                    "content_model": "flow content",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": []
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>article</LE> представляет собой самостоятельную часть документа и может использоваться повторно. Это может быть блок сообщения на форуме, статья в журнале, запись в блоге, пользовательский комментарий и так далее. Чаще всего используется в прямом смысле, для обозначения блока содержащего статью.\n</p>\n\n<p>\n    Когда элементы <LE>article</LE> вложены, внутренние элементы <LE>article</LE> представляют части текта, которые связаны с содержанием главной статьи. Например, запись в блоге на сайте, где можно писать комментарии, отправленные пользователями, может показывать комментарии как элементы <LE>article</LE>, вложенные в элемент <LE>article</LE> для записи в блоге.\n</p>\n\n<p>\n    Информация об авторе, связанная с элементом <LE>article</LE> (может использоваться элемент <LE>address</LE>), не применяется к вложенным элементам в <LE>article</LE>.\n</p>\n\n<p>\n    Когда основное содержимое страницы (т.е. исключая нижние колонтитулы, заголовки, блоки навигации и боковые панели) представляет собой единую автономную композицию, это содержимое может быть выделено при помощи <LE>article</LE>, но в таком случае это технически сложно (поскольку элемент существует по себе). - очевидно, что страница должна представлять собой единую композицию, так как это единый документ.\n</p>\n\n<ExampleBox>\n\nВ этом примере показано сообщение в блоге с использованием элемента <LE>article</LE> с некоторыми комментариями в schema.org:\n\n<Code>\n{`\n<article itemscope itemtype=\"http://schema.org/BlogPosting\">\n    <header>\n        <h1 itemprop=\"headline\">Главное правило жизни</h1>\n        <p><time itemprop=\"datePublished\" datetime=\"2009-10-09\">з дня назад</time></p>\n        <link itemprop=\"url\" href=\"?comments=0\">\n    </header>\n    <p>\n        Представьте, что рядом с вами есть микрофон, он в ожидании того, чтобы вы сказали всему миру то, что думаете. Серьезно.\n    </p>\n    <p>...</p>\n    <footer>\n        <a itemprop=\"discussionUrl\" href=\"?comments=1\">Показать комментарии...</a>\n    </footer>\n</article>\n`}\n</Code>\n\nВот тот же пост в блоге, но с некоторыми комментариями:\n\n<Code>\n{`\n<article itemscope itemtype=\"http://schema.org/BlogPosting\">\n    <header>\n        <h1 itemprop=\"headline\">Первое правило жизни</h1>\n        <p><time itemprop=\"datePublished\" datetime=\"2009-10-09\">3 дня назад</time></p>\n        <link itemprop=\"url\" href=\"?comments=0\">\n    </header>\n    <p>Представьте, что рядом с вами есть микрофон, он в ожидании того, чтобы вы сказали всему миру то, что думаете. Серьезно.</p>\n    <p>...</p>\n    <section>\n        <h1>Комментарии</h1>\n        <article itemprop=\"comment\" itemscope itemtype=\"http://schema.org/UserComments\" id=\"c1\">\n        <link itemprop=\"url\" href=\"#c1\">\n        <footer>\n            <p>Написал: <span itemprop=\"creator\" itemscope itemtype=\"http://schema.org/Person\">\n                <span itemprop=\"name\">Джордж Вашингтон</span>\n                </span>\n            </p>\n            <p><time itemprop=\"commentTime\" datetime=\"2009-10-10\">15 минут назад</time></p>\n        </footer>\n        <p>Да! Особенно тогда, когда ты сидишь в гостиной и рассуждаешь с друзьями!</p>\n        </article>\n        <article itemprop=\"comment\" itemscope itemtype=\"http://schema.org/UserComments\" id=\"c2\">\n            <link itemprop=\"url\" href=\"#c2\">\n            <footer>\n            <p>Написал: <span itemprop=\"creator\" itemscope itemtype=\"http://schema.org/Person\">\n                <span itemprop=\"name\">Джордж Хамморд</span>\n                </span>\n            </p>\n            <p><time itemprop=\"commentTime\" datetime=\"2009-10-10\">5 минут назад</time></p>\n            </footer>\n            <p>Эй, у тебя такое же имя.</p>\n        </article>\n    </section>\n</article>\n`}\n</Code>\n\nОбратите внимание на использование <LE>footer</LE> для каждого комментария (например, кто его написал и когда): элемент <LE>footer</LE> может появляться в начале раздела, когда это необходимо, как в этом случае. (Использование <LE>header</LE> в этом случае тоже уместно; это вопрос авторских предпочтений.)\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ этом примере элементы <LE>article</LE> используются для размещения виджетов на странице портала. Виджеты установлены как настраиваемые встроенные элементы для получения определенного стиля и поведения по сценарию.\n\n<Code>\n{`\n<!DOCTYPE HTML>\n    <html lang=en>\n    <title>eHome Portal</title>\n    <script src=\"/scripts/widgets.js\"></script>\n    <link rel=stylesheet href=\"/styles/main.css\">\n    <article is=\"stock-widget\">\n        <h1>Stocks</h1>\n        <table>\n            <thead> <tr> <th> Stock <th> Value <th> Delta\n            <tbody> <template> <tr> <td> <td> <td> </template>\n        </table>\n        <p> <input type=button value=\"Refresh\" onclick=\"this.parentElement.refresh()\">\n    </article>\n    <article is=\"news-widget\">\n        <h1>News</h1>\n        <ul>\n            <template>\n                <li>\n                <p><img> <strong></strong>\n                <p>\n            </template>\n        </ul>\n        <p> <input type=button value=\"Refresh\" onclick=\"this.parentElement.refresh()\">\n    </article>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n"
                    }
                },
                "audio": {
                    "tagName": "audio",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "embedded content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент представляет звук или аудиопоток."
                    ],
                    "content_model": [
                        "Если элемент имеет атрибут `src`: ноль или более элементов <Link to='/html-list/track'>track</Link>, то прозрачный (`transparent`), но без потомков медиа-элементов (`media element`).",
                        "Если элемент не имеет атрибута `src`: ноль или более элементов `source`, то ноль или более <Link to=\"/html-list/track\">track</Link> элементов, то прозрачный (`transparent`), но без потомков медиа-элементов (`media element`)."
                    ],
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "src",
                                "description": "Адрес ресурса"
                            },
                            {
                                "name": "crossorigin",
                                "description": "Как элемент обрабатывает запросы перекрестного происхождения (crossorigin requests)"
                            },
                            {
                                "name": "preload",
                                "description": "Необходимо ли предзагрузжать медиа при старте страницы"
                            },
                            {
                                "name": "autoplay",
                                "description": "Стоит ли начать воспроизведение сразу после загрузки медиа"
                            },
                            {
                                "name": "loop",
                                "description": "Нузно ли зациклить воспроизведение"
                            },
                            {
                                "name": "muted",
                                "description": "Заглушен ли меадиаресурс по умолчанию"
                            },
                            {
                                "name": "controls",
                                "description": "Отображает элементы управления"
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент представляет звук или аудиопоток.\n</p>\n\n<p>\n\t Контент может быть предоставлен внутри элемента <LE>audio</LE>. Пользовательские агенты не должны показывать это содержимое пользователю; он предназначен для старых веб-браузеров, которые не поддерживают <LE>audio</LE>, так что можно попробовать устаревшие звуковые плагины или показать текст пользователям этих старых браузеров, информирующий их о том, как получить доступ к звуковому содержимому.\n</p>\n\n<p>\n     <LE>audio</LE> - это медиа-элемент, медиа-данные которого являются аудиоданными.\n\n<p>\n     Атрибуты <LA>src</LA>, <LA>crossorigin</LA>, <LA>preload</LA>, <LA>autoplay</LA>, <LA>loop</LA>, <LA>muted</LA> и <LA>controls</LA> являются общими для всех медиа-элементов.\n</p>\n\n\n\n"
                    }
                },
                "cite": {
                    "tagName": "cite",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент <LE>cite</LE> указывает на название чего-либо (книга, статья, эссе, стихотворение, песня, сценарий, фильм, телешоу, игра, скульптура, картина, постановка и т.д.)",
                        "Этим элементом может быть выделена работа, на которую ссылаются или которая цитируется.",
                        "Может выделяться и работа, о которой упоминают вскользь."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>cite</LE> указывает на название чего-либо (книга, статья, эссе, стихотворение, песня, сценарий, фильм, телешоу, игра, скульптура, картина, постановка и т.д.) Этим элементом может быть выделена работа, на которую ссылаются или которая цитируется. Может выделяться и работа, о которой упоминают вскользь.\n</p>\n\n<p>\n\tДанный элемент не используется для выделения имен людей. В некоторых случаях элеменет <LE>b</LE> может для этого дела. Например, в журналах имена и фамилии людей выделяются, чтобы привлечь максимальное внимание к тому или иному персонажу. При необходимости выделения имен в ряде других случаев используется элемент <LE>span</LE>\n</p>\n\n<ExampleBox>\n\nВ примере показано типичное использование элемента <LE>cite</LE>\n\n<Code>\n{`\n<p>\n\tМоя любимая книга - <cite>The Reality Dysfunction</cite> Питера Хамингтона.Мой любимый комик - <cite>Pearls Before\n\tSwine</cite> Стефена Пастиса. Мой любимый трек - <cite>Jive\n\tSamba</cite> Адрелии Сектета.\n</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nПример верного применения:\n\n<Code>\n{`\n<p>\n\tПо данным Википедии <cite>HTML</cite>, статья февраля 2008, значение атрибута можно оставить без кавычек. Очевидно, что это очень сильно упрощает.\n</p>\n`}\n</Code>\n\nНиже представлено неверное использование т.к. внутри элемента находится гораздо больше, чем просто название работы.\n\n<!-- do not copy this example, it is an example of bad usage! -->\n<p>\n\tПо данным <cite>статьи Википедии HTML</cite>, от февраля 2008, значение атрибута можно оставить без кавычек. Очевидно, что это очень сильно упрощает.\n</p>\n\n</ExampleBox>\n\n<ExampleBox>\n\nЭлемент <LE>cite</LE> используется для цитирования в библиографии и для выделения заголовка:\n\n<Code>\n{`\n<p>\n\t<cite>Декларация по правам человека</cite>, United Nations,\n\tДекабрь 1948. Принята резолюцией 217 Генеральной Ассамблеи A (III).\n</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nНеправильное использование элемент <LE>cite</LE>, т.к. он не подходит для цитат.\n\n<Code>\n{`\n<p>\n\t<cite>Это неправильно!</cite>, сказал Ян.\n</p>\n`}\n</Code>\n\nТакже неверное употребление т.к. человек - это не название работы:\n\n<Code>\n{`\n<p>\n\t<q>\n\t\tЭто неправильно!\n\t</q>,\n\tсказал <cite>Ян</cite>.\n</p>\n`}\n</Code>\n\nПример правильно построенного предложения без <LE>cite</LE>\n\n<Code>\n{`\n<p>\n\t<q>\n\t\tЭто правильно\n\t</q>, сказал Ян.\n</p>\n`}\n</Code>\n\nЭлемент <LE>b</LE> может выделять имена и ключевые моменты в предложении:\n\n<p>\n\tИ затем \n\t<b>\n\t\tЯн\n\t</b> \n\tсказал \n\t<q>\n\t\tэто может быть правдой только в желтой газете!\n\t</q>.\n</p>\n</ExampleBox>\n"
                    }
                },
                "figcaption": {
                    "tagName": "figcaption",
                    "categories": [
                        "Отсутствуют."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент figcaption представляет собой подпись для остального содержимого родительского элемента figure и figcaption, если таковые имеются."
                    ],
                    "fullDescription": true,
                    "content_model": "flow content.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>figcaption</LE> представляет собой подпись для остального содержимого родительского элемента <LE>figure</LE> и <LE>figcaption</LE>, если таковые имеются.\n</p>\n\n<ExampleBox>\n\nЭлемент может содержать дополнительную информацию об источнике:\n\n<Code>\n{`\n<figcaption>\n    <p>Утка.</p>\n    <p><small>Фотография из 🌟 Новостей.</small></p>\n</figcaption>\n<figcaption>\n    <p>Средняя арендная плата за 3-комнатные квартиры.</p>\n    <p>Zürich’s Офис — <time datetime=2017-11-14>14 November 2017</time></p>\n</figcaption>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n"
                    }
                },
                "applet": {
                    "tagName": "applet",
                    "description": [
                        "Элемент applet служит для вставки специальных прогламм написанных на языке Java. Данный элемент устарел и не поддерживается современными браузерами."
                    ],
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "fullDescription": true,
                    "obsolete": true,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>applet</LE> служит для вставки специальных прогламм написанных на языке Java. Данный элемент устарел и не поддерживается современными браузерами.\n</p>\n\n<p>\n\t Взамен необходимо использовать более гибкий тег <LE>object</LE>. Между открывающим и закрывающим тегом можно добавить текст, который будет отображаться в браузере, если он не поддерживает апплеты. В противном случае текст не выводится.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n  \"http://www.w3.org/TR/html4/strict.dtd\">\n<html>\n    <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n    <title>Тег APPLET</title>\n    </head>\n    <body>\n        <p>Текущее время: <applet code=\"Clock.class\" width=\"60\" height=\"10\">\n        Ваш браузер не поддерживает Java-апплеты.\n        </applet></p>\n    </body>\n</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "html": {
                    "tagName": "html",
                    "categories": [
                        "none"
                    ],
                    "tag_omission": [
                        "Начальный тег элемента html может быть опущен, если первое, что находится внутри элемента html, не является комментарием.",
                        "Конечный тег элемента html может быть опущен, если за элементом html сразу не следует комментарий."
                    ],
                    "description": [
                        "Элемент html представляет собой корень HTML-документа.",
                        "Разработчикам рекомендуется указывать атрибут lang в корневом элементе html, задавая язык документа. Это помогает инструментам синтеза речи определять, какое произношение использовать, инструментам перевода, чтобы определить, какие правила использовать, и так далее."
                    ],
                    "content_model": "Элемент head, за которым следует элемент body.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "manifest",
                                "description": "Манифест кэша приложений"
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>html</LE> представляет собой корень HTML-документа. Разработчикам рекомендуется указывать атрибут <LA>lang</LA> в корневом элементе <LE>html</LE>, задавая язык документа. Это помогает инструментам синтеза речи определять, какое произношение использовать, инструментам перевода, чтобы определить, какие правила использовать, и так далее.\n</p>\n\n<ExampleBox>\n\nЭлемент <LE>html</LE> в следующем примере показывает, что язык документа - английский.\n\n<Code>\n{`\n<!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n        <title>Обмен песнями</title>\n    </head>\n    <body>\n        <h1>Обмен песнями</h1>\n        <p>Сегодня вечером я обменялся песнями, которые я написал, с друзьями,они\n         дали мне  взамен несколько песен их же сочинения. Я люблю делиться своей музыкой.</p>\n    </body>\n    </html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n"
                    }
                },
                "blink": {
                    "tagName": "blink",
                    "categories": [
                        "Отсутствует."
                    ],
                    "tag_omission": [
                        "Закрывающий тег обязателен."
                    ],
                    "description": [
                        "Устанавливает мигание текста."
                    ],
                    "content_model": [
                        "Контент отсутствует."
                    ],
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": false
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tУстанавливает мигание текста.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \n  \"http://www.w3.org/TR/html4/strict.dtd\">\n<html>\n\t\t<head>\n \t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n  \t\t\t\t<title>Тег BLINK</title>\n\t\t</head>\n\t\t<body>\n  \t\t\t\t<p><blink>Обратите внимание!</blink></p>\n  \t\t\t\t<p>Новое объявление.</p>\n \t\t</body>\n</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "input": {
                    "tagName": "input",
                    "categories": [
                        "flow content.",
                        "phrasing content."
                    ],
                    "tag_omission": [
                        "Нет закрывающего тега."
                    ],
                    "description": [
                        "Элемент input представляет собой поле типизированных данных, позволяющим пользователю редактировать данные."
                    ],
                    "content_model": "Отсутствует.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "accept",
                                "description": "Подсказка типа файла в элементах управления загрузкой файлов."
                            },
                            {
                                "name": "alt",
                                "description": "Заменяющий текст для использования, когда изображения недоступны."
                            },
                            {
                                "name": "autocomplete",
                                "description": "Подсказка для функции автозаполнения форм."
                            },
                            {
                                "name": "checked",
                                "description": "Проверка элемента управления."
                            },
                            {
                                "name": "dirname",
                                "description": "Имя элемента управления формы, чтобы использовать для отправки формы."
                            },
                            {
                                "name": "disabled",
                                "description": "Отключение элемента управления формой."
                            },
                            {
                                "name": "form",
                                "description": "Связывает элемент с элементом формы."
                            },
                            {
                                "name": "formaction",
                                "description": "URL для отправки формы."
                            },
                            {
                                "name": "formenctype",
                                "description": "Тип кодировки списка записей при отправке формы."
                            },
                            {
                                "name": "formmethod",
                                "description": "Вариант использования при отправке формы."
                            },
                            {
                                "name": "formnovalidate",
                                "description": "Обход проверки контроля формы для отправки формы."
                            },
                            {
                                "name": "formtarget",
                                "description": "Контекст просмотра для отправки формы."
                            },
                            {
                                "name": "height",
                                "description": "Вертикальный размер."
                            },
                            {
                                "name": "list",
                                "description": "Список опций автозаполнения."
                            },
                            {
                                "name": "max",
                                "description": "Максимальное значение."
                            },
                            {
                                "name": "maxlength",
                                "description": "Максимальная длина значения."
                            },
                            {
                                "name": "min",
                                "description": "Минимальное значение."
                            },
                            {
                                "name": "minlength",
                                "description": "Минимальная длина значения."
                            },
                            {
                                "name": "multiple",
                                "description": "Разрешить несколько значений."
                            },
                            {
                                "name": "name",
                                "description": "Имя элемента, используемого для отправки формы в API form.elements."
                            },
                            {
                                "name": "pattern",
                                "description": "Шаблон, который будет соответствовать значению элемента управления формы."
                            },
                            {
                                "name": "placeholder",
                                "description": "Видимая пользователем метка, которая будет помещена в элемент управления формы."
                            },
                            {
                                "name": "readonly",
                                "description": "Разрешить пользователю редактировать значение."
                            },
                            {
                                "name": "required",
                                "description": "Требуется ли элемент управления для отправки формы."
                            },
                            {
                                "name": "size",
                                "description": "Размер элемента управления."
                            },
                            {
                                "name": "src",
                                "description": "Адрес ресурса."
                            },
                            {
                                "name": "step",
                                "description": "Степень детализации должна соответствовать значению элемента управления формы."
                            },
                            {
                                "name": "type",
                                "description": "Тип формы управления."
                            },
                            {
                                "name": "value",
                                "description": "Значение элемента управления формы."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n \tЭлемент <LE>input</LE> представляет собой поле типизированных данных, позволяющим пользователю редактировать данные.\n</p>\n\n<p>\n\tКаждый <LE>input</LE> элемент может быть изменяемым. Если не указано иное, <LE>input</LE> элемент всегда изменяемый. Точно так же, если не указано иное, пользовательский агент не должен позволять пользователю изменять значение или проверяемость элемента.\n</p>\n\n<p>\n\tКогда элемент <LE>input</LE>  отключен, он не изменяется.\n</p>\n\n\n\n\n\n\n\n\n\n"
                    }
                },
                "source": {
                    "tagName": "source",
                    "categories": [
                        "Отсутствуют"
                    ],
                    "tag_omission": [
                        "Закрывающий тег отсутствует."
                    ],
                    "description": [
                        "Элемент source позволяет авторам указать несколько альтернативных исходных элементов img или несколько альтернативных медиаресурсов для медиаэлементов.",
                        "Сам по себе он ничего не представляет."
                    ],
                    "fullDescription": true,
                    "content_model": "Контент отсутствует",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>source</LE> позволяет авторам указать несколько альтернативных исходных элементов <LE>img</LE> или несколько альтернативных медиаресурсов для медиаэлементов. Сам по себе он ничего не представляет.\n</p>\n\n<p>\n\tАтрибут <LA>type</LA> может присутствовать. Если присутствует, значение должно быть допустимой строкой типа MIME.\n</p>\n\n<p>\n\tОстальные требования зависят от того, является ли родительский элемент элементом <LE>picture</LE> или элементом <LE>media</LE>:\n</p>\n\n<p>\n\tРодительский элемент <LE>source</LE> элемента является элементом <LE>picture</LE>\n</p>\n\n<p>\n\tАтрибут <LA>srcset</LA> должен присутствовать и является атрибутом <LA>srcset</LA>.\n</p>\n\n<p>\n\tАтрибут <LA>srcset</LA> добавляет источники изображений в набор <LE>source</LE>, если выбран исходный элемент.\n</p>\n\n<p>\n\tЕсли атрибут <LA>srcset</LA> имеет какие-либо изображения, использующие дескриптор ширины, атрибут <LA>sizes</LA> также должен присутствовать. Атрибут <LA>sizes</LA> вносит исходный размер в <LE>source</LE>, если <LE>source</LE> элемент выбран.\n</p>\n\n<p>\n\tАтрибут <LE>media</LE> также может присутствовать. Если присутствует, значение должно содержать действительный список медиа-запросов. Пользовательский агент перейдет к следующему <LE>source</LE> элементу, если значение не соответствует среде.\n</p>\n\n<p>\n\t<LE>source</LE> элемент поддерживает атрибуты измерения. Элемент <LE>img</LE> может использовать атрибуты <LA>width</LA> и <LA>height</LA> <LE>source</LE> элемента вместо атрибутов самого элемента <LE>img</LE> для определения его отображаемых размеров и соотношения сторон, как определено в разделе «Визуализация».\n</p>\n\n<p>\n\tАтрибут <LA>type</LA> показывает тип изображений в <LE>source</LE>, чтобы пользовательский агент мог перейти к следующему элементу <LE>source</LE>, если он не поддерживает данный тип.\n</p>\n\n<p>\n\tЕсли <LE>source</LE> элемент имеет следующий родственный элемент-<LE>source</LE> или элемент <LE>img</LE> с указанным атрибутом <LA>srcset</LA>, он должен соответствовать хотя бы одному пункту:\n</p>\n\n<p>\n<ol>\n \t<li>Атрибут <LE>media</LE>, указанный со значением, которое после удаления начальных и конечных пробелов ASCII не является пустой строкой и не совпадает с другим элементом без учета регистра символов ASCII для строки «all».</li>\n \t<li>Указан <LA>type</LA> атрибут</li>\n \t<li>Атрибут <LA>src</LA> не должен присутствовать.</li>\n</ol>\n</p>\n\n<p>\n\tРодительский элемент <LE>source</LE> элемента является <LE>media</LE>-элементом\n</p>\n\n<p>\n\tАтрибут <LA>src</LA> показывает URL-адрес медиаресурса. Значение должно быть действительным и непустым URL-адресом, потенциально окруженным пробелами. Этот атрибут должен присутствовать.\n</p>\n\n<p>\n\tАтрибут <LA>type</LA> показывает тип медиаресурса, чтобы помочь пользовательскому агенту определить, может ли он воспроизвести этот медиаресурс перед его включением. Параметр может потребоваться для точного указания способа кодирования ресурса. \n</p>\n\n<ExampleBox>\n\nВ следующем списке показаны некоторые примеры использования параметра codecs = MIME в атрибуте <LA>type</LA>.\n\nВидео H.264 с ограниченным базовым профилем (совместимость с основным и расширенным видео) level 3 and Low-Complexity AAC audio in MP4 container\n\n<Code>\n{`\n\t<source src='video.mp4' type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'>\n`}\n</Code>\n\nВидео H.264 с расширенным профилем (совместимое с базовыми линиями) level 3 and Low-Complexity AAC audio in MP4 container\n\n<Code>\n{`\n\t<source src='video.mp4' type='video/mp4; codecs=\"avc1.58A01E, mp4a.40.2\"'>\n`}\n</Code>\n\nH.264 Основной профиль видео level 3 and Low-Complexity AAC audio in MP4 container\n\n<Code>\n{`\n\t<source src='video.mp4' type='video/mp4; codecs=\"avc1.4D401E, mp4a.40.2\"'>\n`}\n</Code>\n\nВидео H.264 с высоким профилем (несовместимо с основным, базовым или расширенным профилями) level 3 and Low-Complexity AAC audio in MP4 container\n\n<Code>\n{`\n\t<source src='video.mp4' type='video/mp4; codecs=\"avc1.64001E, mp4a.40.2\"'>\n`}\n</Code>\n\nMPEG-4 Простой визуальный профиль Level 0 video and Low-Complexity AAC audio in MP4 container\n\n<Code>\n{`\n\t<source src='video.mp4' type='video/mp4; codecs=\"mp4v.20.8, mp4a.40.2\"'>\n`}\n</Code>\n\nMPEG-4 Продвинутый простой профиль Level 0 video and Low-Complexity AAC audio in MP4 container\n\n<Code>\n{`\n\t<source src='video.mp4' type='video/mp4; codecs=\"mp4v.20.240, mp4a.40.2\"'>\n`}\n</Code>\n\nMPEG-4 Визуальный простой профиль Level 0 video and AMR audio in 3GPP container\n\n<Code>\n{`\n\t<source src='video.3gp' type='video/3gpp; codecs=\"mp4v.20.8, samr\"'>\n`}\n</Code>\n\nTheora видео and Vorbis аудио in Ogg container\n\n<Code>\n{`\n\t<source src='video.ogv' type='video/ogg; codecs=\"theora, vorbis\"'>\n`}\n</Code>\n\nTheora видео and Speex аудио in Ogg container\n\n<Code>\n{`\n\t<source src='video.ogv' type='video/ogg; codecs=\"theora, speex\"'>\n`}\n</Code>\n\nТолько Vorbis аудио in Ogg container\n\n<Code>\n{`\n\t<source src='audio.ogg' type='audio/ogg; codecs=vorbis'>\n`}\n</Code>\n\nТолько Speex аудио in Ogg container\n\n<Code>\n{`\n\t<source src='audio.spx' type='audio/ogg; codecs=speex'>\n`}\n</Code>\n\nТолкьо FLAC аудио in Ogg container\n\n<Code>\n{`\n\t<source src='audio.oga' type='audio/ogg; codecs=flac'>\n`}\n</Code>\n\nDirac видео and Vorbis аудио in Ogg container\n\n<Code>\n{`\n\t<source src='video.ogv' type='video/ogg; codecs=\"dirac, vorbis\"'>\n`}\n</Code>\n\n</ExampleBox>\n\n<p>\n\tАтрибуты <LA>srcset</LA>, <LA>sizes</LA> и <LA>media</LA> не должны присутствовать.\n</p>\n\n<p>\n\tЕсли <LE>source</LE> элемент вставлен как дочерний элемент <LA>media</LA> элемента, у которого нет атрибута <LA>src</LA>, а <LE>networkState</LE> которого имеет значение <LE>NETWORK_EMPTY</LE>, пользовательский агент должен вызвать алгоритм выбора ресурса мультимедийного элемента.\n</p>\n\n<p>\n\tАтрибуты IDL <LA>src</LA>, <LA>type</LA>, <LA>srcset</LA>, <LA>sizes</LA> и <LA>media</LA> должны отражать соответствующие атрибуты содержимого с тем же именем. \n</p>\n\n<ExampleBox>\n\nЕсли автор не уверен, смогут ли все пользовательские агенты отображать предоставленные медиаресурсы, автор может просмотреть  <LE>error</LE> в последнем <LE>source</LE> элементе и произвести резервное копирование:\n\n<Code>\n{`\n\t<script>\n \t\tfunction fallback(video) {\n   \t\t// поставить <video> в контент\n   \t\twhile (video.hasChildNodes()) {\n   \t\t if (video.firstChild instanceof HTMLSourceElement)\n       video.removeChild(video.firstChild);\n     \telse\n       video.parentNode.insertBefore(video.firstChild, video);\n   }\n   video.parentNode.removeChild(video);\n }\n\t</script>\n\t<video controls autoplay>\n\t<source src='video.mp4' type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'>\n \t<source src='video.ogv' type='video/ogg; codecs=\"theora, vorbis\"'\n         onerror=\"fallback(parentNode)\">\n ...\n</video>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n"
                    }
                },
                "dialog": {
                    "tagName": "dialog",
                    "categories": [
                        "flow content",
                        "sectioning root"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент dialog представляет собой часть приложения, с которой пользователь взаимодействует для выполнения задачи, например: диалоговое окно."
                    ],
                    "content_model": "flow content.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "open",
                                "description": "Делает dialog видимым."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n  Элемент <LE>dialog</LE> представляет собой часть приложения, с которой пользователь взаимодействует для выполнения задачи, например: диалоговое окно.\n</p>\n\n<p>\n  <LA>open</LA> атрибут - это логический атрибут. Если он указан, это означает, что элемент <LE>dialog</LE> активен и что пользователь может с ним взаимодействовать.\n</p>\n\n<p>\n  Элемент <LE>dialog</LE> без атрибута <LA>open</LA> не должен отображаться пользователю. Это требование может быть реализовано косвенно через слой стиля. Например, пользовательские агенты, поддерживающие предлагаемую визуализацию по умолчанию, реализуют это требование с помощью правил CSS, описанных в разделе «Визуализация».\n</p>\n\n<ExampleBox>\n\n  Это диалоговое окно напечатано мелким шрифтом. <LE>strong</LE> элемент используется для привлечения внимания пользователя к более важной части.\n\n<Code>\n{`\n\t<dialog>\n         <h1>Добавить в кошелек</h1>\n         <p><strong><label for=amt>Сколько золотых монет вы хотели бы добавить в кошелек?</label></strong></p>\n         <p><input id=amt name=amt type=number min=0 step=0.01 value=100></p>\n         <p><small>Вы добавляете монеты на свой страх и риск.</small></p>\n         <p><label><input name=round type=checkbox> Добавлять только идеально ровные монеты </label></p>\n         <p><input type=button onclick=\"submit()\" value=\"Add Coins\"></p>\n  </dialog>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "iframe": {
                    "tagName": "iframe",
                    "categories": [
                        "flow content.",
                        "phrasing content.",
                        "embedded content.",
                        "interactive content.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент iframe представляет собой вложенный контекст для просмотра."
                    ],
                    "content_model": "Отсутствует.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "src",
                                "description": "Ссылается на источник."
                            },
                            {
                                "name": "srcdoc",
                                "description": "документ для отображения в iframe."
                            },
                            {
                                "name": "name",
                                "description": "Имя вложенного контекста просмотра."
                            },
                            {
                                "name": "sandbox",
                                "description": "Правила безопасности для вложенного содержимого."
                            },
                            {
                                "name": "allow",
                                "description": "Политика разрешений, применяемая к содержимому iframe."
                            },
                            {
                                "name": "width",
                                "description": "Горизонтальный размер."
                            },
                            {
                                "name": "height",
                                "description": "Вертикальный размер."
                            },
                            {
                                "name": "referrerpolicy",
                                "description": "Политика реферера для выборок, инициированных элементом."
                            },
                            {
                                "name": "loading",
                                "description": "Используется при определении отсрочки загрузки."
                            },
                            {
                                "name": "allowfullscreen",
                                "description": "Разрешить содержимому iframe использовать requestFullscreen."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n Элемент <LE>iframe</LE> представляет собой вложенный контекст просмотра.\n</p>\n\n<ExampleBox>\n  Здесь блог использует атрибут <LA>srcdoc</LA> в сочетании с атрибутом <LA>sandbox</LA>, чтобы предоставить пользователям дополнительный уровень защиты в комментариях к сообщениям блога:\n\n<Code>\n{`\n<article>\n       <h1>У меня есть свой собственный журнал!</h1>\n       <p>Я столько усилий приложила для того, чтобы его создать!</p>\n       <footer>\n                <p>Написано <a href=\"/users/cap\">cap</a>, 1 час назад.\n       </footer>\n       <article>\n                <footer> 13 минут назад, <a href=\"/users/ch\">ch</a> написал: </footer>\n                <iframe sandbox srcdoc=\"<p>уже есть обложка?\"></iframe>\n       </article>\n       <article>\n                <footer> 9 минут назад, <a href=\"/users/cap\">cap</a> написал: </footer>\n                <iframe sandbox srcdoc=\"<p>Да, можешь посмотреть <a href=&quot;/gallery?mode=cover&amp;amp;page=1&quot;>в галерее</a>.\"></iframe>\n       </article>\n       <article>\n                <footer> 5 минут назад, <a href=\"/users/ch\">ch</a> написал: </footer>\n                <iframe sandbox srcdoc=\"<p>это его стол.\n              <p>тебе следует earl&amp;amp; поместить меня на следующую страницу.\"></iframe>\n </article>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ этом примере на страницу встроено какое-то совершенно неизвестное, потенциально враждебное HTML-содержимое, предоставленное пользователем. Поскольку он обслуживается из отдельного домена, на него действуют все обычные межсайтовые ограничения. Кроме того, на встроенной странице отключены сценарии, отключены плагины, отключены формы, и она не может перемещаться по фреймам или окнам, кроме своего (или по любым фреймам или окнам, которые он сам встраивает). \n\n<Code>\n{`\n<p>Мы вас не боимся! Вот ваш контент, неотредактированный:</p>\n<iframe sandbox src=\"https://usercontent.example.net/getusercontent.cgi?id=12193\"></iframe>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ этом примере внедрен гаджет с другого сайта. В гаджете включены сценарии и формы, а ограничения исходной <LA>sandbox</LA> сняты, что позволяет гаджету обмениваться данными с исходным сервером. Однако <LA>sandbox</LA> по-прежнему полезна, поскольку отключает плагины и всплывающие окна, тем самым снижая риск того, что пользователь подвергнется воздействию вредоносных программ и других неприятностей.\n\n<Code>\n{`\n<iframe sandbox=\"allow-same-origin allow-forms allow-scripts\"\n        src=\"https://maps.example.com/embedded.html\"></iframe>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nПредположим, что файл A содержит следующий фрагмент:\n\n<Code>\n{`\n<iframe sandbox=\"allow-same-origin allow-forms\" src=B></iframe>\n`}\n</Code>\n\nФайл Б содержит его тоже:\n\n<Code>\n{`\n<iframe sandbox=\"allow-scripts\" src=C></iframe>\n`}\n</Code>\n\nФайл В содержит ссылку:\n\n<Code>\n{`\n<a href=D>Link</a>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ этом примере <LE>iframe</LE> используется для встраивания карты из службы онлайн-навигации. Атрибут <LA>allow</LA> используется для включения API геолокации во вложенном контексте.\n\n<Code>\n{`\n<iframe src=\"https://maps.example.com/\" allow=\"geolocation\"></iframe>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nЗдесь <LE>iframe</LE> используется для встраивания проигрывателя с видеосайта. Атрибут <LA>allowfullscreen</LA> необходим, чтобы проигрыватель мог показывать видео в полноэкранном режиме.\n\n<Code>\n{`\n<article>\n       <header>\n               <p><img src=\"/usericons/1627591962735\"> <b>Fred Flintstone</b></p>\n               <p><a href=\"/posts/3095182851\" rel=bookmark>12:44</a> — <a href=\"#acl-3095182851\">Приватная публикация</a></p>\n       </header>\n       <p>Проверь мою новую идею!</p>\n       <iframe src=\"https://video.example.com/embed?id=92469812\" allowfullscreen></iframe>\n</article>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВот пример страницы, использующей iframe для размещения рекламы от рекламного брокера:\n\n<Code>\n{`\n<iframe src=\"https://ads.example.com/?customerid=923513721&amp;format=banner\"\n        width=\"468\" height=\"60\"></iframe>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n"
                    }
                },
                "menuitem": {
                    "tagName": "menuitem",
                    "categories": [
                        "Отсутствует."
                    ],
                    "tag_omission": [
                        "Отсутствует."
                    ],
                    "description": [
                        "Тег menuitem определяет элемент команды/меню, который пользователь может вызвать из контекстного меню."
                    ],
                    "content_model": "Отсутствует.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "checked",
                                "description": "Указывает, что команда / меню должны быть выбраны, когда страница загружается."
                            },
                            {
                                "name": "command",
                                "description": "Указывает назначение команды."
                            },
                            {
                                "name": "default",
                                "description": "Помечает команду/меню по умолчанию."
                            },
                            {
                                "name": "disabled",
                                "description": "Указывает, что команда/меню должны быть отключены."
                            },
                            {
                                "name": "icon",
                                "description": "Указывает значок для меню/команды."
                            },
                            {
                                "name": "label",
                                "description": "Указывает как отображать для пользователя имя элемента меню/команды."
                            },
                            {
                                "name": "radiogroup",
                                "description": "Задает имя группы команд, которые будут переключаться, когда пункт меню/команды переключается."
                            },
                            {
                                "name": "type",
                                "description": "Определяет тип элемента меню/комманды."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n \t  Тег <LE>menuitem</LE> определяет элемент команды/меню, который пользователь может вызвать из контекстного меню.\n</p>\n\n<p>\n\t В настоящее время тег <LE>menuitem</LE> имеет ограниченную поддержку браузерами.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<!DOCTYPE html>\n<html>\n      <head>\n            <title>Пример использования тега <menu></title>\n      </head>\n      <body>\n            <div contextmenu = \"testmenu\"> \n            Кликни по мне правой кнопкой мыши.\n            <menu type = \"context\" id = \"testmenu\"> \n                   <menuitem label = \"like\"></menuitem> \n                   <menuitem label = \"dislike\"></menuitem> \n            </menu>\n            </div>\n      </body>\n</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n\n\n\n\n"
                    }
                },
                "header": {
                    "tagName": "header",
                    "categories": [
                        "flow content.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент header представляет собой группу вводных или навигационных средств."
                    ],
                    "fullDescription": true,
                    "content_model": "flow content.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>header</LE> представляет собой группу вводных или навигационных средств.\n</p>\n\n\n<ExampleBox>\n\nВот несколько примеров заголовков. Первый предназначен для игры:\n\n<Code>\n{`\n<header>\n    <p>Добро пожаловать в....</p>\n    <h1>Войдворлд!</h1>\n</header>\n`}\n</Code>\n\nВ следующем фрагменте показано, как элемент можно использовать для разметки заголовка спецификации:\n\n<Code>\n{`\n<header>\n    <hgroup>\n        <h1>Полноэкранный API</h1>\n        <h2>Стандарты жизни — Последнее обновление 19 Октября 2015</h2>\n    </hgroup>\n    <dl>\n        <dt>Принять участие</dt>\n        <dd><a href=\"https://github.com/whatwg/fullscreen\">GitHub whatwg/fullscreen</a></dd>\n        <dt>Commits:</dt>\n        <dd><a href=\"https://github.com/whatwg/fullscreen/commits\">GitHub whatwg/fullscreen/commits</a></dd>\n    </dl>\n</header>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ этом примере страница имеет заголовок, заданный элементом <LE>h1</LE>, и два подраздела, заголовки которых заданы элементами <LE>h2</LE>. Содержимое после элемента <LE>header</LE> по-прежнему является частью последнего подраздела, начатого в элементе <LE>header</LE>, поскольку элемент <LE>header</LE> не участвует в алгоритме структуры.\n\n<Code>\n{`\n<body>\n    <header>\n        <h1>Little Green Guys With Guns</h1>\n        <nav>\n            <ul>\n                <li><a href=\"/games\">Games</a>\n                <li><a href=\"/forum\">Forum</a>\n                <li><a href=\"/download\">Download</a>\n            </ul>\n        </nav>\n        <h2>Important News</h2> <!-- this starts a second subsection -->\n        <!-- this is part of the subsection entitled \"Important News\" -->\n        <p>To play today's games you will need to update your client.</p>\n        <h2>Games</h2> <!-- this starts a third subsection -->\n    </header>\n    <p>You have three active games:</p>\n    <!-- this is still part of the subsection entitled \"Games\" -->\n ...\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n"
                    }
                },
                "del": {
                    "tagName": "del",
                    "categories": [
                        "phrasing content.",
                        "flow content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент del представляет собой функцию удаления из документа."
                    ],
                    "fullDescription": true,
                    "content_model": "transparent",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>del</LE> представляет собой функцию удаления из документа.\n</p>\n\n<p>\nЭлементы <LE>del</LE> не должны стоять на подразумеваемых границах абзаца.\n</p>\n\n<ExampleBox>\n\nНиже показан пункты того, что нужно сделать, пункты, которые уже выполнены, перечеркнуты с указанием даты и времени их удаления.\n\n<Code>\n{`\n<h1>Что нужно сделать</h1>\n\t<ul>\n \t\t<li>Выгрузить посудомоечную машину</li>\n \t\t<li><del datetime=\"2009-10-11T01:25-07:00\">Посмотреть лекции Уолтера Левинса</del></li>\n \t\t<li><del datetime=\"2009-10-10T23:38-07:00\">Загрузить музыку</del></li>\n \t\t<li>Купить принтер</li>\n\t</ul>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "sub": {
                    "tagName": "sub",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "sub элемент представляет собой нижний индекс."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\t<LE>sub</LE> элемент представляет собой нижний индекс.\n</p>\n\n<p>\n\tЭти элементы должны использоваться только для обозначения типографских условных обозначений с определенными значениями. Например, было бы неуместно использовать элементы sub и sup в названии системы подготовки документов LaTeX. Как правило, авторы должны использовать эти элементы только в том случае, если их отсутствие может изменить смысл содержания.\n</p>\n\n<p>\n\tВ некоторых языках надстрочные индексы являются частью типографских соглашений для сокращений.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<p> Их имена\n<span lang=\"fr\"><abbr>M<sup>lle</sup></abbr> Gwendoline</span> и\n<span lang=\"fr\"><abbr>M<sup>me</sup></abbr> Denise</span>.</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<p>\n<LE>sub</LE> можно использовать внутри элемента <LE>var</LE> для переменных, имеющих индексы.\n</p>\n\n<ExampleBox>\n\nЗдесь <LE>sub</LE> используется для представления подстрочного индекса, который идентифицирует переменную:\n\n<Code>\n{`\n<p>Координаты <var>i</var> точки\n(<var>x<sub><var>i</var></sub></var>, <var>y<sub><var>i</var></sub></var>).\nНапример, десятая\n(<var>x<sub>10</sub></var>, <var>y<sub>10</sub></var>).</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<p>\nВ математических выражениях часто используются нижние и верхние индексы. Авторам рекомендуется использовать MathML для разметки, но авторы могут выбрать использование <LE>sub</LE> и <LE>sup</LE>, если подробная математическая разметка нежелательна. \n</p>\n\n<ExampleBox>\n\nЗдесь <LE>sub</LE> используется для представления подстрочного индекса, который идентифицирует переменную:\n\n<Code>\n{`\n<var>E</var>=<var>m</var><var>c</var><sup>2</sup>\nf(<var>x</var>, <var>n</var>) = log<sub>4</sub><var>x</var><sup><var>n</var></sup>\n`}\n</Code>\n\n</ExampleBox>"
                    }
                },
                "small": {
                    "tagName": "small",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент <LE>small</LE> представляет собой комментарий, выполненный мелким шрифтом."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n    Элемент <LE>small</LE> представляет собой комментарий, выполненный мелким шрифтом.\n</p>\n\n<p>\n    Элемент <LE>small</LE> не стоит использовать для больших частей текста, например: для абзаца, для создания списка и для разделения текста. Он предназначен для коротких текстов. К примеру, список условий на странице не подойдет для использования данного элемента т.к. текст в списке будет являться главным содержимым страницы, а не дополнением.\n</p>\n\n<p>\n    <LE>small</LE> мы не можем использовать в подзагаловках, для этого подойдет элемент <LE>hgroup</LE> \n</p>\n\n<ExampleBox>\n\nВ примере ниже показано при помощи <LE>small</LE>, что НДС не включен в стоимость номера в отеле:\n\n<Code>\n{`\n<dl>\n\n    <dt>\n \t    Комната на одного\n    <dd>\n \t    199 € <small>завтрак включен, НДС не включен</small>\n    <dt>\n \t    Комната на двоих\n     <dd>\n \t    239 € <small>завтрак включен, НДС не включен</small>\n</dl>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВо втором примере элемент <LE>small</LE> используется для обозначения комментария сбоку в статье.\n\n<Code>\n{`\n<p>\n\tExample Corp объявили о рекордной прибыли во втором квартале <small>(Пояснение: Foo News является дочерней компанией\n\tExample Corp)</small>, можно предположить, что в следующем квартале произойдет слияние с Demo Group.\n</p>\n`}\n</Code>\n\nВ этом примере мы тоже видим боковую панель из статьи, она также имеет мелкий шрифт, указывая на источник информации.\n\n<Code>\n{`\n<aside>\n \t<h1>\n \t\tExample Corp\n\t</h1>\n \t<p>\n \t\tЭта компания приемущественно занимается компьютерами.\n\t</p>\n\t<p>\n\t \tМиссия Example Corp - обеспечить новостную и развлекательную платформу для населения.\n\t</p>\n \t<p>\n \t\t<small>Информация взята из <a href=\"https://example.com/about.html\">example.com</a> домашней страницы.</small>\n\t</p>\n</aside>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ этом примере при помощи <LE>small</LE> выделяется мелким шрифтом важная информация.\n\n<Code>\n{`\n<p>\n\t<strong>\n\t\t\t<small>Продолжайте использовать данную услугу.</small>\n\t</strong>\n</p>\n`}\n</Code>\n \n</ExampleBox>\n"
                    }
                },
                "q": {
                    "tagName": "q",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент <LE>q</LE> показывает цитирование."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>q</LE> показывает цитирование. \n</p>\n\n<p>\n\tЗнаки препинания, которые заключают внутрь содержимое элемента, например, кавычки, не ставятся перед, после и внутри <LE>q</LE> элемента. \n</p>\n\n<p>\n\tСодержимое элемента <LE>q</LE> - это цитата из какого-либо источника. Источник указывается с помощью элемента  <LE>cite</LE>\n</p>\n\n<p>\n\tЕсли элемент <LE>cite</LE> присутствует, то ссылка должна быть действительной и отделена пробелами. Сайт может разрешить пользователям переходить по таким ссылкам цитирования, но в первую очередь они предназначены для частного использования, а не для пользователей (к примеру, их используют серверные скрипты, собирающие статистику использования цитат сайтом).\n</p>\n\n<p>\n\tЭлемент <LE>q</LE> нельзя использовать вместо кавычек, он не представляет собой кавычки в чистом виде. Например, его нельзя использовать для саркастических высказываний.\n</p>\n\n<p>\n\tИспользование элемента <LE>q</LE> зависит от ситуации. Вы можете ставить знаки препинания без участия данного элемента.\n</p>\n\n<ExampleBox>\n\nПростой пример использования элемента <LE>q</LE>\n\n<Code>\n{`\n<p>\n\tМужчина сказал <q>То, что кажется невозможным просто требует больше времени.</q>. Я не согласен с этим.\n</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nПример использования элемента <LE>q</LE> с внешней и внутренней ссылкой:\n\n<Code>\n{`\n<p>\n\tЭто страница W3C\n\t<cite>\n\t\tО W3C\n\t</cite> \n\tсказано, что миссия W3C -\n\t<q cite=\"https://www.w3.org/Consortium/\"> это управление\nWorld Wide Web, он в полной мере раскрывает свой потенциал за счет разработки протоколов, обеспечивающих долгосрочное развитие Интернета</q>. \n\tЯ не соглашусь с данной миссией.\n</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ следующем примере цитата находится внутри цитаты:\n\n<Code>\n{`\n<p>\n\tВ\n\t<cite>\n\t\tпервом примере\n\t</cite>\n\tнаписано: <q>Мужчина сказал: <q>То, что кажется невозможным просто требует больше времени.</q>Я не согласен с этим.</q>. Хорошо, я не согласен еще больше!\n</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ следующем примере вместо элемента <LE>q</LE> используются кавычки:\n\n<Code>\n{`\n<p>\n\tЕго лучшим аргументом было ❝Я не согласен❞, мне показалось это смешным.\n</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ примере ниже кавычки используются для выделения названия. Использование элемена <LE>q</LE> в данном случае было бы неуместным.\n\n<Code>\n{`\n<p>\n\tСлово «непередаваемый» могло быть использовано для описания катастрофы.\n</p>\n`}\n</Code>\n\n</ExampleBox>\n\n\n"
                    }
                },
                "base": {
                    "tagName": "base",
                    "categories": [
                        "metadata content"
                    ],
                    "tag_omission": [
                        "Нет закрывающего тега."
                    ],
                    "description": [
                        "base элемент позволяет авторам указывать базовый URL-адрес документа для анализа URL-адресов и имя контекста по умолчанию для следующих гиперссылок.",
                        "Данный элемент не содержит больше ничего, кроме этой информации."
                    ],
                    "fullDescription": true,
                    "content_model": "Контент отсутсвует",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n    <LE>base</LE> элемент позволяет авторам указывать базовый URL-адрес документа для анализа URL-адресов и имя контекста по умолчанию для следующих гиперссылок. Данный элемент не содержит больше ничего, кроме этой информации.\n</p>\n\n<p>\n    В документе не должно быть более одного <LE>base</LE> элемента.\n</p>\n\n<p>\n    <LE>base</LE> элемент должен иметь либо атрибут <LA>href</LA>, либо <LA>target</LA> атрибут, либо и то, и другое.\n</p>\n\n<p>\n    Атрибут содержимого <LA>href</LA>, если он указан, должен содержать действительный URL-адрес, окруженный пробелами.\n</p>\n\n<p>\n    <LE>base</LE> элемент, если он имеет атрибут <LA>href</LA>, должен располагаться перед любыми другими элементами, для которых есть атрибуты, определенные как URL-адреса, за исключением элемента <LE>html</LE>  (его атрибут <LA>manifest</LA> не зависит от <LE>base</LE> элементов).\n</p>\n\n<p>\n    Атрибут <LA>target</LA>, если он указан, должен содержать допустимое имя для просмотра или ключевое слово, которое указывает, какой контекст при просмотре должен использоваться по умолчанию, когда гиперссылки и формы в документе могут переадресовываться.\n</p>\n\n<p>\n    <LE>base</LE> элемент, если он имеет <LA>target</LA> атрибут, может стоять перед любыми другими элементами, представляющими гиперссылки.\n</p>\n\n<p>\n    Чтобы указать <LA>target</LA> элемента через элементы: <LE>a</LE>, <LE>area</LE>, <LE>form</LE>, нужно следовать слудующим шагам:\n    <ul>\n       <li>Если элемент имеет <LA>target</LA> атрибут, то возвращаемся к его значению.</li>\n       <li>Если узел сети документа в элементе содержит <LE>base</LE> элемент с <LA>target</LA> атрибутом, то возвращаемся к значению <LA>target</LA> атрибута первого такого <LE>base</LE> элемента.</li>\n       <li>Возвращаемся к пустой строке.</li>\n    </ul>\n</p>\n\n<p>\n    <LE>base</LE> элемент, который является первым <LE>base</LE> элементом с атрибутом содержимого <LA>href</LA> в документе, имеет фиксированный базовый URL. Фиксированный базовый URL-адрес должен быть сразу установлен для элемента при возникновении любой из следующих ситуаций:\n<ul>\n       <li><LE>base</LE> элемент становится первым <LE>base</LE> элементом в структуре с атрибутом содержимого <LA>href</LA> в документе.</li>\n       <li><LE>base</LE> элемент - это первый <LE>base</LE> элемент в структуре с атрибутом содержимого <LA>href</LA> в документе, и его атрибут <LA>href</LA> изменяется.</li>\n</ul>\n</p>\n\n<p>\n  Чтобы установить фиксированный базовый URL-адрес для элемента:\n<ul>\n       <li>Документ должен стать элементом узла документа.</li>\n       <li>urlRecord будет должен быть связан со значением атрибута содержимого <LA>href</LA>, с резервным базовым URL-адресом документа и кодировкой символов документа. (Таким образом, <LE>base</LE> элемент сам по себе не затрагивается.)</li>\n       <li>Установите в качестве фиксированного базового URL-адреса элемента резервный базовый URL-адрес документа, при условии, что urlRecord функционирует, либо нет. Может ли <LE>base</LE> находиться в документе? Как результат по запросу к URL и документу может появлится «Заблокировано» или - urlRecord...</li>\n</ul>\n</p>\n\n<p>\n  Атрибут <LA>href</LA> IDL при запросе должен ссылаться на результат выполнения следующего алгоритма:\n<ul>\n       <li>Документ должен стать элементом узла документа.</li>\n       <li>url будет значением атрибута <LA>href</LA> в элементе, если он есть, и пустой строкой, если отсутствует.</li>\n       <li>urlRecord будет должен быть связан со значением атрибута содержимого <LA>href</LA>, с резервным базовым URL-адресом документа и кодировкой символов документа. (Таким образом, <LE>base</LE> элемент сам по себе не затрагивается.)</li>\n       <li>urlRecord выдвет ошибку, вернитесь к url.</li>\n       <li>Переходим к установке urlRecord.</li>\n</ul>\n</p>\n\n<p>\n    Атрибут <LA>href</LA> IDL при настройке должен установить содержимое по заданному новому значению.\n</p>\n\n<p>\n    <LA>target</LA> атрибут IDL должен отражать одноименный атрибут в содержимом.\n</p>\n\n<ExampleBox>\n\nВ этом примере <LE>base</LE> элемент используется для установки базового URL-адреса документа:\n\n<Code>\n{`\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <title>Это пример &lt;base&gt; элемента</title>\n        <base href=\"https://www.example.com/news/index.html\">\n    </head>\n    <body>\n        <p>Посетите <a href=\"archives.html\">архив</a>.</p>\n    </body>\n</html>\n`}\n</Code>\n\nСсылка в приведенном выше примере будет на «https://www.example.com/news/archives.html».\n\n</ExampleBox>\n\n\n"
                    }
                },
                "hr": {
                    "tagName": "hr",
                    "categories": [
                        "flow content."
                    ],
                    "tag_omission": [
                        "Нет закрывающего тега."
                    ],
                    "description": [
                        "Элемент hr представляет собой тематический разрыв в абзаце, например изменение сцены в рассказе или переход к другой теме в разделе справочника."
                    ],
                    "fullDescription": true,
                    "content_model": "Отсутствует.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\t Элемент <LE>hr</LE> представляет собой тематический разрыв в абзаце, например изменение сцены в рассказе или переход к другой теме в разделе справочника.\n</p>\n\n\n<ExampleBox>\n\nВ следующем вымышленном отрывке из руководства по проекту показаны два раздела, в которых для разделения тем внутри раздела используется элемент <LE>hr</LE>.\n\n<Code>\n{`\n<section>\n    <h1>Коммуникация</h1>\n    <p>Есть разные способы общения. Этот раздел\n     охватывает несколько важных из них.</p>\n    <hr>\n        <p>Характеристики:</p>\n        <ul>\n            <li>Можно передать мысли другому.</li>\n            <li>Можно поделиться частью своего сознания.</li>\n            <li>Почувствуй, что ты поменялся телами.</li>\n        </ul>\n    <hr>\n        <p>Радиоприемники с помощью электромагнитных волн передают мысли.</p>\n    <hr>\n        <p>Сигнальные вспышки используют электромагнитный спектр в\n         нанометровый диапазоне.</p>\n</section>\n<section>\n    <h1>Еда</h1>\n    <p>Вся еда:</p>\n    <dl>\n        <dt>Картошка</dt>\n        <dd>Две в день</dd>\n        <dt>Суп</dt>\n        <dd>Одна чашка в день</dd>\n    </dl>\n    <hr>\n        <p>Приготовление блюд осуществляется поварами.</p>\n</section>\n`}\n</Code>\n\nНет необходимости в элементе <LE>hr</LE> между самими разделами, поскольку элемент <LE>section</LE> и элемент <LE>h1</LE> сами по себе подразумевают тематические изменения.\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ следующем отрывке из книги Питера Ф. Гамильтона «Звезда Пандоры» показаны два абзаца, предшествующие смене сцены, и абзац, следующий за ней. Смена сцены, представленная в печатной книге промежутком, содержащим одиночную звезду в центре между вторым и третьим абзацами, здесь представлена с помощью элемента <LE>hr</LE>.\n\n<Code>\n{`\n<p>Дадли было девяносто два года.\nНастало время для очередного омоложения. Несмотря на то, что его тело имело физически\nвозраст пятидесятилетнего, перспектива старения - это то, к чему он относился с ужасом.</p>\n<p><i>Может, это не так уж плохо</i>, сказал он себе. Ложь была достаточно утешительной, чтобы провести там остаток ночи.</p>\n<hr>\n<p>Капитан Оллендер отвез Дадли домой сразу после рассвета. Машина была старая и изношенная, но вполне способная\nделать свою работу. У нее был дешевый дизельный двигатель, достаточно распространенный в городе, такой как Гралмонд, хотя ее привод был полностью современный - фотоневральный процессор. Благодаря высокой подвеске и\nшинам с глубоким протектором, она могла проехать по грунтовой дороге к\nобсерваторию в любую погоду и сезоны, в том числе при метровом снеге.</p>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n"
                    }
                },
                "frame": {
                    "tagName": "frame",
                    "categories": [
                        "Отсутствуют."
                    ],
                    "tag_omission": [
                        "Закрывающий тег отсутствует."
                    ],
                    "description": [
                        "Тег frame определяет свойства отдельного фрейма, на которые делится окно браузера."
                    ],
                    "content_model": "Отсутствует.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "bordercolor",
                                "description": "Цвет линии границы."
                            },
                            {
                                "name": "frameborder",
                                "description": "Отображать рамку вокруг фрейма или нет."
                            },
                            {
                                "name": "name",
                                "description": "Задает уникальное имя фрейма."
                            },
                            {
                                "name": "noresize",
                                "description": "Определяет, можно изменять размер фрейма пользователю или нет."
                            },
                            {
                                "name": "scrolling",
                                "description": "Способ отображения полосы прокрутки во фрейме."
                            },
                            {
                                "name": "src",
                                "description": "Путь к файлу, предназначенному для загрузки во фрейме."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n Тег <LE>frame</LE> определяет свойства отдельного фрейма, на которые делится окно браузера. Этот элемент должен располагаться в контейнере <LE>frameset</LE>, который к тому же задает способ разметки страницы на отдельные области. В каждую из таких областей загружается самостоятельная веб-страница определяемая с помощью атрибута src. Хотя обязательных атрибутов у тега <LE>frame</LE> и нет, рекомендуется задавать каждому фрейму его имя через атрибут <LA>name</LA>. Это особенно важно, если требуется по ссылке из одного фрейма загружать документ в другой.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Frameset//EN\" \n  \"http://www.w3.org/TR/html4/frameset.dtd\">\n<html>\n \t\t<head>\n \t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n  \t\t\t\t<title>Тег FRAME</title>\n \t\t</head>\n\t\t<frameset rows=\"80,*\" cols=\"*\">\n   \t\t<frame src=\"top.html\" name=\"topFrame\" scrolling=\"no\" noresize>\n   \t\t\t\t<frameset cols=\"80,*\">\n     \t\t\t<frame src=\"left.html\" name=\"leftFrame\" scrolling=\"no\" noresize>\n     \t\t\t<frame src=\"main.html\" name=\"mainFrame\">\n   \t\t\t\t</frameset>\n \t\t</frameset>\n\n</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "details": {
                    "tagName": "details",
                    "categories": [
                        "flow content",
                        "sectioning root",
                        "interactive content",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент details представляет собой виджет раскрытия информации, из которого пользователь может получить дополнительную информацию или элементы управления."
                    ],
                    "content_model": "flow content.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "open",
                                "description": "Делает details видимым."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n  Элемент <LE>details</LE> представляет собой виджет раскрытия информации, из которого пользователь может получить дополнительную информацию или элементы управления.\n</p>\n\n<p>\n  Первый дочерний элемент <LE>summary</LE> элемента, если таковой имеется, представляет собой сводку деталей. Если дочерний элемент <LE>summary</LE> отсутствует, пользовательский агент должен предоставить свою собственную вариацию (например, «Подробности»).\n</p>\n\n<p>\n  Остальное содержимое элемента представляет собой дополнительную информацию или элементы управления.\n</p>\n\n<p>\n  Атрибут <LA>open</LA> содержимого - это логический атрибут. Если он присутствует, это означает, что пользователю должны быть показаны как сводка, так и дополнительная информация. Если атрибут отсутствует, отображается только сводка.\n</p>\n\n<p>\n  При создании элемента, если атрибут отсутствует, дополнительная информация должна быть скрыта; если атрибут присутствует, эта информация должна быть показана. Впоследствии, если атрибут удаляется, то информация должна быть скрыта; если атрибут добавлен, информация должна отображаться.\n</p>\n\n<p>\n  Пользовательский агент должен позволять пользователю запрашивать отображение или скрытие дополнительной информации. Чтобы удовлетворить запрос на отображение подробностей, пользовательский агент должен установить для атрибута <LA>open</LA> элемента пустую строку. Чтобы удовлетворить запрос на скрытие информации, пользовательский агент должен удалить атрибут <LA>open</LA> из элемента.\n</p>\n\n<ExampleBox>\n\n  В следующем примере показан элемент details, используемый для скрытия технических сведений в отчете о ходе выполнения.\n\n<Code>\n{`\n\t    <section class=\"progress window\">\n          <h1>Воплоти мечту детства</h1>\n          <details>\n                  <summary>Копирование... <progress max=\"375505392\" value=\"97543282\"></progress> 25%</summary>\n                  <dl>\n                         <dt>Загрузка:</dt> <dd>452KB/s</dd>\n                         <dt>Размещение:</dt> <dd>/home/rpausch/raycd.m4v</dd>\n                         <dt>Новое размещение::</dt> <dd>/var/www/lectures/raycd.m4v</dd>\n                         <dt>Продолжительность:</dt> <dd>01:16:27</dd>\n                         <dt>Цвет профиля:</dt> <dd>SD (6-1-6)</dd>\n                         <dt>Размер:</dt> <dd>320×240</dd>\n                  </dl>\n          </details>\n      </section>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "meter": {
                    "tagName": "meter",
                    "categories": [
                        "flow content.",
                        "phrasing content.",
                        "labelable element.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент meter представляет собой скалярное измерение в пределах известного диапазона или дробное значение."
                    ],
                    "content_model": "phrasing content.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "value",
                                "description": "Текущее значение элемента."
                            },
                            {
                                "name": "min",
                                "description": "Нижняя граница диапазона."
                            },
                            {
                                "name": "max",
                                "description": "Верхняя граница диапазона."
                            },
                            {
                                "name": "low",
                                "description": "Верхний предел нижнего диапазона."
                            },
                            {
                                "name": "high",
                                "description": "Нижний предел высокого диапазона."
                            },
                            {
                                "name": "optimum",
                                "description": "Оптимальное значение."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n \t  Элемент <LE>meter</LE> представляет собой скалярное измерение в пределах известного диапазона или дробное значение; например, использование диска, релевантность результата запроса или доля голосующего населения, выбравшего конкретного кандидата.\n</p>\n\n<p>\n\t Его также называют датчиком.\n</p>\n\n<p>\n   Элемент <LE>meter</LE> не должен использоваться для индикации прогресса (как индикатор выполнения). Для этой роли HTML предоставляет отдельный элемент.\n</p>\n\n<ExampleBox>\n\n  В следующих примерах показаны три датчика, которые будут заполнены на три четверти:\n\n<Code>\n{`\nИспользование места для хранения: <meter value=6 max=8>6 блоков использовано (из 8)</meter>\nЯвка избирателей: <meter value=0.75><img alt=\"75%\" src=\"graph75.png\"></meter>\nБилеты проданы: <meter min=\"0\" max=\"100\" value=\"75\"></meter>\n`}\n</Code>\n\nСледующий пример - неправильное использование элемента, потому что он не дает диапазона (а поскольку максимальное значение по умолчанию равно 1, оба датчика будут выглядеть максимально увеличенными):\n\n<Code>\n{`\n<p>Диаметр пирога <meter value=12>12cm</meter>\nвысота <meter value=2>2cm</meter>.</p> <!-- Плохо сделано! -->\n`}\n</Code>\n\nВместо этого можно либо не включать элемент <LE>meter</LE>, либо использовать элемент <LE>meter</LE> с определенным диапазоном, чтобы дать определить в контексте по сравнению с другими круговыми диаграммами:\n\n<Code>\n{`\n<p>Диаметр пирога 12cm, высота 2cm.</p>\n<dl>\n     <dt>Диаметр: <dd> <meter min=0 max=20 value=12>12cm</meter>\n     <dt>Высота: <dd> <meter min=0 max=10 value=2>2cm</meter>\n</dl>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\n  Приведенный выше пример можно расширить, указав единицы измерения:\n\n<Code>\n{`\n<dl>\n    <dt>Диаметр: <dd> <meter min=0 max=20 value=12 title=\"centimeters\">12cm</meter>\n    <dt>Высота: <dd> <meter min=0 max=10 value=2 title=\"centimeters\">2cm</meter>\n</dl>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\n  В следующем примере показано, как можно показать красиво напечатанный текст.\n\n<Code>\n{`\n<p>Использование диска: <meter min=0 value=170261928 max=233257824>170 261 928 бит из 233 257 824 бит доступных</meter></p>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n\n\n\n\n\n"
                    }
                },
                "ins": {
                    "tagName": "ins",
                    "categories": [
                        "flow content.",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент ins представляет собой дополнение к документу."
                    ],
                    "fullDescription": true,
                    "content_model": "transparent.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>ins</LE> представляет собой дополнение к документу.\n</p>\n\n<ExampleBox>\n\nНиже показано дополнение к абзацу:\n\n<Code>\n{`\n<aside>\n \t<ins>\n \t\t<p> Я люблю фрукты. </p>\n \t</ins>\n</aside>\n`}\n</Code>\n\nДалее в примере то же самое, потому что все, что в элементе <LE>aside</LE> считается phrasing content и, следовательно, - только один абзац:\n\n<Code>\n{`\n<aside>\n \t<ins>\n \t\tЯблоки <em>вкусные</em>.\n \t</ins>\n \t<ins>\n \t\tИ груши.\n \t</ins>\n</aside>\n`}\n</Code>\n\n</ExampleBox>\n\n<p>\n    Элементы <LE>ins</LE> не должны пересекать подразумеваемые границы абзаца.\n</p>\n\n<ExampleBox>\n\nВ следующем примере представлены два абзаца, второй из которых состоит из двух частей. Таким образом, первый элемент <LE>ins</LE> в этом примере пересекает границу абзаца, что плохо.\n\n<Code>\n{`\n<aside>\n\t <!-- Не делайте так -->\n \t<ins datetime=\"2005-03-16 00:00Z\">\n  \t<p> Я люблю фрукты. </p>\n  \t\tЯблоки <em>вкусные</em>.\n \t</ins>\n \t<ins datetime=\"2007-12-19 00:00Z\">\n  \t\tИ груши.\n \t</ins>\n</aside>\n`}\n</Code>\n\nНиже лучший способ. Тут больше элементов, но ни один из элементов не пересекает подразумеваемые границы абзаца.\n\n<Code>\n{`\n<aside>\n \t<ins datetime=\"2005-03-16 00:00Z\">\n  \t<p> Я люблю фрукты. </p>\n \t</ins>\n \t<ins datetime=\"2005-03-16 00:00Z\">\n \t\t Яблоки <em>вкусные</em>.\n \t</ins>\n \t<ins datetime=\"2007-12-19 00:00Z\">\n  \t\tИ груши.\n \t</ins>\n</aside>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n"
                    }
                },
                "dt": {
                    "tagName": "dt",
                    "categories": [
                        "Отсутствуют."
                    ],
                    "tag_omission": [
                        "Конечный тег элемента dt может не использоваться, если за элементом dt сразу следует другой элемент dt или элемент dd."
                    ],
                    "description": [
                        "Элемент dt представляет термин или имя, часть группы описания терминов в списке описаний (элемент dl)."
                    ],
                    "fullDescription": true,
                    "content_model": "flow content.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>dt</LE> представляет термин или имя, часть группы описания терминов в списке описаний (элемент dl).\n</p>\n\n<ExampleBox>\n\nВ этом примере показан список часто задаваемых вопросов (FAQ), размеченный с помощью элемента <LE>dt</LE> для вопросов и элемента<LE>dd</LE> для ответов.\n\n<Code>\n{`\n<article>\n    <h1>FAQ</h1>\n    <dl>\n        <dt>Что вы хотите?</dt>\n        <dd>Ваши данные.</dd>\n        <dt>Когда вы хотите?</dt>\n        <dd>Сейчас.</dd>\n        <dt>Где это?</dt>\n        <dd>Мы не знаем.</dd>\n    </dl>\n</article>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "canvas": {
                    "tagName": "canvas",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "embedded content.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент canvas предоставляет варианты размещения изображения, зависящие от разрешения, который можно использовать для изменения графиков, игровой графики, искусства или других визуальных изображений."
                    ],
                    "content_model": [
                        "Без интерактивных потомков содержимого, за исключением a элементов, элементов img с атрибутами usemap, элементов button, элементов input, атрибут type находится в Checkbox или Radio Button, элементов select, если размер дисплея больше 1."
                    ],
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "width",
                                "description": "Горизонтальное направление"
                            },
                            {
                                "name": "height",
                                "description": "Вертикальное направление"
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>canvas</LE> предоставляет варианты размещения изображения, зависящие от разрешения, который можно использовать для изменения графиков, игровой графики, искусства или других визуальных изображений.\n</p>\n\n<p>\n\tАвторам не следует использовать элемент <LE>canvas</LE> в документе, если можно использовать более подходящий элемент. Например, нецелесообразно использовать элемент <LE>canvas</LE> для визуализации заголовка страницы: если заголовок является графически насыщенным, он должен быть размечен с использованием соответствующих элементов (обычно <LE>h1</LE>), а затем стилизовано с использованием CSS и вспомогательных технологий.\n</p>\n\n<p>\n\tКогда авторы используют элемент <LE>canvas</LE>, они также должны показать контент, который при представлении пользователю передает по существу ту же функцию или цель, что и изображение с <LE>canvas</LE>. Это содержимое может быть размещено как содержимое элемента <LE>canvas</LE>.\n</p>\n\n\n\n\n\n\n"
                    }
                },
                "data": {
                    "tagName": "data",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент <LE>data</LE> считывается компьютером при помощи атрибута <LE>value</LE>"
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>data</LE> считывается компьютером при помощи атрибута <LE>value</LE>\n</p>\n\n<p>\n\tАтрибут <LE>value</LE> обязательно должен присутствовать. Его содержимое представляет значение, считываемое компьютером.\n</p>\n\n<p>\n\tДанный элемент можно использовать для нескольких целей.\n</p>\n\n<p>\n\tВ сочетании с микроформатами или атрибутами микроданных, данный элемент используется как для считывания значений компьютером, так и для визуализации в веб-браузере. В этом случае формат, который будет использоваться в атрибуте значения, определяется используемыми микроформатами или словарем микроданных.\n</p>\n\n<p>\n\tЭлемент также можно использовать в сочетании со скриптами на странице, когда у скрипта есть буквальное значение, которое нужно сохранить вместе с понятным для пользователя значением. В таких случаях используемый формат зависит только от потребностей пользователя. (Атрибут <LE>data- *</LE>  также может быть полезен в таких ситуациях.)\n</p>\n\n<p>\n\tАтрибут <LE>value</LE> IDL отображает контент атрибут одноименно.\n</p>\n\n<ExampleBox>\n\nВ таблице ниже имеются числовые значения, закодированные с использованием элемента <LE>data</LE>, таким образом что библиотека JavaScript для сортировки таблиц сортирует каждый отдельный столбец, несмотря на то, что числа представлены в текстовой форме в одном столбце и в разложенной форме в другом.\n\n<Code>\n{`\n<script src=\"sortable.js\"></script>\n<table class=\"sortable\">\n \t<thead> <tr> <th> Игра <th> Компания <th> Размер карты\n \t\t<tbody>\n  \t\t\t<tr> <td> 1830 <td> <data value=\"8\">Восемь</data> <td> <data value=\"93\">19+74 магии (93 всего)</data>\n  \t\t\t<tr> <td> 1856 <td> <data value=\"11\">Одиннадцатьn</data> <td> <data value=\"99\">12+87 магии (99 всего)</data>\n  \t\t\t<tr> <td> 1870 <td> <data value=\"10\">Десять</data> <td> <data value=\"149\">4+145 магии (149 всего)</data>\n</table>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "embed": {
                    "tagName": "embed",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "embedded content",
                        "interactive content",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Нет закрывающего тега."
                    ],
                    "description": [
                        "Элемент embed обеспечивает точку интеграции для внешнего (обычно не HTML) приложения или интерактивного контента."
                    ],
                    "content_model": "Отсутствует.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "src",
                                "description": "Ссылается на ресурс"
                            },
                            {
                                "name": "type",
                                "description": "Тип встроенного ресурса"
                            },
                            {
                                "name": "width",
                                "description": "Горизонтальное выравнивание"
                            },
                            {
                                "name": "height",
                                "description": "Вертикальное выравнивание"
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n  Элемент <LE>embed</LE> обеспечивает точку интеграции для внешнего (обычно не HTML) приложения или интерактивного контента.\n</p>\n\n<p>\n  Атрибут <LA>src</LA> ссылается на URL-адрес встраиваемого ресурса. Атрибут, если он присутствует, должен содержать действительный непустой URL-адрес, потенциально окруженный пробелами.\n</p>\n\n<ExampleBox>\n\n  Вот способ встроить ресурс, для которого требуется плагин, например Flash:\n\n<Code>\n{`\n\t     <embed src=\"catgame.swf\">\n`}\n</Code>\n\nЕсли у пользователя нет подключаемого модуля (например, если подключаемый модуль не поддерживает платформу пользователя), то пользователь не сможет использовать ресурс.\n\nЧтобы передать плагину параметр «качество» со значением «высокое», можно указать атрибут:\n\n<Code>\n{`\n       <embed src=\"catgame.swf\" quality=\"high\">\n`}\n</Code>\n\nЕсли использовать вместо этого элемента - <LE>object</LE>:\n\n<Code>\n{`\n<object data=\"catgame.swf\">\n       <param name=\"quality\" value=\"high\">\n</object>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "h3": {
                    "tagName": "h3",
                    "categories": [
                        "flow content",
                        "heading content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Эти элементы представляют собой заголовки своих разделов."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭти элементы представляют собой заголовки своих разделов. \n</p>\n\n<p>\n\tСемантика и значение этих элементов определены в разделе, посвященном заголовкам и разделам.\n</p>\n\n<p>\n\tЭтим элементам присваивается ранг, определяемый числом в их названии. Считается, что элемент <LE>h1</LE> имеет наивысший ранг, элемент <LE>h6</LE> имеет самый низкий ранг, а два элемента с одинаковым именем имеют одинаковый ранг.\n</p>\n\n<ExampleBox>\n\nВ соответствии со структурой документов (их заголовков и структур разделов), эти два фрагмента семантически эквивалентны:\n\n<Code>\n{`\n<body>\n\t<h1>Назавем это рисованием</h1>\n\t<h2>Погружение в</h2>\n\t<h2>Простые формы</h2>\n\t<h2>Холст</h2>\n\t<h3>Схема координат</h3>\n\t<h2>Пути</h2>\n</body>\n<body>\n\t<h1>Назовем это рисованием</h1>\n \t<section>\n  \t\t<h1>Погружение в</h1>\n \t</section>\n \t<section>\n \t\t<h1>Простые формы</h1>\n \t</section>\n\t<section>\n  \t\t<h1>Холст</h1>\n  \t\t\t<section>\n  \t\t\t\t<h1>Схема кординат</h1>\n  \t\t\t</section>\n \t</section>\n \t<section>\n \t\t<h1>Пути</h1>\n \t</section>\n</body>\n`}\n</Code>\n\nАвторы могут предпочесть первый стиль из-за его краткости или второй стиль из-за его удобства по сравнению с редактированием; это вопрос предпочтения авторского стиля.\n\nЭти два стиля можно комбинировать для совместимости с устаревшими инструментами. Третий фрагмент снова имеет ту же структуру, что и предыдущие два:\n\n<Code>\n{`\n<body>\n \t<h1>Назовем это рисованием</h1>\n \t<section>\n \t\t<h2>Погружение в</h2>\n \t</section>\n \t<section>\n \t\t<h2>Простые формы</h2>\n \t</section>\n \t\t<section>\n \t\t\t<h2>Холст</h2>\n  \t\t<section>\n  \t\t\t<h3>Схема координат</h3>\n \t \t</section>\n \t</section>\n \t<section>\n  \t\t<h2>Paths</h2>\n \t</section>\n</body>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "footer": {
                    "tagName": "footer",
                    "categories": [
                        "flow content.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент footer представляет нижний колонтитул для его ближайшего дочернего элемента, разделяющего содержимое или корневой элемент.",
                        "footer обычно содержит информацию о своем разделе, например, кто его написал, ссылки на связанные документы, данные об авторских правах и т.д."
                    ],
                    "fullDescription": true,
                    "content_model": "flow content.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>footer</LE> представляет нижний колонтитул для его ближайшего дочернего элемента, разделяющего содержимое или корневой элемент. <LE>footer</LE> обычно содержит информацию о своем разделе, например, кто его написал, ссылки на связанные документы, данные об авторских правах и т.д.\n</p>\n\n<p>\n\tКогда элемент <LE>footer</LE> содержит целые разделы, они представляют собой приложения, индексы, подробные лицензионные соглашения и другой подобный контент.\n</p>\n\n<p>\n\t<LE>footer</LE> не обязательно должен появляться в конце раздела, хотя обычно он появляется.\n</p>\n\n<p>\n\tКогда ближайший элемент в содержимом, разделяющий содержимое или корневой элемент, является основным элементом, то он применяется ко всей странице.\n</p>\n\n<ExampleBox>\n\nВот страница с двумя нижними <LE>footer</LE>, один вверху и один внизу, с одинаковым содержанием:\n\n<Code>\n{`\n<body>\n \t<footer><a href=\"../\">Возвращаемся к индексации...</a></footer>\n \t<hgroup>\n \t\t<h1>Первопричина</h1>\n  \t\t<h2>Значения</h2>\n \t</hgroup>\n \t<p>\n \tОписание процесса.\n\t</p>\n\t<footer><a href=\"../\">Возваращемся к индексации...</a></footer>\n</body>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВот пример, который показывает, что элемент <LE>footer</LE> используется как для нижнего колонтитула всего сайта, так и для нижнего колонтитула раздела.\n\n<Code>\n{`\n<!DOCTYPE HTML>\n\t<HTML LANG=\"en\"><HEAD>\n\t<TITLE>Ученый - бродяга</TITLE>\n\t<BODY>\n\t\t<H1>Ученый-бродяга</H1>\n\t\t<ARTICLE>\n \t\t\t<H1>Эпизод 15</H1>\n \t\t\t<VIDEO SRC=\"/fm/015.ogv\" CONTROLS PRELOAD>\n \t\t \t\t<P><A HREF=\"/fm/015.ogv\">Загрузить видео</A>.</P>\n \t\t\t</VIDEO>\n\t\t\t<FOOTER> <!-- footer for article -->\n \t\t\t\t<P>Published <TIME DATETIME=\"2009-10-21T18:26-07:00\">2009/10/21 в 6:26pm</TIME></P>\n \t\t\t</FOOTER>\n\t\t</ARTICLE>\n\t\t<ARTICLE>\n \t\t\t<H1>Мои любимые тренировки.</H1>\n \t\t\t<P>Я люблю тренировки.</P>\n \t\t\t<P>Особенно на свежем воздухе.</P>\n \t\t\t<FOOTER> <!-- footer for article -->\n  \t\t\t\t<P>Опубликовано<TIME DATETIME=\"2009-09-15T14:54-07:00\">2009/09/15 в 2:54pm</TIME></P>\n \t\t\t</FOOTER>\n\t\t</ARTICLE>\n\t\t<FOOTER> <!-- site wide footer -->\n \t\t<NAV>\n  \t\t<P>\t<A HREF=\"/credits.html\">Кредиты</A> —\n     \t\t<A HREF=\"/tos.html\">Сервисы</A> —\n     \t\t<A HREF=\"/index.html\">Блог</A></P>\n \t\t</NAV>\n \t\t<P>Copyright © 2009 Gordon Freeman</P>\n\t\t</FOOTER>\n\t</BODY>\n</HTML>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nНекоторые дизайны сайтов имеют то, что иногда называют «fat footers» - <LE>footer</LE>, которые содержат много материала, включая изображения, ссылки на другие статьи, ссылки на страницы для отправки отзывов, специальные предложения ... в некотором смысле - целое.\n\nЭтот фрагмент показывает <LE>footer</LE> на сайте с «fat footers»:\n\n<Code>\n{`\n...\n <footer>\n  \t<nav>\n   \t<section>\n   \t\t<h1>Статьи</h1>\n    \t<p><img src=\"images/somersaults.jpeg\" alt=\"\"> Пойти в спортзал с\n    \tнашем классом! Наш учитель Джим пйдет с нами. <a href=\"articles/somersaults/1\">Часть\n   \t\t1</a> · <a href=\"articles/somersaults/2\">Часть 2</a></p>\n    \t<p><img src=\"images/kindplus.jpeg\"> Устали ходить <a href=\"articles/kindplus/1\">Читай больше...</a></p>\n    \t<p><img src=\"images/crisps.jpeg\"> Осталась картошка<a\n    \thref=\"articles/crisps/1\">Читай больше...</a></p>\n  \t</section>\n   \t\t<ul>\n    \t\t<li> <a href=\"/about\">О нас...</a>\n    \t\t<li> <a href=\"/feedback\">Оставь обратную связсь!</a>\n    \t\t<li> <a href=\"/sitemap\">Карта сайта</a>\n   \t\t</ul>\n  \t</nav>\n  \t<p><small>Copyright © 2015 The Snacker —\n  \t<a href=\"/tos\">Сервис</a></small></p>\n </footer>\n</body>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n\n\n"
                    }
                },
                "noscript": {
                    "tagName": "noscript",
                    "categories": [
                        "metadata content.",
                        "flow content.",
                        "phrasing content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент noscript ничего не представляет, если сценарии включены, и представляет своих дочерних элементов, если сценарии отключены."
                    ],
                    "content_model": "Отсутствует.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>noscript</LE> ничего не представляет, если сценарии включены, и представляет своих дочерних элементов, если сценарии отключены. Он используется для представления различной разметки пользовательским агентам, поддерживающим сценарии, и тем, которые не поддерживают создание сценариев, влияя на то, как анализируется документ.\n\n<p>\n\tЭлемент <LE>noscript</LE> нельзя использовать в XML-документах.\n</p>\n\n<p>\n\tДругих требований к элементу <LE>noscript</LE> нет. В частности, дочерние элементы элемента <LE>noscript</LE> не освобождаются от отправки формы, создания сценариев и т.д., Даже если для элемента разрешено создание сценариев.\n</p>\n\n<ExampleBox>\n\nВ следующем примере элемент <LE>noscript</LE> используется для резервирования сценария.\n\n<Code>\n{`\n<form action=\"calcSquare.php\">\n\t <p>Номер</label>:\n\t\t  <input id=\"x\" name=\"x\" type=\"number\">\n\t </p>\n\t <script>\n\t\t  var x = document.getElementById('x');\n\t\t  var output = document.createElement('p');\n\t\t  output.textContent = 'Введите число; оно будет возведено в квадрат сразу!';\n\t\t  x.form.appendChild(output);\n\t\t  x.form.onsubmit = function () { return false; }\n\t\t  x.oninput = function () {\n\t\t\t    var v = x.valueAsNumber;\n\t\t\t    output.textContent = v + ' squared is ' + v * v;\n\t\t  };\n\t </script>\n\t <noscript>\n\t     <input type=submit value=\"Calculate Square\">\n\t </noscript>\n</form>\n`}\n</Code>\n\nНижеупомянутый метод также полезен в XML-документах, поскольку там запрещен скрипт.\n\n<Code>\n{`\n<form action=\"calcSquare.php\">\n\t <p>\n\t\t  <label for=x>Номер</label>:\n\t\t  <input id=\"x\" name=\"x\" type=\"number\">\n\t </p>\n\t <input id=\"submit\" type=submit value=\"Calculate Square\">\n\t <script>\n\t\t  var x = document.getElementById('x');\n\t\t  var output = document.createElement('p');\n\t\t  output.textContent = 'Введите число; оно будет возведено в квадрат сразу!';\n\t\t  x.form.appendChild(output);\n\t\t  x.form.onsubmit = function () { return false; }\n\t\t  x.oninput = function () {\n\t\t    var v = x.valueAsNumber;\n\t\t    output.textContent = v + ' squared is ' + v * v;\n\t\t  };\n\t\t  var submit = document.getElementById('submit');\n\t\t  submit.parentNode.removeChild(submit);\n\t </script>\n</form>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n"
                    }
                },
                "img": {
                    "tagName": "img",
                    "categories": [
                        "flow content.",
                        "phrasing content.",
                        "embedded content.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Нет закрывающего тега."
                    ],
                    "description": [
                        "Элемент img представляет изображение."
                    ],
                    "content_model": "Отсутствует.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "alt",
                                "description": "Заменяющий текст, когда изображения недоступны."
                            },
                            {
                                "name": "src",
                                "description": "Адрес ресурса."
                            },
                            {
                                "name": "srcset",
                                "description": "Изображения для использования в различных ситуациях, например, дисплеи с высоким разрешением, маленькие мониторы и т. д."
                            },
                            {
                                "name": "sizes",
                                "description": "Размеры изображений для разных макетов страниц."
                            },
                            {
                                "name": "crossorigin",
                                "description": "Как элемент обрабатывает запросы на перекрестное происхождение."
                            },
                            {
                                "name": "usemap",
                                "description": "Имя используемой карты изображений."
                            },
                            {
                                "name": "ismap",
                                "description": "Является ли изображение серверной картой изображений."
                            },
                            {
                                "name": "width",
                                "description": "Горизонтальный размер."
                            },
                            {
                                "name": "height",
                                "description": "Вертикальный размер."
                            },
                            {
                                "name": "decoding",
                                "description": "Подсказка по декодированию для использования при обработке этого изображения."
                            },
                            {
                                "name": "loading",
                                "description": "Используется при определении отсрочки загрузки."
                            },
                            {
                                "name": "referrerpolicy",
                                "description": "Политика реферера для выборок, инициированных элементом."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n Элемент <LE>img</LE> представляет изображение.\n</p>\n\n<p>\nЭлемент <LE>img</LE> имеет <LA>source</LA> атрибут, изначально установленный для самого элемента.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<img src=\"1.jpeg\" alt=\"1\">\n<img src=\"2.jpeg\" loading=eager alt=\"2\">\n<img src=\"3.jpeg\" loading=lazy alt=\"3\">\n<div id=very-large></div> <!-- Все, что находится после этого div, находится ниже области просмотра -->\n<img src=\"4.jpeg\" alt=\"4\">\n<img src=\"5.jpeg\" loading=lazy alt=\"5\">\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nЗдесь он используется как дополнительный значок:\n\n<Code>\n{`\n<p>Я живу в <img src=\"carouge.svg\" alt=\"\"> Каорге.</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВот еще пример, показывающий одно и то же изображение, используемое в разных контекстах.\n\n<Code>\n{`\n<article>\n       <h1>Мои коты</h1>\n       <h2>Флаффи</h2>\n       <p>Флаффи - мой любимый.</p>\n       <img src=\"fluffy.jpg\" alt=\"Любит играть с мячиком в саду.\">\n       <p>Очень мил.</p>\n       <h2>Майлз</h2>\n       <p>Мой другой кот, только ест и спит.</p>\n</article>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n\n\n"
                    }
                },
                "colgroup": {
                    "tagName": "colgroup",
                    "categories": [
                        "Отсутствуют."
                    ],
                    "tag_omission": [
                        "Начальный тег элемента colgroup может не ставится, если сначала стоит элемент col внутри colgroup и если до этого не стоял другой элемент colgroup без закрывающего тега.",
                        "Конечный тег элемента colgroup может не ставится, если за элементом colgroup нет пробела или комментария."
                    ],
                    "description": [
                        "Элемент colgroup представляет группу из одного или нескольких столбцов в таблице, которая является родительской при наличии родительского элемента - элемента таблицы."
                    ],
                    "fullDescription": true,
                    "content_model": "Отсутствует.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>colgroup</LE> представляет группу из одного или нескольких столбцов в таблице, которая является родительской при наличии родительского элемента - элемента таблицы.\n</p>\n\n<p>\n\tЕсли элемент <LE>colgroup</LE>  не содержит элементов <LE>col</LE>, тогда для элемента может быть указан атрибут содержимого <LA>span</LA>, значение которого должно быть действительным неотрицательным целым числом больше нуля и меньше или равно 1000.\n</p>\n\n<p>\n\tЭлемент <LE>colgroup</LE> и его атрибут <LA>span</LA> принимают участие в создании табличной модели.\n</p>\n\n<p>\n\tIDL-атрибут <LA>span</LA> должен отражать одноименный атрибут содержимого. Он ограничен диапазоном [1, 1000], и его значение по умолчанию равно 1.\n</p>\n\n\n\n\n"
                    }
                },
                "b": {
                    "tagName": "b",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент <LE>b</LE> представляет собой отрезок текста, на который обращено внимание в утилитарных целях, без передачи какой-либо дополнительной важности и без указания альтернативного голоса или настроения, например, ключевые слова в аннотации документа, названия продуктов в обзоре, слова, требующие действий. в интерактивном текстовом программном обеспечении или в статье."
                    ],
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "fullDescription": true,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>b</LE> представляет собой отрезок текста, на который обращено внимание в утилитарных целях, без передачи какой-либо дополнительной важности и без указания альтернативного голоса или настроения, например, ключевые слова в аннотации документа, названия продуктов в обзоре, слова, требующие действий. в интерактивном текстовом программном обеспечении или в статье.\n</p>\n\n<ExampleBox>\n\nВ следующем примере показано использование элемента b для выделения ключевых слов без пометки их как важных:\n\n<Code>\n{`\n<p>The <b>frobonitor</b> and <b>barbinator</b> components are fried.</p>\n`}\n</Code>\n\n</ExampleBox>"
                    }
                },
                "h2": {
                    "tagName": "h2",
                    "categories": [
                        "flow content",
                        "heading content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Эти элементы представляют собой заголовки своих разделов."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭти элементы представляют собой заголовки своих разделов. \n</p>\n\n<p>\n\tСемантика и значение этих элементов определены в разделе, посвященном заголовкам и разделам.\n</p>\n\n<p>\n\tЭтим элементам присваивается ранг, определяемый числом в их названии. Считается, что элемент <LE>h1</LE> имеет наивысший ранг, элемент <LE>h6</LE> имеет самый низкий ранг, а два элемента с одинаковым именем имеют одинаковый ранг.\n</p>\n\n<ExampleBox>\n\nВ соответствии со структурой документов (их заголовков и структур разделов), эти два фрагмента семантически эквивалентны:\n\n<Code>\n{`\n<body>\n\t<h1>Назавем это рисованием</h1>\n\t<h2>Погружение в</h2>\n\t<h2>Простые формы</h2>\n\t<h2>Холст</h2>\n\t<h3>Схема координат</h3>\n\t<h2>Пути</h2>\n</body>\n<body>\n\t<h1>Назовем это рисованием</h1>\n \t<section>\n  \t\t<h1>Погружение в</h1>\n \t</section>\n \t<section>\n \t\t<h1>Простые формы</h1>\n \t</section>\n\t<section>\n  \t\t<h1>Холст</h1>\n  \t\t\t<section>\n  \t\t\t\t<h1>Схема кординат</h1>\n  \t\t\t</section>\n \t</section>\n \t<section>\n \t\t<h1>Пути</h1>\n \t</section>\n</body>\n`}\n</Code>\n\nАвторы могут предпочесть первый стиль из-за его краткости или второй стиль из-за его удобства по сравнению с редактированием; это вопрос предпочтения авторского стиля.\n\nЭти два стиля можно комбинировать для совместимости с устаревшими инструментами. Третий фрагмент снова имеет ту же структуру, что и предыдущие два:\n\n<Code>\n{`\n<body>\n \t<h1>Назовем это рисованием</h1>\n \t<section>\n \t\t<h2>Погружение в</h2>\n \t</section>\n \t<section>\n \t\t<h2>Простые формы</h2>\n \t</section>\n \t\t<section>\n \t\t\t<h2>Холст</h2>\n  \t\t<section>\n  \t\t\t<h3>Схема координат</h3>\n \t \t</section>\n \t</section>\n \t<section>\n  \t\t<h2>Paths</h2>\n \t</section>\n</body>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "h5": {
                    "tagName": "h5",
                    "categories": [
                        "flow content",
                        "heading content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Эти элементы представляют собой заголовки своих разделов."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭти элементы представляют собой заголовки своих разделов. \n</p>\n\n<p>\n\tСемантика и значение этих элементов определены в разделе, посвященном заголовкам и разделам.\n</p>\n\n<p>\n\tЭтим элементам присваивается ранг, определяемый числом в их названии. Считается, что элемент <LE>h1</LE> имеет наивысший ранг, элемент <LE>h6</LE> имеет самый низкий ранг, а два элемента с одинаковым именем имеют одинаковый ранг.\n</p>\n\n<ExampleBox>\n\nВ соответствии со структурой документов (их заголовков и структур разделов), эти два фрагмента семантически эквивалентны:\n\n<Code>\n{`\n<body>\n\t<h1>Назавем это рисованием</h1>\n\t<h2>Погружение в</h2>\n\t<h2>Простые формы</h2>\n\t<h2>Холст</h2>\n\t<h3>Схема координат</h3>\n\t<h2>Пути</h2>\n</body>\n<body>\n\t<h1>Назовем это рисованием</h1>\n \t<section>\n  \t\t<h1>Погружение в</h1>\n \t</section>\n \t<section>\n \t\t<h1>Простые формы</h1>\n \t</section>\n\t<section>\n  \t\t<h1>Холст</h1>\n  \t\t\t<section>\n  \t\t\t\t<h1>Схема кординат</h1>\n  \t\t\t</section>\n \t</section>\n \t<section>\n \t\t<h1>Пути</h1>\n \t</section>\n</body>\n`}\n</Code>\n\nАвторы могут предпочесть первый стиль из-за его краткости или второй стиль из-за его удобства по сравнению с редактированием; это вопрос предпочтения авторского стиля.\n\nЭти два стиля можно комбинировать для совместимости с устаревшими инструментами. Третий фрагмент снова имеет ту же структуру, что и предыдущие два:\n\n<Code>\n{`\n<body>\n \t<h1>Назовем это рисованием</h1>\n \t<section>\n \t\t<h2>Погружение в</h2>\n \t</section>\n \t<section>\n \t\t<h2>Простые формы</h2>\n \t</section>\n \t\t<section>\n \t\t\t<h2>Холст</h2>\n  \t\t<section>\n  \t\t\t<h3>Схема координат</h3>\n \t \t</section>\n \t</section>\n \t<section>\n  \t\t<h2>Paths</h2>\n \t</section>\n</body>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "kbd": {
                    "tagName": "kbd",
                    "categories": [
                        "flow content.",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент kbd представляет пользовательский ввод (обычно ввод с клавиатуры, хотя он также может использоваться для представления другого ввода, например голосовых команд)."
                    ],
                    "fullDescription": true,
                    "content_model": "phrasing content.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>kbd</LE> представляет пользовательский ввод (обычно ввод с клавиатуры, хотя он также может использоваться для представления другого ввода, например голосовых команд).\n</p>\n\n<p>\n\tКогда элемент <LE>kbd</LE> вложен в элемент <LE>samp</LE>, он представляет ввод в том виде, в каком он был отражен системой.\n</p>\n\n<p>\n\tКогда элемент <LE>kbd</LE> содержит элемент <LE>samp</LE>, он представляет ввод, основанный на выводе системы, например, вызов пункта меню.\n</p>\n\n<p>\n\tКогда элемент <LE>kbd</LE> вложен в другой элемент <LE>kbd</LE>, он представляет собой фактический ключ или другую единицу ввода, соответствующую механизму ввода.\n</p>\n\n<ExampleBox>\n\nЗдесь элемент <LE>kbd</LE> используется для обозначения клавиш для нажатия:\n\n<Code>\n{`\n<p>Чтобы заставить Джорджа съесть яблоко, нажмите <kbd><kbd>Shift</kbd>+<kbd>F3</kbd></kbd></p>\n`}\n</Code>\n\nВо втором примере пользователю предлагается выбрать конкретный пункт меню. Внешний элемент <LE>kbd</LE> отмечает блок ввода, причем внутренние элементы <LE>kbd</LE> представляют каждый отдельный шаг ввода, а элементы <LE>samp</LE> внутри них указывают, что шаги вводятся на основе того, что отображается системой, в данном случае метки меню :\n\n<Code>\n{`\n<p>Чтобы заставить Джорджа съесть яблоко, выберете\n    <kbd><kbd><samp>Файл</samp></kbd>|<kbd><samp>Съесть яблоко...</samp></kbd></kbd>\n</p>\n`}\n</Code>\n\nМожно написать и без такой точности:\n\n<Code>\n{`\n<p>Чтобы заствить Джорджа съесть яблоко, выберете <kbd>Файл | Съесть яблоко...</kbd></p>\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n"
                    }
                },
                "link": {
                    "tagName": "link",
                    "categories": [
                        "metadata content."
                    ],
                    "tag_omission": [
                        "Нет закрывающего тега."
                    ],
                    "description": [
                        "Элемент link позволяет авторам связывать свой документ с другими ресурсами."
                    ],
                    "content_model": "Отсутствует.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "href",
                                "description": "Адрес гиперссылки."
                            },
                            {
                                "name": "crossorigin",
                                "description": "Как элемент обрабатывает запросы на перекрестное происхождение."
                            },
                            {
                                "name": "rel",
                                "description": "Связь между документом, содержащим гиперссылку, и целевым ресурсом."
                            },
                            {
                                "name": "media",
                                "description": "Применимые СМИ."
                            },
                            {
                                "name": "integrity",
                                "description": "Метаданные целостности, используемые в проверках целостности субресурсов."
                            },
                            {
                                "name": "hreflang",
                                "description": "Язык связанного ресурса."
                            },
                            {
                                "name": "type",
                                "description": "Тип указанного ресурса."
                            },
                            {
                                "name": "referrerpolicy",
                                "description": "Политика реферера для выборок, инициированных элементом."
                            },
                            {
                                "name": "sizes",
                                "description": "Размеры иконок."
                            },
                            {
                                "name": "imagesrcset",
                                "description": "Изображения для использования в различных ситуациях, например, дисплеи с высоким разрешением, маленькие мониторы и т. д."
                            },
                            {
                                "name": "imagesizes",
                                "description": "Размеры изображений для разных макетов страниц."
                            },
                            {
                                "name": "as",
                                "description": "Потенциальный адресат для запроса предварительной загрузки."
                            },
                            {
                                "name": "color",
                                "description": "Цвет использования при настройке значка сайта."
                            },
                            {
                                "name": "disabled",
                                "description": "Отключение ссылки."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n \tЭлемент <LE>link</LE> позволяет авторам связывать свой документ с другими ресурсами.\n</p>\n\n<p>\n\tАдрес <LE>link</LE> задается атрибутом <LA>href</LA>. Если атрибут <LA>href</LA> присутствует, то его значение должно быть действительным непустым URL-адресом, потенциально окруженным пробелами. Должен присутствовать один или оба атрибута <LA>href</LA>или <LA>imagesrcset</LA>.\n</p>\n\n<p>\n\tЕсли атрибуты <LA>href</LA> и <LA>imagesrcset</LA> отсутствуют, то элемент не определяет <LE>link</LE>.\n</p>\n\n<ExampleBox>\n\nНапример, следующий элемент <LE>link</LE> создает две гиперссылки (на одну и ту же страницу):\n\n<Code>\n{`\n<link rel=\"author license\" href=\"/about\">\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nЭти атрибуты позволяют предварительно загрузить соответствующий ресурс, который позже будет использоваться элементом <LE>img</LE>, который имеет соответствующие значения для его атрибутов <LA>srcset</LA> и <LA>sizes</LA>:\n\n<Code>\n{`\n<link rel=\"preload\" as=\"image\"\n      imagesrcset=\"wolf_400px.jpg 400w, wolf_800px.jpg 800w, wolf_1600px.jpg 1600w\"\n      imagesizes=\"50vw\">\n<!-- ... Чуть позднее или имеет динамический характер ... -->\n<img src=\"wolf.jpg\" alt=\"A rad wolf\"\n     srcset=\"wolf_400px.jpg 400w, wolf_800px.jpg 800w, wolf_1600px.jpg 1600w\"\n     sizes=\"50vw\">\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nАтрибут <LA>imagesrcset</LA> можно комбинировать с атрибутом <LA>media</LA> для предварительной загрузки соответствующего ресурса, выбранного из источников элемента изображения для художественного оформления:\n\n<Code>\n{`\n<link rel=\"preload\" as=\"image\"\n      imagesrcset=\"dog-cropped-1x.jpg, dog-cropped-2x.jpg 2x\"\n      media=\"(max-width: 800px)\">\n<link rel=\"preload\" as=\"image\"\n      imagesrcset=\"dog-wide-1x.jpg, dog-wide-2x.jpg 2x\"\n      media=\"(min-width: 801px)\">\n<!-- ... Чуть позднее или имеет динамический характер ... -->\n<picture>\n  <source srcset=\"dog-cropped-1x.jpg, dog-cropped-2x.jpg 2x\"\n          media=\"(max-width: 800px)\">\n  <img src=\"dog-wide-1x.jpg\" srcset=\"dog-wide-2x.jpg 2x\"\n       alt=\"An awesome dog\">\n</picture>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n\n\n"
                    }
                },
                "label": {
                    "tagName": "label",
                    "categories": [
                        "flow content.",
                        "phrasing content.",
                        "interactive content.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент label представляет заголовок в пользовательском интерфейсе."
                    ],
                    "content_model": "phrasing content.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "for",
                                "description": "Связывает label с элементом управления формой."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n \tЭлемент <LE>label</LE> представляет заголовок в пользовательском интерфейсе. Заголовок может быть связан с конкретным элементом управления формы, известным как элемент <LE>label</LE>, либо с помощью атрибута <LA>for</LA>, либо путем помещения элемента управления формы внутри самого элемента <LE>label</LE>.\n</p>\n\n<ExampleBox>\n\nВ следующем примере показаны три элемента управления формой, каждый с <LE>label</LE>, два из которых имеют небольшой текст, показывающий правильный формат для использования.\n\n<Code>\n{`\n<p><label>Полное имя: <input name=fn> <small>Формат: Фамилия Имя</small></label></p>\n<p><label>Возраст: <input name=age type=number min=0></label></p>\n<p><label>Код: <input name=pc> <small>Формат: AB12 3CD</small></label></p>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ этом (несоответствующем) примере показано, что происходит с <LE>NodeList</LE> и какие <LE>label</LE> возвращаются при изменении атрибута <LA>type</LA> элемента <LA>input</LA>.\n\n<Code>\n{`\n<!doctype html>\n<p><label><input></label></p>\n<script>\n\t \tconst input = document.querySelector('input');\n\t \tconst labels = input.labels;\n\t \tconsole.assert(labels.length === 1);\n\n\t \tinput.type = 'hidden';\n\t \tconsole.assert(labels.length === 0); //  input не контролируется больше label\n\t \tconsole.assert(input.labels === null);\n\n\t \tinput.type = 'checkbox';\n\t \tconsole.assert(labels.length === 1); // input снова под label контролем\n\t \tconsole.assert(input.labels === labels); // то же значение, что было изначально\n</script>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n\n"
                    }
                },
                "td": {
                    "tagName": "td",
                    "categories": [
                        "sectioning root."
                    ],
                    "tag_omission": [
                        "Конечный тег элемента td может не присутствовать, если за элементом td сразу следует элемент td или th, или если в главном элементе больше нет содержимого."
                    ],
                    "description": [
                        "Элемент td представляет собой ячейку данных в таблице."
                    ],
                    "fullDescription": true,
                    "content_model": "flow content.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>td</LE> представляет собой ячейку данных в таблице.\n</p>\n\n<p>\n\tЭлемент <LE>td</LE> и его атрибуты <LA>colspan</LA>, <LA>rowspan</LA> и <LA>headers</LA> принимают участие в создании таблицы.\n</p>\n\n<p>\n\tПользовательские агенты, особенно в невизуальных средах или, где отображение таблицы в виде 2D-сетки нецелесообразно, могут предоставлять пользовательский контекст для ячейки при визуализации содержимого ячейки; например, указание его позиции в модели таблицы или перечисление ячеек заголовка ячейки (как определено алгоритмом назначения ячеек заголовка). Когда перечисляются ячейки заголовка, пользовательские агенты могут использовать значение атрибутов <LA>abbr</LA> в них, если таковые имеются, вместо содержимого самих ячеек заголовка.\n</p>\n\n<ExampleBox>\n\nВ этом примере мы видим фрагмент веб-приложения, состоящий из сетки редактируемых ячеек (по сути, простая электронная таблица). Одна из ячеек настроена для отображения суммы ячеек над ней. Три были отмечены как заголовки, в которых используются элементы <LE>th</LE> вместо элементов <LE>td</LE>. Данный скрипт также показывает итоговую сумму.\n\n<Code>\n{`\n<table>\n <tr>\n  <th><input value=\"Имя\">\n  <th><input value=\"Заплатили ($)\">\n <tr>\n  <td><input value=\"Jeff\">\n  <td><input value=\"14\">\n <tr>\n  <td><input value=\"Britta\">\n  <td><input value=\"9\">\n <tr>\n  <td><input value=\"Abed\">\n  <td><input value=\"25\">\n <tr>\n  <td><input value=\"Shirley\">\n  <td><input value=\"2\">\n <tr>\n  <td><input value=\"Annie\">\n  <td><input value=\"5\">\n <tr>\n  <td><input value=\"Troy\">\n  <td><input value=\"5\">\n <tr>\n  <td><input value=\"Pierce\">\n  <td><input value=\"1000\">\n <tr>\n  <th><input value=\"Всего\">\n  <td><output value=\"1060\">\n</table>\n`}\n</Code>\n\n</ExampleBox>\n\n"
                    }
                },
                "code": {
                    "tagName": "code",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент <LE>code</LE> представляет собой фрагмент компьютерного кода.",
                        "Это может быть:  XML элемент, имя файла, компьютерная программа или любая другая строка, которую компьютер распознает."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>code</LE> представляет собой фрагмент компьютерного кода. Это может быть:  XML элемент, имя файла, компьютерная программа или любая другая строка, которую компьютер распознает.\n</p>\n\n<p>\n\tНе существует формализованного способа для того, чтобы распознать, какой именно компьютерный код использован. Те пользователи, которые желают выделить <LE>code</LE> элемент при помощи используемого языка, могут использовать атрибут <LE>class</LE>, к примеру, добавить к элементу <LE>class</LE> приставку \"language-\". \n</p>\n\n<ExampleBox>\n\nВ следующем примере показано, как данный элемент можно использовать в абзаце для разметки имен элементов и компьютерного кода, включая знаки препинания.\n\n<Code>\n{`\n<p>\n\t<code>code</code> - это элемент, представляющий часть компьютероного кода.\n</p>\n\n<p>\n\tЕсли вы нажмете <code>activate()</code> с помощью\n\t<code>robotSnowman</code> глаза будут светиться у объекта.\n</p>\n\n<p>\n\tВ приведенном ниже примере ключевое слово <code>begin</code> используется для обозначения начала блока. Он сочетается с <code>end</code> ключевым словом, за которым следует знак препинания <code>.</code> (точка) чтобы обозначить конец программы.\n</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ следующем примере показано, как можно разметить блок кода с помощью элементов <LE>pre</LE> и <LE>code</LE>.\n\n<Code>\n{`\n<pre>\n\t<code class=\"language-pascal\">var i: Integer;\n\tbegin\n  \ti := 1;\n\tend.</code>\n</pre>\n`}\n</Code>\n\nВ этом примере <LE>class</LE> применяется для обозначения используемого языка.\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "form": {
                    "tagName": "form",
                    "categories": [
                        "flow content.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент form представляет собой гиперссылку, которой можно управлять с помощью набора связанных с формой элементов, некоторые из которых могут представлять редактируемые значения, которые могут быть отправлены на сервер для обработки."
                    ],
                    "content_model": "flow content.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "accept-charset",
                                "description": "Кодировки символов использующихся при отправке формы."
                            },
                            {
                                "name": "action",
                                "description": "URL для отправки формы."
                            },
                            {
                                "name": "autocomplete",
                                "description": "Настройка по умолчанию функции автозаполнения для элементов управления в форме."
                            },
                            {
                                "name": "enctype",
                                "description": "Тип кодировки списка записей использования при отправке формы."
                            },
                            {
                                "name": "method",
                                "description": "Вариант использования при отправке формы."
                            },
                            {
                                "name": "name",
                                "description": "Имя формы использования в API document.forms."
                            },
                            {
                                "name": "novalidate",
                                "description": "Обойти проверку контроля формы для отправки формы."
                            },
                            {
                                "name": "target",
                                "description": "Контекст просмотра для отправки формы."
                            },
                            {
                                "name": "rel",
                                "description": ""
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n  Элемент <LE>form</LE> представляет собой гиперссылку, которой можно управлять с помощью набора связанных с формой элементов, некоторые из которых могут представлять редактируемые значения, которые могут быть отправлены на сервер для обработки.\n</p>\n\n<ExampleBox>\n\n\tВ этом примере показаны две формы поиска:\n\n<Code>\n{`\n<form action=\"https://www.google.com/search\" method=\"get\">\n \t\t<label>Google: <input type=\"search\" name=\"q\"></label> <input type=\"submit\" value=\"Search...\">\n</form>\n<form action=\"https://www.bing.com/search\" method=\"get\">\n \t\t<label>Bing: <input type=\"search\" name=\"q\"></label> <input type=\"submit\" value=\"Search...\">\n</form>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "meta": {
                    "tagName": "meta",
                    "categories": [
                        "metadata content."
                    ],
                    "tag_omission": [
                        "Нет закрывающего тега."
                    ],
                    "description": [
                        "Элемент meta представляет различные виды метаданных, которые нельзя выразить с помощью элементов title, base, link, style и script."
                    ],
                    "content_model": "Отсутствует.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "name",
                                "description": "Название метадаты."
                            },
                            {
                                "name": "http-equiv",
                                "description": "Pragma директива."
                            },
                            {
                                "name": "content",
                                "description": "Значение элемента."
                            },
                            {
                                "name": "charset",
                                "description": "Объявление кодировки символов."
                            },
                            {
                                "name": "media",
                                "description": "Применимые СМИ."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n \t  Элемент <LE>meta</LE> представляет различные виды метаданных, которые нельзя выразить с помощью элементов <LE>title</LE>, <LE>base</LE>, <LE>link</LE>, <LE>style</LE> и <LE>script</LE>.\n</p>\n\n<p>\n\t Элемент <LE>meta</LE> может представлять метаданные уровня документа с атрибутом <LA>name</LA>, директивы pragma с атрибутом <LA>http-Equiv</LA> и объявление кодировки символов файла, когда документ HTML сериализуется в строковую форму (например, для передачи по сети или для хранения на диске) с атрибутом <LA>charset</LA>.\n</p>\n\n<p>\n   Должен быть указан ровно один из атрибутов <LA>name</LA>, <LA>http-Equiv</LA>, <LA>charset</LA> и <LA>itemprop</LA>.\n</p>\n\n<p>\n   Если указано <LA>name</LA>, <LA>http-Equiv</LA> или <LA>itemprop</LA>, необходимо также указать атрибут содержимого. В противном случае его необходимо убрать.\n</p>\n\n\n\n\n\n\n\n\n\n\n"
                    }
                },
                "output": {
                    "tagName": "output",
                    "categories": [
                        "flow content.",
                        "phrasing content.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент output представляет собой результат вычислений, выполненных приложением, или результат действия пользователя."
                    ],
                    "content_model": "phrasing content.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "for",
                                "description": "Указывает элементы управления, из которых был рассчитан вывод."
                            },
                            {
                                "name": "form",
                                "description": "Связывает элемент с элементом формы."
                            },
                            {
                                "name": "name",
                                "description": "Имя элемента для использования в API form.elements."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n    Элемент <LE>output</LE> представляет собой результат вычислений, выполненных приложением, или результат действия пользователя.\n</p>\n\n<ExampleBox>\n\tПростой калькулятор может использовать выходные данные для отображения расчетных результатов:\n\n<Code>\n{`\n<form onsubmit=\"return false\" oninput=\"o.value = a.valueAsNumber + b.valueAsNumber\">\n\t <input id=a type=number step=any> +\n\t <input id=b type=number step=any> =\n\t <output id=o for=\"a b\"></output>\n</form>\n`}\n</Code>\n\nВ этом примере выходной элемент используется для сообщения результатов вычислений, выполненных удаленным сервером, по мере их поступления:\n\n<Code>\n{`\n<output id=\"result\"></output>\n<script>\n\t var primeSource = new WebSocket('ws://primes.example.net/');\n\t primeSource.onmessage = function (event) {\n\t document.getElementById('result').value = event.data;\n }\n</script>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n\n\n\n\n\n"
                    }
                },
                "col": {
                    "tagName": "col",
                    "categories": [
                        "Отсутствуют"
                    ],
                    "tag_omission": [
                        "Нет закрывающего тега."
                    ],
                    "description": [
                        "Если у элемента col есть родительский элемент, и это элемент - colgroup, и он имеет родительский элемент,  в виде элемента table, то элемент col представляет один или несколько столбцов в группе, представленной colgroup."
                    ],
                    "fullDescription": true,
                    "content_model": "Отсутствует",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n  Если у элемента <LE>col</LE> есть родительский элемент, и это элемент -<LE>colgroup</LE>, и он имеет родительский элемент,  в виде элемента <LE>table</LE>, то элемент <LE>col</LE> представляет один или несколько столбцов в группе, представленной <LE>colgroup</LE>.\n</p>\n\n<p>\n  В элементе может быть указан атрибут содержимого <LA>span</LA>, значение которого должно быть неотрицательным целым числом больше нуля и меньше или равно 1000.\n</p>\n\n<p>\n  Элемент <LE>col</LE> и его атрибут <LA>span</LA> создают таблицы.\n</p>\n\n<p>\n  IDL-атрибут <LA>span</LA> должен отражать одноименный атрибут в содержимом. Он ограничен диапазоном [1, 1000], и его значение по умолчанию равно 1.\n</p>\n\n\n"
                    }
                },
                "pre": {
                    "tagName": "pre",
                    "categories": [
                        "flow content.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент pre представляет собой блок предварительно отформатированного текста, в котором структура представлена типографскими соглашениями, а не элементами."
                    ],
                    "fullDescription": true,
                    "content_model": "phrasing content.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\t  Элемент <LE>pre</LE> представляет собой блок предварительно отформатированного текста, в котором структура представлена типографскими соглашениями, а не элементами.\n</p>\n\n<p>\n   Некоторые примеры случаев, когда можно использовать элемент <LE>pre</LE>:\n   <ul>\n       <li>Включая электронное письмо, в котором абзацы обозначены пустыми строками, списки обозначены строками с маркером и т.д.</li>\n       <li>Включая фрагменты компьютерного кода, структура которого указана в соответствии с соглашениями этого языка.</li>\n       <li>Отображение ASCII.</li>\n   </ul>\n</p>\n\n<p>\n   Для представления блока компьютерного кода элемент <LE>pre</LE> может использоваться с элементом <LE>code</LE>; для представления блока компьютерного вывода элемент <LE>pre</LE> может использоваться с элементом <LE>samp</LE>. Точно так же элемент <LE>kbd</LE> может использоваться в элементе <LE>pre</LE> для обозначения текста, который должен ввести пользователь.\n</p>\n\n<ExampleBox>\n\nВ следующем фрагменте представлен образец компьютерного кода.\n\n<Code>\n{`\n<p>Это <code>панель</code> конструкторская:</p>\n<pre><code>функция панели(element, canClose, closeHandler) {\n  this.element = element;\n  this.canClose = canClose;\n  this.closeHandler = function () { if (closeHandler) closeHandler() };\n}</code></pre>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ следующем фрагменте элементы <LE>samp</LE> и <LE>kbd</LE> смешаны с содержимым элемента <LE>pre</LE>, чтобы показать сеанс Zork I.\n\n<Code>\n{`\n<pre><samp>Вы находитесь в открытом поле к западу от большого белого дома с забитой\nпередней дверью.\nЗдесь есть небольшой почтовый ящик.\n></samp> <kbd>открыть почтовый ящик</kbd>\n<samp>Открыли почтовый ящик:\nЛистовка.\n></samp></pre>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nНиже показано современное стихотворение, в котором используется элемент <LE>pre</LE>, чтобы сохранить свое необычное форматирование, которое составляет неотъемлемую часть самого стихотворения.\n\n<Code>\n{`\n<pre>                макслинг\nэто вместе с          сердцем\n               тяжело\nя признаю все свои потери\n        так           любить\nдруг потерялся в\n        неизвестности\n                                (ночь)\n~cdr 11dec07</pre>\n`}\n</Code>\n\n</ExampleBox>\n\n"
                    }
                },
                "optgroup": {
                    "tagName": "optgroup",
                    "categories": [
                        "Отсутствуют"
                    ],
                    "tag_omission": [
                        "Конечный тег элемента optgroup может не использоваться, если за элементом optgroup сразу же следует другой элемент optgroup или если в родительском элементе больше нет содержимого."
                    ],
                    "description": [
                        "Элемент optgroup представляет собой группу элементов option с общей меткой."
                    ],
                    "fullDescription": true,
                    "content_model": "Ноль или более option и script-supporting элементов.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\t Элемент <LE>optgroup</LE> представляет собой группу элементов <LE>option</LE> с общей меткой.\n</p>\n\n<p>\n   Группа элементов <LE>option</LE> одного элемента состоит из элементов <LE>option</LE>, которые являются потомками элемента <LE>optgroup</LE>.\n</p>\n\n<p>\n   При отображении элементов <LE>option</LE> в элементах  <LE>select</LE>, пользовательские агенты должны показывать элементы <LE>option</LE> таких групп как связанные друг с другом и отдельные от других элементы <LE>option</LE>.\n</p>\n\n<p>\n   Атрибут <LA>disabled</LA> может использоваться для одновременного отключения группы элементов <LE>option</LE>.\n</p>\n\n<p>\n   Атрибут <LA>label</LA> должен быть указан. Его значение показывает имя группы для пользовательского интерфейса. Пользовательские агенты должны использовать значение этого атрибута при маркировке группы элементов <LE>option</LE> в элементе <LE>select</LE>.\n</p>\n\n<p>\n   Атрибуты <LA>disabled</LA> и <LA>label</LA> должны отражать соответствующие атрибуты содержимого с тем же именем.\n</p>\n\n<ExampleBox>\n\nВ следующем фрагменте показано, как можно предложить набор уроков из трех курсов в <LE>select</LE> виджете выбора:\n\n<Code>\n{`\n<form action=\"courseselector.dll\" method=\"get\">\n    <p>Какой кукрс вы бы хотели посмотреть сегодня?\n    <p><label>Курсы:\n    <select name=\"c\">\n    <optgroup label=\"8.01 Physics I: Classical Mechanics\">\n        <option value=\"8.01.1\">Лекция 01: Сила десяти\n        <option value=\"8.01.2\">Лекция 02: Кинематика\n        <option value=\"8.01.3\">Лекция 03: Вектора\n    <optgroup label=\"8.02 Electricity and Magnetism\">\n        <option value=\"8.02.1\">Лекция 01: Ято держит весь мир вместе?\n        <option value=\"8.02.2\">Лекция 02: Электрические поля\n        <option value=\"8.02.3\">Лекция 03: Электричество\n    <optgroup label=\"8.03 Physics III: Vibrations and Waves\">\n       <option value=\"8.03.1\">Лекция 01: Периодичность\n       <option value=\"8.03.2\">Лекция 02: Биты\n       <option value=\"8.03.3\">Лекция 03: Демпинг\n    </select>\n    </label>\n    <p><input type=submit value=\"▶ Play\">\n</form>\n`}\n</Code>\n\n</ExampleBox>\n\n"
                    }
                },
                "ruby": {
                    "tagName": "ruby",
                    "categories": [
                        "flow content.",
                        "phrasing content.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент ruby позволяет пометить один или несколько отрезков фразового содержимого описанием."
                    ],
                    "content_model": "Отсутствует.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n    Элемент <LE>ruby</LE> позволяет пометить один или несколько отрезков фразового содержимого описанием. Описание <LE>ruby</LE> - это короткие отрывки текста, представленные вместе с основным текстом, в основном используемые в восточноазиатской типографике в качестве руководства по произношению или для включения других аннотаций. На японском языке эта форма типографики также известна как фуригана.\n</p>\n\n<ExampleBox>\n\nОдин или несколько символов хирагана или катакана (описание с помощью руби) помещаются с каждым идеографическим символом (базовым текстом). Это используется для чтения символов кандзи.\n\n<Code>\n{`\n<ruby>Это<rt>описание</ruby>\n`}\n</Code>\n\nВ этом примере обратите внимание, как каждое описание соответствует одному базовому символу.\n\n<Code>\n{`\n<ruby>君<rt>くん</ruby><ruby>子<rt>し</ruby>は<ruby>和<rt>わ</ruby>して<ruby>同<rt>どう</ruby>ぜず。\n`}\n</Code>\n\nЭтот пример также можно записать следующим образом, используя один <LE>ruby</LE> элемент с двумя сегментами основного текста и двумя описаниями (по одной для каждого), а не два расположенных рядом <LE>ruby</LE> элементов, каждый с одним базовым текстовым сегментом и описанием (как в разметке выше):\n\n<Code>\n{`\n<ruby>君<rt>くん</rt>子<rt>し</ruby>は<ruby>和<rt>わ</ruby>して<ruby>同<rt>どう</ruby>ぜず。\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n\n"
                    }
                },
                "rp": {
                    "tagName": "rp",
                    "categories": [
                        "Отсутствуют"
                    ],
                    "tag_omission": [
                        "Тег в конце элемента <LE>rt</LE> не обязателен, если за <LE>rt</LE> сразу следует <LE>rt</LE> или <LE>rp</LE>, либо когда в родительском элементе больше нет содержимого."
                    ],
                    "description": [
                        "Элемент <LE>rp</LE> может поставить  круглые скобки вокруг текстового компонента <LE>ruby</LE> в описании, будет отображаться пользовательскими агентами, не поддерживающими описание <LE>ruby</LE>."
                    ],
                    "fullDescription": true,
                    "content_model": "Текст.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>rp</LE> может поставить  круглые скобки вокруг текстового компонента <LE>ruby</LE> в описании, будет отображаться пользовательскими агентами, не поддерживающими описание <LE>ruby</LE>.\n</p>\n\n<p>\n\tЕсли элемент <LE>rp</LE> является дочерним элементом <LE>ruby</LE>, то сам по себе он ничего не представляет. Если родительский элемент <LE>rp</LE> не является элементом <LE>ruby</LE>, то он представляет свои дочерние элементы.\n</p>\n\n<ExampleBox>\n\nВ приведенном примере, где каждый иероглиф 漢字 сопровождается собственным фонетическим произношением, может быть использован элемент <LE>rp</LE>, чтобы заключать устаревшие элементы в скобки:\n\n<Code>\n{`\n...\n\t<ruby>\n\t\t漢<rp>（</rp><rt>かん</rt><rp>）</rp>字<rp>（</rp><rt>じ</rt><rp>）</rp>\n\t</ruby>\n...\n`}\n</Code>\n\nЕсли <LE>ruby</LE> не поддерживается, то предложение будет выглядеть следующим образом:\n\n<Code>\n{`\n... 漢（かん）字（じ）...\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nКогда есть несколько описаний для определенного сегмента, элементы <LE>rp</LE> могут быть помещены между этими описаниями. Ниже пример ранее упомянутого предложения, где содержатся символы с именами на английском и французском языках с элементами <LE>rp</LE>\n\n<Code>\n{`\n<ruby>\n\t♥<rp>: </rp><rt>Heart</rt><rp>, </rp><rt lang=fr>Cœur</rt><rp>.</rp>\n\t☘<rp>: </rp><rt>Shamrock</rt><rp>, </rp><rt lang=fr>Trèfle</rt><rp>.</rp>\n\t✶<rp>: </rp><rt>Star</rt><rp>, </rp><rt lang=fr>Étoile</rt><rp>.</rp>\n</ruby>\n`}\n</Code>\n\nЕсли <LE>ruby</LE> не поддерживается, то предложение будет выглядеть следующим образом:\n\n<Code>\n{`\n♥: Heart, Cœur. ☘: Shamrock, Trèfle. ✶: Star, Étoile.\n`}\n</Code>\n\n</ExampleBox>\n"
                    }
                },
                "strike": {
                    "tagName": "strike",
                    "categories": [
                        "Отсутствуют."
                    ],
                    "tag_omission": [
                        "Закрывающий тег обязателен."
                    ],
                    "description": [
                        "Тег strike отображает текст как перечеркнутый."
                    ],
                    "fullDescription": true,
                    "content_model": "Отсутствует.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\t Тег <LE>strike</LE> отображает текст как перечеркнутый. Этот тег аналогичен тегу <LE>s</LE>, который имеет сокращенную форму записи подобно тегам <LE>b</LE>, <LE>i</LE> и <LE>u</LE>. В любом случае, теги <LE>strike</LE>  и <LE>s</LE> осуждаются спецификацией HTML, взамен них рекомендуется использовать стили.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n  \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n       <head>\n              <title>Тег STRIKE</title>\n              <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n       </head>\n       <body>\n              <p><b>Список должников</b></p>\n              <p><strike>Чебурашка</strike><br>\n                 <strike>Крокодил Гена</strike><br>\n                 Шапокляк</p>\n       </body>\n</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n"
                    }
                },
                "p": {
                    "tagName": "p",
                    "categories": [
                        "flow content.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Закрывающий тег может отсутствовать."
                    ],
                    "description": [
                        "Элемент p представляет собой абзац."
                    ],
                    "content_model": "phrasing content.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n    Элемент <LE>p</LE> представляет собой абзац.\n</p>\n\n<ExampleBox>\n\tСледующие примеры соответствуют фрагментам HTML:\n\n<Code>\n{`\n<p>Котенок осторожно уселся на кусок\nковровой дорожки.</p>\n<fieldset>\n\t <legend>Личная информация</legend>\n\t <p>\n\t\t   <label>Имя: <input name=\"n\"></label>\n\t\t   <label><input name=\"anon\" type=\"checkbox\"> Скрыть от других пользователей</label>\n\t </p>\n\t <p><label>Адрес: <textarea name=\"a\"></textarea></label></p>\n</fieldset>\n<p>Когда-то был пример, <br>\nРазметка сомнительного качества. <br>\nВалидатор не работал, <br>\nИтак, автору было плохо, <br>\nЧтобы из ошибки сделать рифму.</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<p>\n    Элемент <LE>p</LE> не следует использовать, если более уместен какой-либо конкретный элемент.\n</p>\n\n<ExampleBox>\n\nСледующий пример технически верен:\n\n<Code>\n{`\n<section>\n\t <!-- ... -->\n\t <p>Последнее изменение: 2001-04-23</p>\n\t <p>Автор: fred@example.com</p>\n</section>\n`}\n</Code>\n\nОднако было бы лучше разметить как:\n\n<Code>\n{`\n<section>\n\t <!-- ... -->\n\t <footer>Последнее изменение: 2001-04-23</footer>\n\t <address>Автор: fred@example.com</address>\n</section>\n`}\n</Code>\n\nИли\n\n<Code>\n{`\n<section>\n\t <!-- ... -->\n\t <footer>\n\t  <p>Последнее изменение: 2001-04-23</p>\n\t  <address>Автор: fred@example.com</address>\n </footer>\n</section>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n\n"
                    }
                },
                "h4": {
                    "tagName": "h4",
                    "categories": [
                        "flow content",
                        "heading content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Эти элементы представляют собой заголовки своих разделов."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭти элементы представляют собой заголовки своих разделов. \n</p>\n\n<p>\n\tСемантика и значение этих элементов определены в разделе, посвященном заголовкам и разделам.\n</p>\n\n<p>\n\tЭтим элементам присваивается ранг, определяемый числом в их названии. Считается, что элемент <LE>h1</LE> имеет наивысший ранг, элемент <LE>h6</LE> имеет самый низкий ранг, а два элемента с одинаковым именем имеют одинаковый ранг.\n</p>\n\n<ExampleBox>\n\nВ соответствии со структурой документов (их заголовков и структур разделов), эти два фрагмента семантически эквивалентны:\n\n<Code>\n{`\n<body>\n\t<h1>Назавем это рисованием</h1>\n\t<h2>Погружение в</h2>\n\t<h2>Простые формы</h2>\n\t<h2>Холст</h2>\n\t<h3>Схема координат</h3>\n\t<h2>Пути</h2>\n</body>\n<body>\n\t<h1>Назовем это рисованием</h1>\n \t<section>\n  \t\t<h1>Погружение в</h1>\n \t</section>\n \t<section>\n \t\t<h1>Простые формы</h1>\n \t</section>\n\t<section>\n  \t\t<h1>Холст</h1>\n  \t\t\t<section>\n  \t\t\t\t<h1>Схема кординат</h1>\n  \t\t\t</section>\n \t</section>\n \t<section>\n \t\t<h1>Пути</h1>\n \t</section>\n</body>\n`}\n</Code>\n\nАвторы могут предпочесть первый стиль из-за его краткости или второй стиль из-за его удобства по сравнению с редактированием; это вопрос предпочтения авторского стиля.\n\nЭти два стиля можно комбинировать для совместимости с устаревшими инструментами. Третий фрагмент снова имеет ту же структуру, что и предыдущие два:\n\n<Code>\n{`\n<body>\n \t<h1>Назовем это рисованием</h1>\n \t<section>\n \t\t<h2>Погружение в</h2>\n \t</section>\n \t<section>\n \t\t<h2>Простые формы</h2>\n \t</section>\n \t\t<section>\n \t\t\t<h2>Холст</h2>\n  \t\t<section>\n  \t\t\t<h3>Схема координат</h3>\n \t \t</section>\n \t</section>\n \t<section>\n  \t\t<h2>Paths</h2>\n \t</section>\n</body>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "datalist": {
                    "tagName": "datalist",
                    "categories": [
                        "flow content",
                        "phrasing content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Данный html элемент, в связке с элементами <LE>option</LE> и <LE>input</LE>, позволяет показать выпадающий список при вводе значения в поле формы."
                    ],
                    "content_model": [
                        "Либо фразовый контент, либо 0 и более елементов <LE>option</LE>",
                        "Так же, контентом могут быть скриптовые элементы, такие как <LE>script</LE> и <LE>template</LE>."
                    ],
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "fullDescription": true,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\nЭлемент <LE>datalist</LE> представляет собой набор элементов <LE>option</LE>, которые предопределяют опции для других элементов ввода (<LE>input</LE>). При рендеринге элемент datalist никак не отображается. Так же не отображаются все дочерние элементы.\n</p>\n\n<p>\nСписок, создаваемый элементом <LE>datalist</LE>, связывается с текстовым полем посредством атрибута id. Его значение должно совпадать со значением атрибута list элемента <LE>input</LE>.\n\nСвязка списка опций и элемента ввода осуществляется следующим способом. Элементу ввода (<LE>input</LE>) устанавливается атрибут <LA>list</LA> со значением атрибута <LA>id</LA> элемента <LE>datalist</LE>. Таким образом браузер понимает к кокому элементу ввода привязан тот или иной список опций.\n</p>\n\n<ExampleBox>\nПростой пример связки элемента ввода и списка опций.\n<Code>\n{`\n<input name=country list=\"countries\">\n<datalist id=\"countries>\">\n    <option value=\"Россия\">\n    <option value=\"Китай\">\n</datalist>\n`}\n</Code>\n</ExampleBox>\n\n<ExampleBox>\nЕще один пример:\n<Code>\n{`\n<input name=animal list=animals>\n<datalist id=animals>\n    <option value=\"Cat\">\n    <option value=\"Dog\">\n</datalist>\n`}\n</Code>\n</ExampleBox>\n"
                    }
                },
                "frameset": {
                    "tagName": "frameset",
                    "categories": [
                        "Отсутствуют."
                    ],
                    "tag_omission": [
                        "Закрывающий тег обязателен."
                    ],
                    "description": [
                        "Определяет структуру фреймов на веб-странице."
                    ],
                    "content_model": "Отсутствует.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "border",
                                "description": "Толщина границы между фреймами."
                            },
                            {
                                "name": "bordercolor",
                                "description": "Цвет линии границы."
                            },
                            {
                                "name": "cols",
                                "description": "Устанавливает ширину или пропорции фреймов в виде колонок."
                            },
                            {
                                "name": "frameborder",
                                "description": "Определяет, отображать рамку вокруг фрейма или нет."
                            },
                            {
                                "name": "framespacing",
                                "description": "Аналог атрибута border, задает ширину границы."
                            },
                            {
                                "name": "rows",
                                "description": "Задает размер или пропорции фреймов в виде строк."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n Определяет структуру фреймов на веб-странице. Фреймы разделяют окно браузера на отдельные области, расположенные вплотную друг к другу. В каждую из таких областей загружается самостоятельная веб-страница определяемая с помощью тега <LE>frame</LE>. С помощью фреймов веб-страница делится на два или более документа, которые обычно содержат навигацию по сайту и его контент. Механизм фреймов позволяет открывать документ в одном фрейме, по ссылке, нажатой в совершенно другом фрейме. Тег <LE>frameset</LE> заменяет собой элемент <LE>body</LE> на веб-странице. Допустимо использовать вложенную структуру элементов, это позволяет разбить один фрейм на две и более области.\n</p>\n\n<p>\n\tПри использовании фреймов примите во внимание их следующие особенности:\n\t<ol>\n\t\t<li>Поисковые системы плохо работают с фреймовой структурой, поскольку на страницах, которые содержат контент, обычно нет ссылок на другие документы.</li>\n\t\t<li>Фреймы скрывают адрес страницы на которой находится посетитель и устанавливаемый через тег <LE>title</LE>, и всегда показывают только адрес сайта. По этой причине понравившуюся страницу невозможно поместить в раздел «Избранное» браузера.</li>\n\t\t<li>Пользователь зачастую оказывается на сайте, совершенно не представляя, куда он попал, потому что всего лишь нажал на ссылку, полученную в поисковой системе. Чтобы посетителю сайта было проще разобраться, где он находится, на каждую страницу помещают название сайта, заголовок страницы и навигацию. Фреймы, как правило, нарушают данный принцип, отделяя заголовок сайта от содержания, а навигацию от контента.</li>\n\t\t<li>Большое число фреймов требует для браузера выделения больше памяти, чем обычно.</li>\n\t</ol>\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Frameset//EN\"\n  \"http://www.w3.org/TR/html4/frameset.dtd\">\n<html>\n \t<head>\n  \t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n  \t\t<title>Тег FRAMESET</title>\n \t</head>\n \t<frameset rows=\"80,*\" cols=\"*\">\n   \t\t<frame src=\"top.html\" name=\"topFrame\" scrolling=\"no\" noresize>\n   \t\t<frameset cols=\"80,*\">\n     \t\t<frame src=\"left.html\" name=\"leftFrame\" scrolling=\"no\" noresize>\n     \t\t<frame src=\"main.html\" name=\"mainFrame\">\n   \t\t</frameset>\n \t</frameset>\n</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "menu": {
                    "tagName": "menu",
                    "categories": [
                        "flow content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент menu представляет собой панель инструментов, состоящую из своего содержимого в виде неупорядоченного списка элементов (представленных элементами li), каждый из которых представляет команду, которую пользователь может выполнить или активировать."
                    ],
                    "fullDescription": true,
                    "content_model": "Ноль или более элементов script-supporting и li.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\t Элемент <LE>menu</LE> представляет собой панель инструментов, состоящую из своего содержимого в виде неупорядоченного списка элементов (представленных элементами <LE>li</LE>), каждый из которых представляет команду, которую пользователь может выполнить или активировать.\n</p>\n\n<ExampleBox>\n\nВ этом примере приложение для редактирования текста использует элемент <LE>menu</LE> для предоставления ряда команд редактирования:\n\n<Code>\n{`\n<menu>\n    <li><button onclick=\"copy()\"><img src=\"copy.svg\" alt=\"Copy\"></button></li>\n    <li><button onclick=\"cut()\"><img src=\"cut.svg\" alt=\"Cut\"></button></li>\n    <li><button onclick=\"paste()\"><img src=\"paste.svg\" alt=\"Paste\"></button></li>\n</menu>\n`}\n</Code>\n\nОбратите внимание, что стиль, чтобы это выглядело как обычное меню панели инструментов, зависит от приложения.\n\n</ExampleBox>\n\n"
                    }
                },
                "h1": {
                    "tagName": "h1",
                    "categories": [
                        "flow content",
                        "heading content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Эти элементы представляют собой заголовки своих разделов."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭти элементы представляют собой заголовки своих разделов. \n</p>\n\n<p>\n\tСемантика и значение этих элементов определены в разделе, посвященном заголовкам и разделам.\n</p>\n\n<p>\n\tЭтим элементам присваивается ранг, определяемый числом в их названии. Считается, что элемент <LE>h1</LE> имеет наивысший ранг, элемент <LE>h6</LE> имеет самый низкий ранг, а два элемента с одинаковым именем имеют одинаковый ранг.\n</p>\n\n<ExampleBox>\n\nВ соответствии со структурой документов (их заголовков и структур разделов), эти два фрагмента семантически эквивалентны:\n\n<Code>\n{`\n<body>\n\t<h1>Назавем это рисованием</h1>\n\t<h2>Погружение в</h2>\n\t<h2>Простые формы</h2>\n\t<h2>Холст</h2>\n\t<h3>Схема координат</h3>\n\t<h2>Пути</h2>\n</body>\n<body>\n\t<h1>Назовем это рисованием</h1>\n \t<section>\n  \t\t<h1>Погружение в</h1>\n \t</section>\n \t<section>\n \t\t<h1>Простые формы</h1>\n \t</section>\n\t<section>\n  \t\t<h1>Холст</h1>\n  \t\t\t<section>\n  \t\t\t\t<h1>Схема кординат</h1>\n  \t\t\t</section>\n \t</section>\n \t<section>\n \t\t<h1>Пути</h1>\n \t</section>\n</body>\n`}\n</Code>\n\nАвторы могут предпочесть первый стиль из-за его краткости или второй стиль из-за его удобства по сравнению с редактированием; это вопрос предпочтения авторского стиля.\n\nЭти два стиля можно комбинировать для совместимости с устаревшими инструментами. Третий фрагмент снова имеет ту же структуру, что и предыдущие два:\n\n<Code>\n{`\n<body>\n \t<h1>Назовем это рисованием</h1>\n \t<section>\n \t\t<h2>Погружение в</h2>\n \t</section>\n \t<section>\n \t\t<h2>Простые формы</h2>\n \t</section>\n \t\t<section>\n \t\t\t<h2>Холст</h2>\n  \t\t<section>\n  \t\t\t<h3>Схема координат</h3>\n \t \t</section>\n \t</section>\n \t<section>\n  \t\t<h2>Paths</h2>\n \t</section>\n</body>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "summary": {
                    "tagName": "summary",
                    "categories": [
                        "Отсутствуют."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент Summary представляет собой сводку или заголовок для остальной части содержимого главного элемента details, если таковые имеются."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>Summary</LE> представляет собой сводку или заголовок для остальной части содержимого главного элемента <LE>details</LE>, если таковые имеются.\n</p>\n\n<p>\n\tЭлемент <LE>Summary</LE> - это сводка для главного элемента <LE>details</LE>, если следующий алгоритм выполняется:\n\t<ol>\n \t\t<li>Если у <LE>Summary</LE> элемента нет главного элемента, значение не выполняется.</li>\n\t\t<li>Пусть parent будет главным элементом  <LE>Summary</LE>.</li>\n \t\t<li>Если parent не является элементом <LE>details</LE>, значение не выполняется.</li>\n \t\t<li>Если первый дочерний элемент <LE>Summary</LE> главного элемента не является <LE>Summary</LE>, значение не выполняется.</li>\n \t\t<li>Значение выполнено.</li>\n\t</ol>\n</p>\n\n<p>\n\tРаботоспособность элементов <LE>Summary</LE> заключается в выполнении следующих шагов:\n\t<ol>\n \t\t<li>Если <LE>Summary</LE> не является элементом <LE>Summary</LE> для главного элемента, вернитесь назад.</li>\n\t\t<li>Пусть parent будет главным элементом <LE>Summary</LE>.</li>\n \t\t<li>Если атрибут <LA>open</LA> присутствует в главном элементе, удалите его. В противном случае установите для атрибута <LA>open</LA> пустую строку.</li>\n\t</ol>\n</p>\n\n"
                    }
                },
                "nav": {
                    "tagName": "nav",
                    "categories": [
                        "flow content",
                        "sectioning content.",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент nav представляет собой раздел страницы, который ссылается на другие страницы или части страницы: раздел с навигационными ссылками."
                    ],
                    "fullDescription": true,
                    "content_model": "flow content.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\t Элемент <LE>nav</LE> представляет собой раздел страницы, который ссылается на другие страницы или части страницы: раздел с навигационными ссылками.\n\n<ExampleBox>\n\nВ следующем примере есть два элемента <LE>nav</LE>: один для основной навигации по сайту, а другой для дополнительной навигации по самой странице.\n\n<Code>\n{`\n<body>\n \t<h1>Вики центр</h1>\n \t<nav>\n \t\t <ul>\n   \t\t\t<li><a href=\"/\">Домой</a></li>\n   \t\t\t<li><a href=\"/events\">Текущие мероприятия</a></li>\n   \t\t...более...\n  \t\t</ul>\n \t</nav>\n \t<article>\n \t<header>\n   \t\t<h1>Демоны</h1>\n   \t\t<p>Написано А.Н.Азером</p>\n  \t</header>\n  \t<nav>\n  \t\t <ul>\n   \t\t\t <li><a href=\"#public\">Демонстрации</a></li>\n    \t\t<li><a href=\"#destroy\">Разбор</a></li>\n    \t...более...\n   \t\t</ul>\n  \t</nav>\n  \t<div>\n   \t<section id=\"public\">\n   \t\t <h1>Демонстрации</h1>\n   \t\t <p>...более...</p>\n   \t</section>\n   \t<section id=\"destroy\">\n  \t\t <h1>Разбор</h1>\n   \t<p>...более...</p>\n  \t</section>\n  \t ...более...\n  \t</div>\n  \t<footer>\n  \t\t <p><a href=\"?edit\">Дополнения</a> | <a href=\"?delete\">Удалить</a> | <a href=\"?Rename\">Переименовать</a></p>\n  \t</footer>\n \t</article>\n \t<footer>\n  \t\t<p><small>© copyright 1998 Exampland Emperor</small></p>\n \t</footer>\n</body>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ следующем примере на странице есть несколько мест, где присутствуют ссылки, но только одно из этих мест считается разделом навигации.\n\n<Code>\n{`\n<body itemscope itemtype=\"http://schema.org/Blog\">\n <header>\n  \t<h1>Проснись!</h1>\n  \t<p><a href=\"news.html\">Новости</a> -\n    \t<a href=\"blog.html\">Блог</a> -\n    \t<a href=\"forums.html\">Форум</a></p>\n \t<p>Последнее изменение: <span itemprop=\"dateModified\">2009-04-01</span></p>\n \t<nav>\n  \t<h1>Навигация</h1>\n  \t\t <ul>\n   \t\t\t <li><a href=\"articles.html\">Статьи</a></li>\n   \t\t\t <li><a href=\"today.html\">Нужно проснуться сегодня</a></li>\n   \t\t\t <li><a href=\"successes.html\">Кого нужно разбудить</a></li>\n   \t\t</ul>\n  \t</nav>\n </header>\n \t<main>\n  \t<article itemprop=\"blogPosts\" itemscope itemtype=\"http://schema.org/BlogPosting\">\n   \t<header>\n   \t\t <h1 itemprop=\"headline\">Мой день на пляже</h1>\n   \t</header>\n  \t\t <div itemprop=\"articleBody\">\n   \t\t <p>Сегодня я ходил на пляж и было очень весело.</p>\n    \t...больше информации...\n   \t\t </div>\n  \t<footer>\n   \t\t <p>Выложено<time itemprop=\"datePublished\" datetime=\"2009-10-10\">Четверг</time>.</p>\n   \t</footer>\n  \t</article>\n  \t...больше постов в блоге...\n\t </main>\n \t<footer>\n  \t\t<p>Copyright ©\n  \t\t<span itemprop=\"copyrightYear\">2010</span>\n   \t\t<span itemprop=\"copyrightHolder\">The Example Company</span>\n  \t\t</p>\n  \t\t<p><a href=\"about.html\">О нас</a> -\n     \t\t<a href=\"policy.html\">Права</a> -\n    \t\t<a href=\"contact.html\">Связаться с нами</a></p>\n\t</footer>\n</body>\n`}\n</Code>\n\nВы также можете увидеть описание данных в приведенном выше примере, которые используют словарь schema.org для предоставления даты публикации и других метаданных о сообщении в блоге.\n\n</ExampleBox>\n\n<ExampleBox>\n\nЭлемент <LE>nav</LE> не обязательно должен содержать список, он также может содержать другие типы контента. В этом блоке навигации ссылки представлены в прозе:\n\n<Code>\n{`\n<nav>\n \t<h1>Навигация</h1>\n \t<p>Вы на моей домашней странице. Слева <a href=\"/blog\">мой блог</a>, справа вы можете  увидеть множество <a\n \thref=\"/school\">школьных материалов</a> все школьные материалы представлены тезисно <a href=\"/school/thesis\">тезисы</a>.</p>\n \t<p>очень смешно выглядит табличка<a\n \thref=\"https://games.example.com/\">\"игры\"</a>. более скучно выглядит <a\n \thref=\"https://isp.example.net/\">ISP™</a>.</p>\n \t<p>темновато выглядит<a href=\"/about\">свяжитесь с нами</a>. если вы увидете крысу, срочно закройте страничку</p>\n</nav>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ этом примере в почтовом приложении используется <LE>nav</LE>, позволяющая пользователю переключать папки:\n\n<Code>\n{`\n<p><input type=button value=\"Compose\" onclick=\"compose()\"></p>\n<nav>\n \t<h1>Папки</h1>\n\t<ul>\n \t\t <li> <a href=\"/inbox\" onclick=\"return openFolder(this.href)\">Inbox</a> <span class=count></span>\n  \t\t<li> <a href=\"/sent\" onclick=\"return openFolder(this.href)\">Sent</a>\n  \t\t<li> <a href=\"/drafts\" onclick=\"return openFolder(this.href)\">Drafts</a>\n  \t\t<li> <a href=\"/trash\" onclick=\"return openFolder(this.href)\">Trash</a>\n  \t\t<li> <a href=\"/customers\" onclick=\"return openFolder(this.href)\">Customers</a>\n\t</ul>\n</nav>\n`}\n</Code>\n\n</ExampleBox>\n\n"
                    }
                },
                "h6": {
                    "tagName": "h6",
                    "categories": [
                        "flow content",
                        "heading content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Эти элементы представляют собой заголовки своих разделов."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭти элементы представляют собой заголовки своих разделов. \n</p>\n\n<p>\n\tСемантика и значение этих элементов определены в разделе, посвященном заголовкам и разделам.\n</p>\n\n<p>\n\tЭтим элементам присваивается ранг, определяемый числом в их названии. Считается, что элемент <LE>h1</LE> имеет наивысший ранг, элемент <LE>h6</LE> имеет самый низкий ранг, а два элемента с одинаковым именем имеют одинаковый ранг.\n</p>\n\n<ExampleBox>\n\nВ соответствии со структурой документов (их заголовков и структур разделов), эти два фрагмента семантически эквивалентны:\n\n<Code>\n{`\n<body>\n\t<h1>Назавем это рисованием</h1>\n\t<h2>Погружение в</h2>\n\t<h2>Простые формы</h2>\n\t<h2>Холст</h2>\n\t<h3>Схема координат</h3>\n\t<h2>Пути</h2>\n</body>\n<body>\n\t<h1>Назовем это рисованием</h1>\n \t<section>\n  \t\t<h1>Погружение в</h1>\n \t</section>\n \t<section>\n \t\t<h1>Простые формы</h1>\n \t</section>\n\t<section>\n  \t\t<h1>Холст</h1>\n  \t\t\t<section>\n  \t\t\t\t<h1>Схема кординат</h1>\n  \t\t\t</section>\n \t</section>\n \t<section>\n \t\t<h1>Пути</h1>\n \t</section>\n</body>\n`}\n</Code>\n\nАвторы могут предпочесть первый стиль из-за его краткости или второй стиль из-за его удобства по сравнению с редактированием; это вопрос предпочтения авторского стиля.\n\nЭти два стиля можно комбинировать для совместимости с устаревшими инструментами. Третий фрагмент снова имеет ту же структуру, что и предыдущие два:\n\n<Code>\n{`\n<body>\n \t<h1>Назовем это рисованием</h1>\n \t<section>\n \t\t<h2>Погружение в</h2>\n \t</section>\n \t<section>\n \t\t<h2>Простые формы</h2>\n \t</section>\n \t\t<section>\n \t\t\t<h2>Холст</h2>\n  \t\t<section>\n  \t\t\t<h3>Схема координат</h3>\n \t \t</section>\n \t</section>\n \t<section>\n  \t\t<h2>Paths</h2>\n \t</section>\n</body>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "section": {
                    "tagName": "section",
                    "categories": [
                        "flow content.",
                        "sectioning content.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент section представляет собой общий раздел документа или приложения, раздел в этом контексте представляет собой тематическую группу контента, обычно с заголовком."
                    ],
                    "fullDescription": true,
                    "content_model": "flow content.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\t Элемент <LE>section</LE> представляет собой общий раздел документа или приложения. Раздел в этом контексте представляет собой тематическую группу контента, обычно с заголовком.\n</p>\n\n<ExampleBox>\n\nПримерами разделов могут быть главы, различные страницы с вкладками в диалоговом окне с вкладками или пронумерованные разделы диссертации. Домашняя страница веб-сайта может быть разделена на разделы для введения, новостей и контактной информации.\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ следующем примере мы видим статью (часть большой веб-страницы) о яблоках, содержащую два коротких раздела.\n\n<Code>\n{`\n<article>\n    <hgroup>\n        <h1>Яблоки</h1>\n        <h2>ВКУСНЫЕ ФРУКТЫ!</h2>\n    </hgroup>\n    <p>Яблоки растут на яблоне.</p>\n    <section>\n        <h1>Красные</h1>\n        <p>Часто встречаются в супермаркете.</p>\n    </section>\n    <section>\n         <h1>Зеленые</h1>\n         <p>Хороши для яблочного пирога.</p>\n    </section>\n</article>\n`}\n</Code>\n\nОбратите внимание, как использование <LE>section</LE> означает, что автор может использовать элементы <LE>h1</LE> повсюду, не беспокоясь о том, находится ли конкретный раздел на верхнем уровне, втором уровне, третьем уровне и так далее.\n\n</ExampleBox>\n\n<ExampleBox>\n\nВот выпускная программа с двумя разделами: один для списка выпускников, а другой для описания церемонии. (Разметка в этом примере отличается необычным стилем, который иногда используется для минимизации количества межэлементных пробелов.)\n\n<Code>\n{`\n<!DOCTYPE Html>\n<Html Lang=En\n ><Head\n   ><Title\n     >Церемония награждения выпускников 2022</Title\n   ></Head\n ><Body\n   ><H1\n     >Награждение</H1\n   ><Section\n     ><H1\n       >Церемония</H1\n     ><P\n       >Открытие</P\n     ><P\n       >Речь 1</P\n     ><P\n       >Речь 2</P\n     ><P\n       >Презентация</P\n     ><P\n       >Закрытие</P\n   ></Section\n   ><Section\n     ><H1\n       >Награждены</H1\n     ><Ul\n       ><Li\n         >Molly Carpenter</Li\n       ><Li\n         >Anastasia Luccio</Li\n       ><Li\n         >Ebenezar McCoy</Li\n       ><Li\n         >Karrin Murphy</Li\n       ><Li\n         >Thomas Raith</Li\n       ><Li\n         >Susan Rodriguez</Li\n     ></Ul\n   ></Section\n ></Body\n></Html>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ этом примере автор книги разметил некоторые разделы как главы, а некоторые как приложения, и использует CSS, чтобы по-разному стилизовать заголовки в этих двух классах разделов.\n\n<Code>\n{`\n<style>\n    section { border: double medium; margin: 2em; }\n    section.chapter h1 { font: 2em Roboto, Helvetica Neue, sans-serif; }\n    section.appendix h1 { font: small-caps 2em Roboto, Helvetica Neue, sans-serif; }\n</style>\n<header>\n    <hgroup>\n        <h1>Моя книга</h1>\n        <h2>Образец с небольшим содержанием</h2>\n    </hgroup>\n    <p><small>Опубликовано Dummy Publicorp Ltd.</small></p>\n</header>\n<section class=\"chapter\">\n    <h1>Моя первая глава</h1>\n    <p>это моя первая глава.</p>\n    <p>Но тут два параграфа.</p>\n</section>\n<section class=\"chapter\">\n    <h1>Она включает вторую главу.</h1>\n    <p>А,б,в</p>\n</section>\n<section class=\"chapter\">\n    <h1>В главе три будущий пример</h1>\n    <p>Похоже на битву.</p>\n    <p>Это может разрушить историю.</p>\n</section>\n<section class=\"appendix\">\n    <h1>Дополнительная информация А</h1>\n    <p>Показано.</p>\n</section>\n<section class=\"appendix\">\n    <h1>Дополнительная информация Б</h1>\n    <p>Ты <em>можешь</em> делать стили.</p>\n</section>\n`}\n</Code>\n\n</ExampleBox>\n\n"
                    }
                },
                "li": {
                    "tagName": "li",
                    "categories": [
                        "Отсутствуют."
                    ],
                    "tag_omission": [
                        "Конечный тег элемента li может быть опущен, если за элементом li сразу следует другой элемент li или если в родительском элементе больше нет содержимого."
                    ],
                    "description": [
                        "Элемент li представляет собой элемент списка.",
                        "Если его родительский элемент является элементом ol, ul или menu, то этот элемент является элементом списка родительских элементов.",
                        "В противном случае элемент списка не имеет определенной связи со списком или с любым другим элементом li."
                    ],
                    "fullDescription": true,
                    "content_model": "flow content",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>li</LE> представляет собой элемент списка. Если его родительский элемент является элементом <LE>ol</LE>, <LE>ul</LE> или <LE>menu</LE>, то этот элемент является элементом списка родительских элементов. В противном случае элемент списка не имеет определенной связи со списком или с любым другим элементом <LE>li</LE>.\"\n</p>\n\n<p>\n\tАтрибут <LA>value</LA>, если он присутствует, должен быть действительным целым числом. Он используется для определения порядкового номера элемента списка, когда главным элементом списка <LE>li</LE> является <LE>ol</LE>.\n</p>\n\n<p>\n\tЛюбой элемент, значение которого равно 'list-item', имеет главный элемент в списке, который определяется следующим образом:\n\t<ol>\n \t\t<li>Если элемент не отображается, вернуть к исходному состоянию или элемент не имеет главного элемента в списке.</li>\n \t\t<li>Предшествующий элемент может быть родительским элементом.</li>\n \t\t<li>Если элемент имеет предка <LE>ol</LE>, <LE>ul</LE> или <LE>menu</LE>, установите предком ближайший элемент.</li>\n \t\t<li>Возвращает ближайший предок-элемент, который создает блок CSS.</li>\n\t</ol>\n</p>\n\n<p>\n\tЧтобы определить порядковое значение каждого элемента, принадлежащего главному элементу списка, выполните следующие действия:\n\t<ol>\n \t\t<li>Пусть  i будет 1</li>\n \t\t<li>Если главный элемент - это элемент <LE>ol</LE>, пусть нумерация будет начальным значением главного элемента. В противном случае пусть нумерация будет равна 1.</li>\n \t\t<li>Цикл: если i больше, чем количество элементов списка, которые присущи главному элементу, то делаем возврат; всем элементам списка, принадлежащим главному элементу, были присвоены порядковые значения.</li>\n \t\t<li>Пусть item от i принадлежит главному элементу в списке и выстраивается в определенном порядке.</li>\n \t\t<li>Если item - это элемент <LE>li</LE> с атрибутом <LA>value</LA>, тогда:.</li>\n \t\t\t<ul>\n \t\t\t\t<li>Пусть parsed будет результатом синтаксического анализа значения атрибута как целого числа.</li>\n \t\t\t\t<li>Если parsed не является ошибкой, установите нумерацию на parsed.</li>\t\n\t\t\t</ul>\n \t\t<li>Порядковый номер item  - нумерация.</li>\n \t\t<li>Если главный элемент является элементом <LE>ol</LE>, а главный элемент имеет <LA>reversed</LA> атрибут, уменьшите нумерацию на 1; в противном случае увеличить нумерацию на 1.</li>\n \t\t<li>Увеличить i на 1.</li>\n \t\t<li>Перейти к шагу с надписью «loop».</li>\n\t</ol>\n</p>\n\n<p>\n\tАтрибут IDL <LA>value</LA> должен отражать <LA>value</LA> атрибут содержимого.\n</p>\n\n<ExampleBox>\n\nАтрибут IDL <LA>value</LA> элемента не соответствует напрямую его порядковому значению; он просто отражает атрибут содержимого. Например, этот список:\n\n<Code>\n{`\n<ol>\n \t<li>Предмет 1\n \t<li value=\"3\">Предмет 3\n \t<li>Предмет 4\n</ol>\n`}\n</Code>\n\nПорядковые значения - 1, 3 и 4 используются, когда атрибуты IDL <LA>value</LA> - 0, 3, 0 при запросе.\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ следующем примере перечислены десять лучших фильмов (в обратном порядке). Обратите внимание на то, как в списке использован заголовок с помощью элемента <LE>figure</LE> и его элемента <LE>figcaption</LE>.\n\n<Code>\n{`\n<figure>\n \t<figcaption>10 лучших фильмов всех времен</figcaption>\n \t<ol>\n \t\t<li value=\"10\"><cite>Josie and the Pussycats</cite>, 2001</li>\n  \t\t<li value=\"9\"><cite lang=\"sh\">Црна мачка, бели мачор</cite>, 1998</li>\n  \t\t<li value=\"8\"><cite>A Bug's Life</cite>, 1998</li>\n  \t\t<li value=\"7\"><cite>Toy Story</cite>, 1995</li>\n  \t\t<li value=\"6\"><cite>Monsters, Inc</cite>, 2001</li>\n  \t\t<li value=\"5\"><cite>Cars</cite>, 2006</li>\n  \t\t<li value=\"4\"><cite>Toy Story 2</cite>, 1999</li>\n  \t\t<li value=\"3\"><cite>Finding Nemo</cite>, 2003</li>\n  \t\t<li value=\"2\"><cite>The Incredibles</cite>, 2004</li>\n  \t\t<li value=\"1\"><cite>Ratatouille</cite>, 2007</li>\n </ol>\n</figure>\n`}\n</Code>\n\nРазметку можно также представить следующим образом, используя атрибут <LA>reversed</LA> в элементе <LE>ol</LE>:\n\n<Code>\n{`\n<figure>\n\t <figcaption>10 лучших фильмов всех времен</figcaption>\n \t\t<ol reversed>\n  \t\t\t<li><cite>Josie and the Pussycats</cite>, 2001</li>\n  \t\t\t<li><cite lang=\"sh\">Црна мачка, бели мачор</cite>, 1998</li>\n  \t\t\t<li><cite>A Bug's Life</cite>, 1998</li>\n  \t\t\t<li><cite>Toy Story</cite>, 1995</li>\n  \t\t\t<li><cite>Monsters, Inc</cite>, 2001</li>\n  \t\t\t<li><cite>Cars</cite>, 2006</li>\n  \t\t\t<li><cite>Toy Story 2</cite>, 1999</li>\n  \t\t\t<li><cite>Finding Nemo</cite>, 2003</li>\n  \t\t\t<li><cite>The Incredibles</cite>, 2004</li>\n  \t\t\t<li><cite>Ratatouille</cite>, 2007</li>\n \t\t</ol>\n</figure>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "ol": {
                    "tagName": "ol",
                    "categories": [
                        "flow content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент ol представляет собой список элементов, в которых элементы были упорядочены намеренно, так что изменение порядка изменило бы смысл документа."
                    ],
                    "content_model": "Ноль или более элементов поддержки скриптов и li.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "reversed",
                                "description": "Нумеровать список в обратном порядке."
                            },
                            {
                                "name": "start",
                                "description": "Начальное значение списка."
                            },
                            {
                                "name": "type",
                                "description": "Вид маркера списка."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n     Элемент <LE>ol</LE> представляет собой список элементов, в которых элементы были упорядочены намеренно, так что изменение порядка изменило бы смысл документа.\n</p>\n\n<p>\n\tЭлементы списка - это дочерние узлы элемента <LE>li</LE> элемента <LE>ol</LE> в древовидном порядке.\n</p>\n\n<ExampleBox>\n\tСледующая разметка показывает список, в котором порядок имеет значение и поэтому подходит элемент <LE>ol</LE>. Сравните этот список с эквивалентным списком в разделе <LE>ul</LE>, чтобы увидеть пример тех же элементов, использующих элемент <LE>li</LE>.\n\n<Code>\n{`\n<p>Я жил в следующих странах (по порядку):</p>\n<ol>\n\t <li>Польша\n\t <li>Великобритания\n\t <li>США\n\t <li>Норвегия\n</ol>\n`}\n</Code>\n\nОбратите внимание, как изменение порядка в списке меняет смысл документа. В следующем примере изменение относительного порядка первых двух элементов изменило место рождения автора:\n\n<Code>\n{`\n<p>Я жил в следующих странах (по порядку):</p>\n<ol>\n\t <li>США\n\t <li>Польша\n\t <li>США\n\t <li>Норвегия\n</ol>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n\n\n\n\n\n"
                    }
                },
                "object": {
                    "tagName": "object",
                    "categories": [
                        "flow content.",
                        "phrasing content.",
                        "embedded content.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент object может представлять внешний ресурс, который, в зависимости от типа ресурса, будет рассматриваться либо как изображение (как дочерний контекст просмотра), либо как внешний ресурс, который будет обрабатываться плагином."
                    ],
                    "content_model": "Ноль или более элементов param.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "data",
                                "description": "Адрес ресурса."
                            },
                            {
                                "name": "type",
                                "description": "Тип встроенного ресурса."
                            },
                            {
                                "name": "name",
                                "description": "Имя вложенного контекста просмотра."
                            },
                            {
                                "name": "form",
                                "description": "Cвязывает элемент с элементом формы."
                            },
                            {
                                "name": "width",
                                "description": "Горизонтальный размер."
                            },
                            {
                                "name": "height",
                                "description": "Вертикальный размер."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n     Элемент <LE>object</LE> может представлять внешний ресурс, который, в зависимости от типа ресурса, будет рассматриваться либо как изображение (как дочерний контекст просмотра), либо как внешний ресурс, который будет обрабатываться плагином.\n</p>\n\n<p>\n\tЭлемент <LE>object</LE> задерживает загрузку.\n</p>\n\n<p>\n\tАтрибут <LA>form</LA> используется для связывания элемента <LE>object</LE> с его формой.\n</p>\n\n\n<ExampleBox>\n\tВ этом примере одна страница HTML встроена в другую с помощью элемента <LE>object</LE>.\n\n<Code>\n{`\n<figure>\n\t <object data=\"clock.html\"></object>\n\t <figcaption>Мои HTML Часы</figcaption>\n</figure>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ следующем примере показано, как подключаемый модуль можно использовать в HTML (в данном случае подключаемый модуль Flash для отображения видеофайла). Резервный вариант предоставляется для пользователей, у которых не включен Flash, в этом случае используется элемент <LE>video</LE> для показа видео и предоставления ссылки на видео для тех, у кого нет ни Flash, и не оображается видео в браузере.\n\n<Code>\n{`\n<p>Это мое видео:\n\t <object type=\"application/x-shockwave-flash\">\n\t\t  <param name=movie value=\"https://video.example.com/library/watch.swf\">\n\t\t  <param name=allowfullscreen value=true>\n\t\t  <param name=flashvars value=\"https://video.example.com/vids/315981\">\n\t\t  <video controls src=\"https://video.example.com/vids/315981\">\n\t\t      <a href=\"https://video.example.com/vids/315981\">Показать видео</a>.\n\t\t  </video>\n\t </object>\n</p>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n\n\n\n\n"
                    }
                },
                "tfoot": {
                    "tagName": "tfoot",
                    "categories": [
                        "Отсутствуют."
                    ],
                    "tag_omission": [
                        "Конечный тег элемента tfoot может не присутствовать, если в главном элементе больше нет содержимого."
                    ],
                    "description": [
                        "Элемент tfoot представляет собой блок строк, который состоит из сводок столбцов (нижних колонтитулов) для главного элемента таблицы, если у элемента tfoot есть главный элемент, и это таблица."
                    ],
                    "fullDescription": true,
                    "content_model": "Ноль или более элементов tr и script-supporting.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>tfoot</LE> представляет собой блок строк, который состоит из сводок столбцов (нижних колонтитулов) для главного элемента таблицы, если у элемента tfoot есть главный элемент, и это таблица.\n</p>\n\n<p>\n\tЭлемент <LE>tfoot</LE> участвует в создании таблицы.\n</p>\n\n\n\n"
                    }
                },
                "br": {
                    "tagName": "br",
                    "categories": [
                        "flow content.",
                        "phrasing content"
                    ],
                    "tag_omission": [
                        "Нет закрывающего тега."
                    ],
                    "description": [
                        "Элемент br представляет собой разрыв строки."
                    ],
                    "fullDescription": true,
                    "content_model": "Отсутствует",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n  Элемент <LE>br</LE> представляет собой разрыв строки.\n</p>\n\n<p>\n  Элементы <LE>br</LE> должен использоваться только для разрывов строк, которые являются частью текста, например, в стихах или адресах.\n</p>\n\n<ExampleBox>\n\nСледующий пример - правильное использование элемента <LE>br</LE>\n\n<Code>\n{`\n<p>\n    П. Шермен<br>\n    42 Улица<br>\n    Сидней\n</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<p>\n  Элементы <LE>br</LE> нельзя использовать для разделения тематических групп в абзаце.\n</p>\n\n<ExampleBox>\n\nСледующие примеры не соответствуют требованиям, поскольку они злоупотребляют элементом <LE>br</LE>:\n\n<Code>\n{`\n<p>\n    <a ...>34 comments.</a><br>\n    <a ...>Add a comment.</a>\n</p>\n`}\n</Code>\n\n<Code>\n{`\n<p>\n    <label>Name: <input name=\"name\"></label><br>\n    <label>Address: <input name=\"address\"></label>\n</p>\n`}\n</Code>\n\nВот правильный вариант:\n\n<Code>\n{`\n<p>\n    <a ...>34 comments.</a>\n</p>\n<p>\n    <a ...>Add a comment.</a>\n</p>\n`}\n</Code>\n\n<Code>\n{`\n<p>\n    <label>Name: <input name=\"name\"></label>\n</p>\n<p>\n    <label>Address: <input name=\"address\"></label>\n</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<p>\n  Если абзац состоит только из одного элемента <LE>br</LE>, он представляет собой пустую строку (например, как в шаблоне). Такие пустые строки нельзя использовать в презентационных целях.\n</p>\n\n<p>\n  Любое содержимое внутри элементов <LE>br</LE> не должно считаться частью текста вокруг.\n</p>\n"
                    }
                },
                "progress": {
                    "tagName": "progress",
                    "categories": [
                        "flow content.",
                        "phrasing content.",
                        "labelable element.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент progress представляет собой прогресс выполнения задачи.",
                        "Если progress неопределен, это указывает на то, что прогресс был достигнут, но неясно, сколько еще работы осталось сделать до завершения задачи (например, потому что задача ожидает ответа от удаленного хоста), либо прогресс есть число в диапазоне от нуля до максимума,  показывающее долю работы, которая была выполнена на данный момент."
                    ],
                    "fullDescription": true,
                    "content_model": "phrasing content.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\t Элемент <LE>progress</LE> представляет собой прогресс выполнения задачи. Если <LE>progress</LE> неопределен, это указывает на то, что прогресс был достигнут, но неясно, сколько еще работы осталось сделать до завершения задачи (например, потому что задача ожидает ответа от удаленного хоста), либо прогресс есть число в диапазоне от нуля до максимума,  показывающее долю работы, которая была выполнена на данный момент.\n</p>\n\n<p>\n  Есть два атрибута, которые определяют завершение текущей задачи, представленной элементом. Атрибут <LA>value</LA> указывает, какая часть задачи была завершена, а атрибут <LA>max</LA> указывает, сколько работы требуется в целом для задачи. Единицы произвольные и не указаны.\n</p>\n\n<p>\n   Для представления блока компьютерного кода элемент <LE>pre</LE> может использоваться с элементом <LE>code</LE>; для представления блока компьютерного вывода элемент <LE>pre</LE> может использоваться с элементом <LE>samp</LE>. Точно так же элемент <LE>kbd</LE> может использоваться в элементе <LE>pre</LE> для обозначения текста, который должен ввести пользователь.\n</p>\n\n<p>\nАвторам также рекомендуется включать текущее значение и максимальное значение в текст внутри элемента, чтобы <LE>progress</LE> был доступен для пользователей устаревших пользовательских агентов.\n</p>\n\n<ExampleBox>\n\nВот фрагмент веб-приложения, который показывает ход выполнения некоторой автоматизированной задачи:\n\n<Code>\n{`\n<section>\n    <h2>Задание</h2>\n    <p>Прогресс: <progress id=\"p\" max=100><span>0</span>%</progress></p>\n    <script>\n        var progressBar = document.getElementById('p');\n        function updateProgress(newValue) {\n    progressBar.value = newValue;\n    progressBar.getElementsByTagName('span')[0].textContent = newValue;\n  }\n    </script>\n</section>\n`}\n</Code>\n\n(Метод updateProgress () в этом примере будет вызываться другим кодом на странице для обновления фактического индикатора выполнения по мере выполнения задачи.)\n\n</ExampleBox>\n\n<p>\nАтрибуты <LA>value</LA> и <LA>max</LA>, если они есть, должны иметь значения, которые являются допустимыми числами с плавающей запятой. Атрибут <LA>value</LA>, если он присутствует, должен иметь значение, равное или большее нуля, и меньшее или равное значению атрибута <LA>max</LA>, если он присутствует, или 1.0, в противном случае. Атрибут <LA>max</LA>, если он присутствует, должен иметь значение больше нуля.\n</p>\n\n<p>\nТребования к пользовательскому агенту: если атрибут <LA>value</LA> опущен, индикатор выполнения является неопределенным индикатором выполнения. В противном случае это определенный индикатор выполнения.\n</p>\n\n<p>\nЕсли индикатор выполнения является определенным индикатором выполнения, а элемент имеет атрибут <LA>max</LA>, пользовательский агент должен проанализировать значение атрибута <LA>max</LA> в соответствии с правилами анализа числовых значений с плавающей запятой. Если это не приводит к ошибке, и если проанализированное значение больше нуля, то максимальное значение индикатора выполнения является этим значением. В противном случае, если у элемента нет атрибута <LA>max</LA>, или если он есть, но его анализ привел к ошибке, или если проанализированное значение было меньше или равно нулю, то максимальное значение индикатора выполнения равно 1.0.\n</p>\n\n<p>\nЕсли индикатор выполнения представляет собой определенный индикатор выполнения, пользовательские агенты должны анализировать значение атрибута <LA>value</LA> в соответствии с правилами анализа числовых значений с плавающей запятой. Если это не приводит к ошибке и проанализированное значение больше нуля, тогда значение индикатора выполнения будет этим проанализированным значением. В противном случае, если анализ значения атрибута <LA>value</LA> привел к ошибке или к числу, меньшему или равному нулю, тогда значение индикатора выполнения будет равно нулю.\n</p>\n\n<p>\nЕсли индикатор выполнения является определенным индикатором выполнения, то текущее значение является максимальным значением.\n</p>\n\n<p>\nТребования UA для отображения индикатора выполнения: представляя элемент прогресса пользователю, UA должен указывать, является ли он определенным или неопределенным индикатором выполнения, и в первом случае должен указывать относительное положение текущего значения относительно максимума. \n</p>\n\n<p>\nЕсли индикатор выполнения является неопределенным индикатором выполнения, то атрибут IDL <LA>position</LA> должен возвращать -1. В противном случае он должен вернуть результат деления текущего значения на максимальное значение.\n</p>\n\n<p>\nЕсли индикатор выполнения является неопределенным индикатором выполнения, тогда атрибут IDL <LA>value</LA> должен возвращать 0. В противном случае он должен возвращать текущее значение. При настройке данное значение должно быть преобразовано в наилучшее представление числа в виде числа с плавающей запятой, а затем атрибут <LA>value</LA> должен быть установлен на эту строку.\n</p>\n\n<p>\nАтрибут <LA>max</LA> IDL должен отражать атрибут содержимого с тем же именем, ограниченный числами больше нуля. Значение <LA>max</LA> по умолчанию - 1.0.\n</p>\n\n<p>\nIDL-атрибут <LA>labels</LA> предоставляет список <LA>label</LA> элемента.\n</p>\n\n"
                    }
                },
                "title": {
                    "tagName": "title",
                    "categories": [
                        "metadata content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент title представляет заголовок или имя документа."
                    ],
                    "content_model": "Текст, не являющийся межэлементным пробелом.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n     Элемент <LE>title</LE> представляет заголовок или имя документа. Авторы должны использовать заголовки, которые идентифицируют их документы, даже если они используются вне контекста, например, в истории пользователя, закладках или в результатах поиска. Заголовок документа часто отличается от его первого заголовка, поскольку первый заголовок не обязательно должен стоять отдельно, если вырвать его из контекста.\n</p>\n\n<p>\n\tВ документе не должно быть более одного элемента <LE>title</LE>.\n</p>\n\n<p>\n\t<LA>text</LA> атрибута должен отображать текстовое содержимое дочернего элемента <LE>title</LE>.\n</p>\n\n<p>\n\t<LA>text</LA> атрибут должен заменить все указанным значением в элементе <LE>title</LE>.\n</p>\n\n<ExampleBox>\n\t\nВот несколько примеров подходящих заголовков в отличие от заголовков верхнего уровня, которые могут использоваться на тех же страницах.\n\n<Code>\n{`\n  <title>Брачные ритуалы пчел</title>\n    ...\n  <h1>Вступление</h1>\n  <p>Это руководство очень успешно\n  <cite>Введение в книгу,</cite> она об...\n`}\n</Code>\n\nСледующая страница может быть частью того же сайта. Обратите внимание, как заголовок однозначно описывает предмет, в то время как первый заголовок предполагает, что читатель знает, что такое контекст, и поэтому не будет задаваться вопросом, являются ли танцы сальсой или вальсом:\n\n<Code>\n{`\n  <title>Как проводятся танцы</title>\n    ...\n  <h1>Танцы</h1>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n\n\n\n\n\n"
                    }
                },
                "ul": {
                    "tagName": "ul",
                    "categories": [
                        "flow content.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент ul представляет собой список элементов, в котором порядок элементов не важен, то есть изменение порядка не приведет к существенному изменению значения документа."
                    ],
                    "fullDescription": true,
                    "content_model": "Ноль или более элементов script-supporting и li.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>ul</LE> представляет собой список элементов, в котором порядок элементов не важен, то есть изменение порядка не приведет к существенному изменению значения документа.\n</p>\n\n<p>\n\tЭлементы списка <LE>li</LE> являются дочерними элемента <LE>ul</LE>.\n</p>\n\n<ExampleBox>\n\nВ следующем примере показан список, в котором порядок не имеет значения и поэтому подходит элемент <LE>ul</LE>. Сравните этот список с эквивалентным списком в разделе <LE>ol</LE>, чтобы увидеть пример тех же элементов, использующих элемент <LE>ol</LE>.\n\n<Code>\n{`\n  <p>Я жил в этих странах:</p>\n\t\t<ul>\n \t\t\t<li>Норвегия\n \t\t\t<li>Польша\n \t\t\t<li>Великобритания\n \t\t\t<li>США\n\t\t</ul>\n`}\n</Code>\n\nОбратите внимание, что изменение порядка в списке не меняет смысла документа. В фрагменте ниже они приведены в порядке очередности проживания, без какого-либо изменения смысла документа:\n\n<Code>\n{`\n  <p>Я жил в этих странах:</p>\n\t\t<ul>\n \t\t\t<li>Польша\n \t\t\t<li>Норвегия\n\t\t\t<li>Великобритания\n \t\t\t<li>США\n\t\t</ul>\n`}\n</Code>\n\n</ExampleBox>\n\n"
                    }
                },
                "strong": {
                    "tagName": "strong",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент <LE>strong</LE> очень важен для содержимого."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\nЭлемент <LE>strong</LE> очень важен для содержимого. \n</p>\n\n<p>\nВажно: элемент <LE>strong</LE> используют для заголовков, подзаголовков, абзацев, тем самым выделяя самое важное в содержимом. (Он отличается от элемента <LE>hgroup</LE>, который используется для выделения подзаголовков).\n</p>\n\n<ExampleBox>\n\nНапример, первое слово в абзаце может быть выделено при помощи <LE>strong</LE>, чтобы акцентировать внимание на фоне остальных слов в тексте. \n\n</ExampleBox>\n\n<p>\nВажно: <LE>strong</LE> можно использовать для обозначения предупреждения или предостережения.\n</p>\n\n<p>\nНужно: <LE>strong</LE> элемент следует использовать тогда, когда автор текста желает обратить внимание на что-то в первую очередь.\n</p>\n\n<p>\nУровень значимости определенной части контернта во всем тексте определяется наличием предшествующих ранее <LE>strong</LE> элментов в содержимом. Каждый отдельный <LE>strong</LE> элемент увеличивает важность содержимого внутри него.\n</p>\n\n<p>\nПовышеие значимости отдельной части текста при помощи <LE>strong</LE> элемента не меняет смысл самого предложения.  \n</p>\n\n<ExampleBox>\n\nВ примере слово \"chapter\" (глава) явялется частью заголовка, а вкатическое название самой главы выделено <LE>strong</LE>\n\n<Code>\n{`\n<h1>\n\tChapter 1: <strong>The Praxis</strong>\n</h1>\n`}\n</Code>\n\nВ следующем примере имя диаграммы в подписи выделено жирным шрифтом, чтобы отличить его от стандартного тексат (до) и подписи (после).\n\n<Code>\n{`\n<figcaption>\n\tFigure 1. <strong>Ant colony dynamics</strong>. The ants in this colony are\naffected by the heat source (upper left) and the food source (lower right).\n</figcaption>\n`}\n</Code>\n\nИзначально заголовок в данном примере звучит как: \"Flowers, Bees, and Honey\", но автор решил добавить небольшое дополнение. \nТак <LE>strong</LE> элемент используется для того, чтобы отделить одну часть заголовка от другой. \n\n<Code>\n{`\n<h1>\n\t<strong>Flowers, Bees, and Honey</strong> and other things I don't understand\n</h1>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nНиже представлен пример предупреждающего сообщения в игре, где различные части выделены в зависимости от того, насколько они важны.\n\n<Code>\n{`\n<p>\n<strong>Warning.</strong> This dungeon is dangerous.\n<strong>Avoid the ducks.</strong> Take any gold you find.\n<strong><strong>Do not take any of the diamonds</strong>,\nthey are explosive and <strong>will destroy anything within\nten meters.</strong></strong> You have been warned.\n</p>\n`}\n</Code>\n \n</ExampleBox>\n\n<ExampleBox>\n\nВ этом примере <LE>strong</LE> используется для обозначения части текста, которую пользователь должен прочитать в первую очередь.\n\n<Code>\n{`\n<p>\nWelcome to Remy, the reminder system.\n</p>\n<p>\nYour tasks for today:\n</p>\n<ul>\n <li>\n \t<p>\n \t\t<strong>Turn off the oven.</strong>\n \t</p>\n </li>\n <li>\n \t<p>\n \tPut out the trash.\n </p>\n</li>\n <li>\n \t<p>\n \tDo the laundry.\n </p>\n</li>\n</ul>\n`}\n</Code>\n\n</ExampleBox>\n"
                    }
                },
                "tr": {
                    "tagName": "tr",
                    "categories": [
                        "Отсутствует."
                    ],
                    "tag_omission": [
                        "Закрывающий тег может отсутствовать."
                    ],
                    "description": [
                        "Элемент tr представляет собой строку ячеек в таблице."
                    ],
                    "content_model": "Ноль или более элементов, поддерживающих td, th и скрипт.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n    Элемент <LE>tr</LE> представляет собой строку ячеек в таблице.\n</p>\n\n<p>\n\t  Элемент <LE>tr</LE> участвует в создани табличной модели.\n</p>\n\n\n\n\n\n\n\n\n\n\n\n"
                    }
                },
                "keygen": {
                    "tagName": "keygen",
                    "categories": [
                        "Отсутствует."
                    ],
                    "tag_omission": [
                        "Нет закрывающего тега."
                    ],
                    "description": [
                        "Используется для генерации пары ключей — закрытого и открытого."
                    ],
                    "content_model": "Отсутствует.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "autofocus",
                                "description": "Передает фокус элементу при загрузке страницы."
                            },
                            {
                                "name": "challenge",
                                "description": "Определяет, должно ли значение изменяться при отправке формы."
                            },
                            {
                                "name": "disabled",
                                "description": "Отключает этот элемент."
                            },
                            {
                                "name": "form",
                                "description": "Идентификатор формы к которой применяется шифрование."
                            },
                            {
                                "name": "keytype",
                                "description": "Задает алгоритм шифрования ключа. К примеру, значение rsa использует криптографический алгоритм RSA."
                            },
                            {
                                "name": "name",
                                "description": "Имя элемента."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\t Используется для генерации пары ключей — закрытого и открытого. Когда форма отправляется на сервер, закрытый ключ сохраняется на локальном компьютере, а открытый ключ передается вместе с формой. Сами ключи необходимы для шифрования и расшифровки данных, создания и проверки цифровой подписи.\n</p>\n\n\n\n\n\n\n\n\n\n"
                    }
                },
                "s": {
                    "tagName": "s",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент <LE>s</LE> показывает неточную или неактуальную информацию."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>s</LE> показывает неточную или неактуальную информацию.\n</p>\n\n<ExampleBox>\n\nВ примере показано, что розничная цена продукта более не актуальна, теперь он продается по другой цене.\n\n<Code>\n{`\n<p>\n\tПокупайте наш холодный чай и лемонад!\n</p>\n<p>\n\t<s>Цена: $3.99 за бутылку</s>\n</p>\n<p>\n\t<strong>\n\t\t\tСейчас можно купить всего за $2.99!\n\t</strong>\n</p>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "main": {
                    "tagName": "main",
                    "categories": [
                        "flow content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "main элемент представляет собой главное содержимое документа."
                    ],
                    "fullDescription": true,
                    "content_model": "flow content.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\t<LE>main</LE> элемент представляет собой главное содержимое документа.\n</p>\n\n<p>\n\tВ документе не должно быть более одного <LE>main</LE> элемента, для которого не указан <LA>hidden</LA> атрибут.\n</p>\n\n<p>\n\tИерархически правильный <LE>main</LE> элемент - это тот, чьи элементы-предки ограничены <LE>html</LE>, <LE>body</LE>, <LE>div</LE>, <LE>form</LE>. Каждый <LE>main</LE> элемент должен быть иерархически правильным <LE>main</LE> элементом.\n</p>\n\n<ExampleBox>\n\nВ этом примере автор использовал прием, в которой каждый компонент страницы отображается в поле. Чтобы отобразить основное содержимое страницы (в отличие от header, footer, navigation bar, и sidebar), используется <LE>main</LE> элемент.\n\n<Code>\n{`\n<!DOCTYPE html>\n\t<html lang=\"en\">\n\t<title>RPG Система 17</title>\n\t<style>\n \t\theader, nav, aside, main, footer {\n  \t\tmargin: 0.5em; border: thin solid; padding: 0.5em;\n   \t\tbackground: #EFF; color: black; box-shadow: 0 0 0.25em #033;\n \t\t}\n\t\th1, h2, p { margin: 0; }\n \t\tnav, main { float: left; }\n \t\taside { float: right; }\n \t\tfooter { clear: both; }\n\t</style>\n\t<header>\n \t\t<h1>Система 18</h1>\n\t</header>\n\t<nav>\n \t\t<a href=\"../16/\">← Система 17</a>\n \t\t<a href=\"../18/\">RPXIX →</a>\n\t</nav>\n\t<aside>\n \t\t<p>В этой системе нет HP mechanic.\n\t</aside>\n\t<main>\n \t\t<h2>Создание персонажа</h2>\n \t\t<p>Атрибуты (магия, сила, ловкость) покупаются по цене одного очка за уровень.</p>\n \t\t<h2>Продвижение</h2>\n \t\t<p>При каждой встрече бросайте кубики, чтобы определить все свои навыки. Если вы выбросите больше, чем противник, вы выиграете.</p>\n\t</main>\n\t<footer>\n\t\t <p>Copyright © 2013\n\t</footer>\n\t</html>\n`}\n</Code>\n\nВ следующем примере используются несколько <LE>main</LE> элементов, и используется сценарий, чтобы заставить навигацию работать без обращения к серверу и установить <LA>hidden</LA> атрибут:\n\n<Code>\n{`\n<!doctype html>\n\t<html lang=en-CA>\n\t<meta charset=utf-8>\n\t<title> … </title>\n\t<link rel=stylesheet href=spa.css>\n\t<script src=spa.js async></script>\n\t<nav>\n \t\t<a href=/>Домой</a>\n \t\t<a href=/about>О нас</a>\n \t\t<a href=/contact>Контакты</a>\n\t</nav>\n\t<main>\n \t\t<h1>Домой</h1>\n \t…\n\t</main>\n\t<main hidden>\n \t\t<h1>О нас</h1>\n\t …\n\t</main>\n\t<main hidden>\n \t\t<h1>Контакты</h1>\n\t…\n\t</main>\n\t<footer>Сделано с ❤️ by <a href=https://example.com/>Пример 👻</a>.</footer>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "mark": {
                    "tagName": "mark",
                    "categories": [
                        "flow content",
                        "phrasing content.",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент mark представляет собой фрагмент текста в одном документе, отмеченный или выделенный для справочных целей.",
                        "При использовании в цитате или другом блоке текста, на который делается ссылка из книг, он указывает на выделение, которого изначально не было, но которое было добавлено, чтобы привлечь внимание читателя к той части текста, которая могла быть неважной для читателей.",
                        "При использовании в основном тексте документа он указывает на часть документа, которая была выделена."
                    ],
                    "fullDescription": true,
                    "content_model": "phrasing content.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\t Элемент <LE>mark</LE> представляет собой фрагмент текста в одном документе, отмеченный или выделенный для справочных целей. При использовании в цитате или другом блоке текста, на который делается ссылка из книг, он указывает на выделение, которого изначально не было, но которое было добавлено, чтобы привлечь внимание читателя к той части текста, которая могла быть неважной для читателей. При использовании в основном тексте документа он указывает на часть документа, которая была выделена.\n</p>\n\n<ExampleBox>\n\nВ этом примере показано, как можно использовать элемент <LE>mark</LE>, чтобы привлечь внимание к определенной части цитаты:\n\n<Code>\n{`\n<p lang=\"en-US\">В соответствии со следующей цитатой:</p>\n<blockquote lang=\"en-GB\">\n    <p>Осмотрись, и ты поймешь, что все\n    <mark>цветное</mark></p>\n</blockquote>\n<p lang=\"en-US\">Мы видим по <em>написанию</em> цитаты, что\nчеловек явно не американец.</p>\n`}\n</Code>\n\n(Однако, если цель заключалась в том, чтобы пометить элемент с точки зрения орфографии, более подходящим был бы элемент <LE>u</LE>, возможно, с классом.)\n\n</ExampleBox>\n\n<ExampleBox>\n\nДругой пример элемента <LE>mark</LE> - выделение частей документа, соответствующих строке поиска. Если кто-то просматривает документ, и сервер знает, что пользователь искал слово «котенок», то сервер может вернуть документ с одним измененным абзацем следующим образом:\n\n<Code>\n{`\n<p>У меня есть <mark>котята</mark>, они приходят ко мне каждый день. Они очень милые. Я думаю, что им нравится мой сад! Возможно, я смогу приютить <mark>котят</mark>.</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ следующем фрагменте текста абзац относится к определенной части фрагмента кода.\n\n<Code>\n{`\n<p>Выделенная часть ниже - это ошибка:</p>\n<pre><code>var i: Integer;\nbegin\n   i := <mark>1.1</mark>;\nend.</code></pre>\n`}\n</Code>\n\nЭто отличается от выделения синтаксиса, для которого более подходит диапазон. Комбинируя оба, мы получим:\n\n<Code>\n{`\n<p>Выделенная часть ниже - это ошибка:</p>\n<pre><code><span class=keyword>var</span> <span class=ident>i</span>: <span class=type>Integer</span>;\n<span class=keyword>begin</span>\n   <span class=ident>i</span> := <span class=literal><mark>1.1</mark></span>;\n<span class=keyword>end</span>.</code></pre>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nЭто еще один пример, показывающий использование <LE>mark</LE> для выделения части цитируемого текста, которая изначально не выделялась. В этом примере автор явно выделил элементы <LE>mark</LE> в кавычки, чтобы они были выделены курсивом.\n\n<Code>\n{`\n<style>\n    blockquote mark, q mark {\n    font: inherit; font-style: italic;\n    text-decoration: none;\n    background: transparent; color: inherit;\n }\n .bubble em {\n    font: inherit; font-size: larger;\n    text-decoration: underline;\n }\n</style>\n<article>\n    <h1>Она знала</h1>\n    <p>Вы замечали тонкую штучку на понели 4?</p>\n    <blockquote>\n         <p class=\"bubble\">Я - нет, <em>хочется</em> верить. <mark>Конечно, на определенном уровне я даже это понял.</mark> Но я не мог проверить, пока не увижу сам.</p>\n    </blockquote>\n    <p>(Мои слова.) Я подумал, что это здорово. Это так педантично, но\n     все объясняет.</p>\n</article>\n`}\n</Code>\n\nКстати, обратите внимание на различие между элементом <LE>em</LE> в этом примере, который является частью цитируемого исходного текста, и элементом <LE>mark</LE>, который выделяет часть для комментария.\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ следующем примере показана разница между обозначением важности отрезка текста (<LE>strong</LE>) и обозначением релевантности отрезка текста (<LE>mark</LE>). Это отрывок из учебника, в котором выделены части, относящиеся к экзамену. Предупреждения о безопасности, какими бы важными они ни были, очевидно, не имеют отношения к экзамену.\n\n<Code>\n{`\n<h3>Введение в физику</h3>\n\n<p><mark>В нормальных условиях данную вещь можно держать открытой в течение\nмаксимум 39 минут.</mark> Условия, которые могут увеличить\nвремя- мощный источник энергии, связанный с гравитационным колодецем (например,\nчерной дырой).</p>\n\n<p><mark>Импульс сохраняется. Электромагнитное\nизлучение может распространяться в обоих направлениях,\nно материя не может.</mark></p>\n\n<p>Обычно образуется вихрь.\n<strong>Предупреждение: вихрь, вызванный открытием воронки, будет\nуничтожить все на своем пути.</strong> Вихрей можно избежать, если\nс использовать достаточно продвинутую технологию набора номера.</p>\n\n<p><mark>Препятствие помешает им \nсоединениться.</mark></p>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "select": {
                    "tagName": "select",
                    "categories": [
                        "interactive content.",
                        "flow content.",
                        "phrasing content.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент select представляет собой элемент управления для выбора из набора параметров."
                    ],
                    "fullDescription": true,
                    "content_model": "Ноль или более options, optgroup и элементов поддержки скриптов.",
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "autocomplete",
                                "description": "Подсказка для функции автозаполнения форм."
                            },
                            {
                                "name": "disabled",
                                "description": "Oтключение элемента управления формой."
                            },
                            {
                                "name": "form",
                                "description": "Связывает элемент с элементом form."
                            },
                            {
                                "name": "multiple",
                                "description": "Разрешить несколько значений."
                            },
                            {
                                "name": "name",
                                "description": "Имя элемента, используемого для отправки формы в API form.elements"
                            },
                            {
                                "name": "required",
                                "description": "Требуется ли элемент управления для отправки формы."
                            },
                            {
                                "name": "size",
                                "description": "Размер элемента."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\t Элемент <LE>select</LE> представляет собой элемент управления для выбора из набора параметров.\n</p>\n\n<ExampleBox>\n\nВ следующем примере показано, как можно использовать элемент <LE>select</LE>, чтобы предложить пользователю набор параметров, из которых пользователь может выбрать один вариант. Выбран вариант по умолчанию.\n\n<Code>\n{`\n<p>\n     <label for=\"unittype\">Выбрать:</label>\n     <select id=\"unittype\" name=\"unittype\">\n          <option value=\"1\"> 1 </option>\n          <option value=\"2\"> 2 </option>\n          <option value=\"3\" selected> 3 </option>\n          <option value=\"4\"> 4 </option>\n          <option value=\"5\"> 5 </option>\n </select>\n</p>\n`}\n</Code>\n\nЕсли нет параметра по умолчанию, вместо него можно использовать заполнитель:\n\n<Code>\n{`\n<select name=\"unittype\" required>\n       <option value=\"\"> Выбрать: </option>\n       <option value=\"1\"> 1 </option>\n       <option value=\"2\"> 2 </option>\n       <option value=\"3\"> 3 </option>\n       <option value=\"4\"> 4 </option>\n       <option value=\"5\"> 5 </option>\n</select>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nЗдесь пользователю предлагается набор опций, из которых он может выбрать любое количество. По умолчанию выбраны все пять параметров.\n\n<Code>\n{`\n<p>\n     <label for=\"allowedunits\">Выбрать:</label>\n     <select id=\"allowedunits\" name=\"allowedunits\" multiple>\n      <option value=\"1\" selected> 1 </option>\n      <option value=\"2\" selected> 2 </option>\n      <option value=\"3\" selected> 3 </option>\n      <option value=\"4\" selected> 4 </option>\n      <option value=\"5\" selected> 5 </option>\n </select>\n</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nИногда пользователю нужно выбрать один или несколько элементов. В этом примере показан такой интерфейс.\n\n<Code>\n{`\n<label>\n     Выбрать песню:\n     <select multiple required name=\"act2\">\n      <option value=\"s1\">It Sucks to Be Me (Reprise)\n      <option value=\"s2\">There is Life Outside Your Apartment\n      <option value=\"s3\">The More You Ruv Someone\n      <option value=\"s4\">Schadenfreude\n      <option value=\"s5\">I Wish I Could Go Back to College\n      <option value=\"s6\">The Money Song\n      <option value=\"s7\">School for Monsters\n      <option value=\"s8\">The Money Song (Reprise)\n      <option value=\"s9\">There's a Fine, Fine Line (Reprise)\n      <option value=\"s10\">What Do You Do With a B.A. in English? (Reprise)\n      <option value=\"s11\">For Now\n     </select>\n</label>\n`}\n</Code>\n\n</ExampleBox>\n"
                    }
                },
                "thead": {
                    "tagName": "thead",
                    "categories": [
                        "Отсутствуют."
                    ],
                    "tag_omission": [
                        "Конечный тег элемента thead может не присутствовать, если за элементом thead сразу следует элемент tbody или tfoot."
                    ],
                    "description": [
                        "Элемент thead представляет собой блок строк, состоящий из столбцов (заголовков) для главного элемента таблицы, если у элемента thead есть главный элемент, и это таблица."
                    ],
                    "fullDescription": true,
                    "content_model": "Ноль или более tr и элементов script-supporting.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>thead</LE> представляет собой блок строк, состоящий из столбцов (заголовков) для главного элемента таблицы, если у элемента <LE>thead</LE> есть главный элемент, и это таблица.\n</p>\n\n<p>\n\tЭлемент <LE>thead</LE> участвует в создании табличной модели.\n</p>\n\n<ExampleBox>\n\nВ этом примере показан использование элемента <LE>thead</LE>. Обратите внимание на использование элементов <LE>th</LE> и <LE>td</LE> в элементе <LE>thead</LE>: первая строка - это заголовки, а вторая строка - это объяснение того, как заполнять таблицу.\n\n<Code>\n{`\n<table>\n  <caption> Лист регистрации на школьный аукцион </caption>\n  <thead>\n  <tr>\n      <th><label for=e1>Имя</label>\n      <th><label for=e2>Предмет</label>\n      <th><label for=e3>Картинка</label>\n      <th><label for=e4>Цена</label>\n  <tr>\n      <td>Ваше имя здесь\n      <td>Что продаете?\n      <td>Сссылка на картинку\n      <td>Цена\n <tbody>\n    <tr>\n      <td>Ms Danus\n      <td>Пончики\n      <td><img src=\"https://example.com/mydoughnuts.png\" title=\"Doughnuts from Ms Danus\">\n      <td>$45\n  <tr>\n      <td><input id=e1 type=text name=who required form=f>\n      <td><input id=e2 type=text name=what required form=f>\n      <td><input id=e3 type=url name=pic form=f>\n      <td><input id=e4 type=number step=0.01 min=0 value=0 required form=f>\n</table>\n<form id=f action=\"/auction.cgi\">\n<input type=button name=add value=\"Submit\">\n</form>\n`}\n</Code>\n\n</ExampleBox>\n\n"
                    }
                },
                "param": {
                    "tagName": "param",
                    "categories": [
                        "Отсутствуют"
                    ],
                    "tag_omission": [
                        "Нет закрывающего тега."
                    ],
                    "description": [
                        "Элемент param определяет параметры плагинов, вызываемых элементами object. Сам по себе он ничего не представляет."
                    ],
                    "fullDescription": true,
                    "content_model": "Отсутствуют.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\t  Элемент <LE>param</LE> определяет параметры плагинов, вызываемых элементами <LE>object</LE>. Сам по себе он ничего не представляет.\n</p>\n\n<p>\n   Атрибут <LA>name</LA> показывает имя параметра.\n</p>\n\n<p>\n   Атрибут <LA>value</LA> дает значение параметра.\n</p>\n\n<p>\n   Оба атрибута должны присутствовать. Они могут иметь любую <LA>value</LA>.\n</p>\n\n<p>\n   Если присутствуют оба атрибута и если родительский элемент <LE>param</LE> является элементом <LE>object</LE>, то этот элемент определяет параметр с заданной парой имя-значение.\n</p>\n\n<p>\n   Если имя или значение параметра, определенного элементом <LE>param</LE>, который является дочерним по отношению к элементу <LE>object</LE>, представляет экземпляр подключаемого модуля и изменяется, и если этот подключаемый модуль обменивается данными с пользовательским агентом с помощью API, который имеет возможность обновлять подключаемый модуль, имя или значение параметра изменяются таким образом, пользовательский агент должен соответствующим образом использовать эту возможность, чтобы уведомить плагин об изменении.\n</p>\n\n<p>\n   <LA>name</LA> и <LA>value</LA> IDL-атрибутов должны отражать соответствующие атрибуты содержимого с тем же именем.\n</p>\n\n<ExampleBox>\n\nВ следующем примере показано, как элемент <LE>param</LE> можно использовать для передачи параметра плагину, в данном случае плагину O3D.\n\n<Code>\n{`\n<!DOCTYPE HTML>\n<html lang=\"en\">\n     <head>\n         <title>O3D</title>\n     </head>\n     <body>\n        <p>\n        <object type=\"application/vnd.o3d.auto\">\n        <param name=\"o3d_features\" value=\"FloatingPointTextures\">\n        <img src=\"o3d-teapot.png\"\n          title=\"3D-иллюстрация чайника, визуализированная с помощью O3D.\"\n          alt=\"Когда O3D визуализирует чайник, он выглядит как приземистый\n           чайник с блестящей металлической отделкой, на которой\n           отражается происхлдящее со слабой тенью, вызванной\n           освещением.\">\n        <p>Чтобы увидеть чайник, фактически визуализированный O3D, на вашем\n         компьютере, загрузите и установите <a\n        href=\"http://code.google.com/apis/o3d/docs/gettingstarted.html#install\">O3D плагин</a>.</p>\n        </object>\n    <script src=\"o3d-teapot.js\"></script>\n        </p>\n      </body>\n</html>\n`}\n</Code>\n\n</ExampleBox>\n\n"
                    }
                },
                "span": {
                    "tagName": "span",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент span сам по себе ничего не значит, но может быть полезен при использовании вместе с глобальными атрибутами, например: class, lang или dir."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>span</LE> сам по себе ничего не значит, но может быть полезен при использовании вместе с глобальными атрибутами, например. <LA>class</LA>, <LA>lang</LA> или <LA>dir</LA>. Он представляет своих потомков.\n</p>\n\n<ExampleBox>\n\nВ этом примере фрагмент кода размечен с использованием элементов <LE>span</LE> и атрибутов <LA>class</LA>, так что его ключевые слова и идентификаторы могут быть закодированы цветом из CSS:\n\n<Code>\n{`\n<pre><code class=\"lang-c\"><span class=\"keyword\">for</span> (<span class=\"ident\">j</span> = 0; <span class=\"ident\">j</span> &lt; 256; <span class=\"ident\">j</span>++) {\n  <span class=\"ident\">i_t3</span> = (<span class=\"ident\">i_t3</span> & 0x1ffff) | (<span class=\"ident\">j</span> &lt;&lt; 17);\n  <span class=\"ident\">i_t6</span> = (((((((<span class=\"ident\">i_t3</span> >> 3) ^ <span class=\"ident\">i_t3</span>) >> 1) ^ <span class=\"ident\">i_t3</span>) >> 8) ^ <span class=\"ident\">i_t3</span>) >> 5) & 0xff;\n  <span class=\"keyword\">if</span> (<span class=\"ident\">i_t6</span> == <span class=\"ident\">i_t1</span>)\n    <span class=\"keyword\">break</span>;\n}</code></pre>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "time": {
                    "tagName": "time",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент <LE>time</LE> служит для выделения времени или даты в разметке страницы."
                    ],
                    "content_model": [
                        "Если элемент имеет атрибут <LA>datetime</LA> то содержимое элемента является Фразовым (phrasing content). В противном случае контент является обычным тектстом."
                    ],
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "datetime",
                                "description": "Машиночитаемое значение (<a href='https://en.wikipedia.org/wiki/Machine-readable_data' target='_blank'>Machine-readable value</a>)"
                            }
                        ]
                    },
                    "fullDescription": true,
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>time</LE> предназначен для выделения времени или даты в документе.\n</p>\n\n<p>\n\tАтрибут <LA>datetime</LA> этого элемента используется для представлении времени в машиночитаемом формате. На основе значения данного атрибута браузеры могут предлагать добавлять напоминания через календарь пользователя, а поисковые системы могут выдавать более интеллектуальные результаты поиска.\n</p>\n\n<ExampleBox>\n<Code>\n{`\n<p>\n\tМагазин открыт с <time>10:00</time> до <time>21:00</time> каждый день.\n</p>\n\n<p>\n\tКонцерт пройдет в <time datetime=\"2022-02-14 20:00\">День Святого Валентина</time>.\n</p>\n`}\n</Code>\n</ExampleBox>\n\n<p>\n\tЗначение даты, которое читает компьютер, должно быть предствалено значением атрибута <LA>datetime</LA> в специальном формате. Текст внутри элемента (текстовый узел), в данном случае, может быть любым (Например название праздника). Если же атрибут отсутствует, текст внутри элемента должне соответствовать формату даты как у значения атрибута <LA>datetime</LA>. Использование обычной строки уже не является верным.\n</p>\n\n<p>\n\tЭлемент <LA>datetime</LA>, не имеющий атрибута содержимого <LA>datetime</LA>, не должен иметь потомков элемента.\n</p>\n\n<p>\n\tЕсли элемент <LE>time</LE> не имеет атрибута <LA>datetime</LA>, то он не должен иметь потомков, т.е. вложенных html элементов.\n</p>\n\n<p>\n\tЗначение атрибута <LA>datetime</LA> должно соответствовать одному из следующих синтаксисов:\n</p>\n\n<ExampleBox>\nДопустимая строка месяца\n<Code>\n{`\n<time>2021-11</time>\n`}\n</Code>\n</ExampleBox>\n\n<ExampleBox>\nДопустимая строка даты\n<Code>\n{`\n<time>2021-11</time>\n`}\n</Code>\n</ExampleBox>\n\n<ExampleBox>\nДопустимая строка даты без года\n<Code>\n{`\n<time>11-18</time>\n`}\n</Code>\n</ExampleBox>\n\n<ExampleBox>\nДопустимая строка времени\n<Code>\n{`\n<time>12:15</time>\n\n<time>15:54:39</time>\n\n<time>18:30:40.929</time>\n`}\n</Code>\n</ExampleBox>\n\n<ExampleBox>\nСтрока даты и времени по метному времени\n<Code>\n{`\n<time>2011-11-18T14:54</time>\n\n<time>2011-11-18T14:54:39</time>\n\n<time>2011-11-18T14:54:39.929</time>\n\n<time>2011-11-18 14:54</time>\n\n<time>2011-11-18 14:54:39</time>\n\n<time>2011-11-18 14:54:39.929</time>\n\n`}\n</Code>\n</ExampleBox>\n\n<NoteBox>\nВремя с датами, но без смещения часового пояса, полезно для указания событий, которые происходят в одно и то же время в каждом часовом поясе в течение дня. Например, новый год 2021 отмечается в 00:00 01.01.2021 в каждом часовом поясе, а не в один и тот же точный момент во всех часовых поясах. Для событий, которые происходят одновременно во всех часовых поясах, например, видеоконференцсвязи, более полезна глобальная строка даты и времени.\n</NoteBox>\n\n<ExampleBox>\nСмещения часового пояса\n<Code>\n{`\n<time>Z</time>\n\n<time>+0000</time>\n\n<time>+00:00</time>\n\n<time>-0800</time>\n\n<time>-08:00</time>\n`}\n</Code>\n</ExampleBox>\n\n<NoteBox>\nСтоит обратить внимание, что для времени без даты (или времени, относящегося к событиям, которые повторяются в несколько дат) вместо указания часового пояса лучше указать географию места напрямую. Дело в том, что часовые пояса нередко меняютс, а так же сущестует переход на летнее и зимнее время, в связи с тем возникаю ошибки в датах (География места описывается обычным текстом в не элемента <LE>time</LE>). Существует база данных часовых поясов, которая описывает границы часовых поясов и правила, применяемые в каждом таком поясе, известная как база данных часовых поясов (<a href=\"https://www.iana.org/time-zones\" target=\"_blank\">Time Zone Database</a>).\n</NoteBox>\n\nдопустимая глобальная строка даты и времени\n\n<ExampleBox>\nГлобальная строка даты и времени\n<Code>\n{`\n<time>2011-11-18T14:54Z</time>\n\n\n<time>2011-11-18T14:54:39Z</time>\n\n<time>2011-11-18T14:54:39.929Z</time>\n\n<time>2011-11-18T14:54+0000</time>\n\n<time>2011-11-18T14:54:39+0000</time>\n\n<time>2011-11-18T14:54:39.929+0000</time>\n\n<time>2011-11-18T14:54+00:00</time>\n\n<time>2011-11-18T14:54:39+00:00</time>\n\n<time>2011-11-18T14:54:39.929+00:00</time>\n\n<time>2011-11-18T06:54-0800</time>\n\n<time>2011-11-18T06:54:39-0800</time>\n\n<time>2011-11-18T06:54:39.929-0800</time>\n\n<time>2011-11-18T06:54-08:00</time>\n\n<time>2011-11-18T06:54:39-08:00</time>\n\n<time>2011-11-18T06:54:39.929-08:00</time>\n\n<time>2011-11-18 14:54Z</time>\n\n<time>2011-11-18 14:54:39Z</time>\n\n<time>2011-11-18 14:54:39.929Z</time>\n\n<time>2011-11-18 14:54+0000</time>\n\n<time>2011-11-18 14:54:39+0000</time>\n\n<time>2011-11-18 14:54:39.929+0000</time>\n\n<time>2011-11-18 14:54+00:00</time>\n\n<time>2011-11-18 14:54:39+00:00</time>\n\n<time>2011-11-18 14:54:39.929+00:00</time>\n\n<time>2011-11-18 06:54-0800</time>\n\n<time>2011-11-18 06:54:39-0800</time>\n\n<time>2011-11-18 06:54:39.929-0800</time>\n\n<time>2011-11-18 06:54-08:00</time>\n\n<time>2011-11-18 06:54:39-08:00</time>\n\n<time>2011-11-18 06:54:39.929-08:00</time>\n`}\n</Code>\n</ExampleBox>\n\n<NoteBox>\nВремя с датами и смещением часового пояса полезно для указания конкретных событий или повторяющихся виртуальных событий, когда время не привязано к определенному географическому положению. Например, точное время падения астероида, независимо от того, соблюдает ли какая-либо конкретная часть мира переход на летнее время или нет. Для событий, где точное время зависит от смещения местного часового пояса для конкретного географического местоположения, вероятно, более полезна локальная строка даты и времени в сочетании с этим географическим местоположением.\n</NoteBox>\n\n<ExampleBox>\nНеделя\n<Code>\n{`\n<time>2011-W47</time>\n`}\n</Code>\n</ExampleBox>\n\n<p>\n\tТак же время можно указать в числовом формате:\n</p>\n\n<ExampleBox>\nЧетыре или более цифр таблицы символов ASCII, одна из которых не является U+0030 DIGIT ZERO (Т.е. все цифры не могут быть нулями)\n<Code>\n{`\n<time>2011</time>\n\n<time>0001</time>\n`}\n</Code>\n</ExampleBox>\n\n<ExampleBox>\nСтрока продолжительности\n<Code>\n{`\n<time>PT4H18M3S</time>\n\n<time>4h 18m 3s</time>\n`}\n</Code>\n</ExampleBox>\n"
                    }
                },
                "rt": {
                    "tagName": "rt",
                    "categories": [
                        "отсутствуют"
                    ],
                    "tag_omission": [
                        "Тег в конце элемента <LE>rt</LE> не обязателен, если за <LE>rt</LE> сразу следует <LE>rt</LE> или <LE>rp</LE>, либо когда в родительском элементе больше нет содержимого."
                    ],
                    "description": [
                        "Элемент <LE>rt</LE> выделяет текст элемента <LE>ruby</LE> в описании.",
                        "Когда он является дочерним элементом <LE>ruby</LE>, сам по себе он ничего не представляет, но элемент <LE>ruby</LE> использует его для того, чтобы дать представлению пользователю о содержимом."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>rt</LE> выделяет текст элемента <LE>ruby</LE> в описании. Когда он является дочерним элементом <LE>ruby</LE>, сам по себе он ничего не представляет, но элемент <LE>ruby</LE> использует его для того, чтобы дать представлению пользователю о содержимом.\n</p>\n\n<p>\n\tЕсли элемент <LE>rt</LE> не является дочерним элементом <LE>ruby</LE>, то он представляет собой тоже самое, что и его собственные дочерние элементы.\n</p> \n\n\n\n\n\n\n"
                    }
                },
                "style": {
                    "tagName": "style",
                    "categories": [
                        "metadata content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент style позволяет авторам встраивать таблицы стилей CSS в свои документы."
                    ],
                    "content_model": "Текст, соответствующий таблице стилей.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "title",
                                "description": "Заголовок."
                            },
                            {
                                "name": "media",
                                "description": "Применимые СМИ."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n    Элемент <LE>style</LE> позволяет авторам встраивать таблицы стилей CSS в свои документы. Элемент <LE>style</LE> - это один из нескольких входов в модель обработки стиля. Элемент не представляет контент для пользователя.\n</p>\n\n<ExampleBox>\n\nВ документе ударение поставлено в виде ярко-красного текста, а не курсивного текста, а названия работ и латинские слова оставлены курсивом по умолчанию. Он показывает, как использование соответствующих элементов позволяет упростить документ.\n\n<Code>\n{`\n<!DOCTYPE html>\n<html lang=\"en-US\">\n\t <head>\n\t\t  <title>Моя любимая книга</title>\n\t\t  <style>\n\t\t\t\t body { color: black; background: white; }\n\t\t\t\t em { font-style: normal; color: red; }\n\t\t  </style>\n\t </head>\n\t <body>\n\t\t  <p>Моя <em>любимая</em>книга всех <em>времен</em> - это\n\t\t  <cite>Жизнь кота</cite>. Эта книга П. Рамеля, где рассказывается о <i lang=\"la\">Felis catus</i> модном сообществе.</p>\n\t </body>\n</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n\n"
                    }
                },
                "sup": {
                    "tagName": "sup",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент sup представляет собой верхний индекс."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>sup</LE> представляет собой верхний индекс.\n</p>\n\n<p>\n\tЭти элементы должны использоваться только для обозначения типографских условных обозначений с определенными значениями. Например, было бы неуместно использовать элементы <LE>sub</LE> и <LE>sup</LE> в названии системы подготовки документов LaTeX. Как правило, авторы должны использовать эти элементы только в том случае, если их отсутствие может изменить смысл содержания.\n</p>\n\n<p>\n\tВ некоторых языках надстрочные индексы являются частью типографских соглашений для сокращений.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<p> Их имена\n<span lang=\"fr\"><abbr>M<sup>lle</sup></abbr> Gwendoline</span> и\n<span lang=\"fr\"><abbr>M<sup>me</sup></abbr> Denise</span>.</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<p>\nВ математических выражениях часто используются нижние и верхние индексы. Авторам рекомендуется использовать MathML для разметки, но авторы могут выбрать использование <LE>sub</LE> и <LE>sup</LE>, если подробная математическая разметка нежелательна. \n</p>\n\n<ExampleBox>\n\nЗдесь <LE>sub</LE> используется для представления подстрочного индекса, который идентифицирует переменную:\n\n<Code>\n{`\n<var>E</var>=<var>m</var><var>c</var><sup>2</sup>\nf(<var>x</var>, <var>n</var>) = log<sub>4</sub><var>x</var><sup><var>n</var></sup>\n`}\n</Code>\n\n</ExampleBox>"
                    }
                },
                "script": {
                    "tagName": "script",
                    "categories": [
                        "metadata content.",
                        "flow content.",
                        "phrasing content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент script позволяет авторам включать в свои документы блоки данных."
                    ],
                    "fullDescription": true,
                    "content_model": "Отсутствует.",
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "src",
                                "description": "Адрес ресурса."
                            },
                            {
                                "name": "type",
                                "description": "Тип скрипта."
                            },
                            {
                                "name": "async",
                                "description": "Выполнить скрипт, если он доступен, без блокировки при выборке."
                            },
                            {
                                "name": "defer",
                                "description": "Отложить выполнение скрипта."
                            },
                            {
                                "name": "crossorigin",
                                "description": "Как элемент обрабатывает запросы на перекрестное происхождение."
                            },
                            {
                                "name": "integrity",
                                "description": "Метаданные целостности, используемые в проверках целостности субресурсов."
                            },
                            {
                                "name": "referrerpolicy",
                                "description": "Политика реферера для выборок, инициированных элементом."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\t Элемент <LE>script</LE> позволяет авторам включать в свои документы блоки данных. Элемент не представляет контент для пользователя.\n</p>\n\n<ExampleBox>\n\nПример с элементом <LE>script</LE>, используемой при выборке импортированных скриптов, но не других подресурсов:\n\n<Code>\n{`\n<script referrerpolicy=\"origin\">\n    fetch('/api/data');    // не получен с помощью политики <script>\n    import('./utils.mjs'); // выбирается с помощью политики <script> (в данном случае \"origin\")\n</script>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ этом примере используются два элемента <LE>script</LE>. Один включает внешний классический сценарий, а другой включает некоторые данные в виде блока данных.\n\n<Code>\n{`\n<script src=\"game-engine.js\"></script>\n<script type=\"text/x-game-map\">\n........U.........e\no............A....e\n.....A.....AAA....e\n.A..AAA...AAAAA...e\n</script>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВ следующем примере показано, как можно использовать элемент <LE>script</LE> для определения функции, которая затем используется другими частями документа как часть классического сценария. Он также показывает, как элемент <LE>script</LE> может использоваться для вызова сценария во время анализа документа, в данном случае для инициализации вывода формы.\n\n<Code>\n{`\n<script>\n       function calculate(form) {\n         var price = 52000;\n         if (form.elements.brakes.checked)\n           price += 1000;\n         if (form.elements.radio.checked)\n           price += 2500;\n         if (form.elements.turbo.checked)\n           price += 5000;\n         if (form.elements.sticker.checked)\n           price += 250;\n         form.elements.result.value = price;\n }\n</script>\n        <form name=\"pricecalc\" onsubmit=\"return false\" onchange=\"calculate(this)\">\n               <fieldset>\n                        <legend>Цена вашей машины</legend>\n                        <p>Обычная: £52000.</p>\n                        <p>Выбрать дополнительные опции:</p>\n                        <ul>\n                               <li><label><input type=checkbox name=brakes> Керамические тормоза (£1000)</label></li>\n                               <li><label><input type=checkbox name=radio> Радио (£2500)</label></li>\n                               <li><label><input type=checkbox name=turbo> Турбо (£5000)</label></li>\n                               <li><label><input type=checkbox name=sticker> Наклейка (£250)</label></li>\n                        </ul>\n                        <p>Всего: £<output name=result></output></p>\n               </fieldset>\n         <script>\n          calculate(document.forms.pricecalc);\n </script>\n</form>\n`}\n</Code>\n\n</ExampleBox>\n"
                    }
                },
                "noframes": {
                    "tagName": "noframes",
                    "categories": [
                        "Отсутствуют."
                    ],
                    "tag_omission": [
                        "Закрывающий тег обязателен."
                    ],
                    "description": [
                        "Содержимое тега noframes отображается в браузере, когда он не поддерживает фреймы и не умеет их интерпретировать."
                    ],
                    "content_model": "Отсутствует.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": false
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tСодержимое тега <LE>noframes</LE> отображается в браузере, когда он не поддерживает фреймы и не умеет их интерпретировать. Браузеры, которые работают с фреймами, полностью игнорируют содержимое тега <LE>noframes</LE>. Как правило, внутри этого тега располагается текст, информирующий пользователя о том, что его браузер фреймы не поддерживает или с предложением перейти на страницу без фреймов.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Frameset//EN\"\n  \"http://www.w3.org/TR/html4/frameset.dtd\">\n<html>\n\t  <head>\n\t\t    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n\t\t    <title>Тег NOFRAMES</title>\n\t  </head>\n\t  <frameset cols=\"100,*\">\n\t\t    <frame src=\"menu.html\" name=\"leftFrame\">\n\t\t    <frame src=\"content.html\" name=\"mainFrame\">\n\t\t    <noframes>Ваш браузер не поддерживает фреймы.</noframes>\n\t  </frameset>\n</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n"
                    }
                },
                "samp": {
                    "tagName": "samp",
                    "categories": [
                        "flow content",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент <LE>samp</LE> представляет собой знак или подпись авторства, принадлежащий другой программе или компьютерной системе."
                    ],
                    "fullDescription": true,
                    "content_model": "Фразовый контент.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>samp</LE> представляет собой знак или подпись авторства, принадлежащий другой программе или компьютерной системе.\n</p>\n\n<ExampleBox>\n\nВ следующем примере элемент <LE>samp</LE> встроен:\n\n<Code>\n{`\n<p>\n\tКомпьютер напсиал <samp>Слишком много сыра на втором подносе</samp>, но я не знаю, что это значит.\n</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nВо втором примере показан блок выходных данных консольной программы. Вложенные элементы <LE>samp</LE> и <LE>kbd</LE> позволяют стилизовать определенные элементы образца вывода с помощью таблицы стилей. Также есть несколько частей шаблона, которые содержат еще более подробную разметку. Для этого используются элементы <LE>span</LE>.\n\n<Code>\n{`\n<pre>\n\t<samp>\n\t\t<span class=\"prompt\">jdoe@mowmow:~$</span> <kbd>ssh demo.example.com</kbd>\n\t\tLast login: Tue Apr 12 09:10:17 2005 from mowmow.example.com on pts/1\n\t\tLinux demo 2.6.10-grsec+gg3+e+fhs6b+nfs+gr0501+++p3+c4a+gr2b-reslog-v6.189 #1 SMP Tue Feb 1 11:22:36 PST 2005 i686 unknown\n\t\t<span class=\"prompt\">jdoe@demo:~$</span>\n\t\t<span class=\"cursor\">_</span>\n\t</samp>\n</pre>\n`}\n</Code>\n\n</ExampleBox>\n\n<ExampleBox>\n\nТретий пример показывает блок ввода и соответствующий ему вывод. В примере используются элементы как <LE>code</LE>, так и <LE>samp</LE>.\n\n<Code>\n{`\n<pre>\n\t<code class=\"language-javascript\">console.log(2.3 + 2.4)</code>\n\t<samp>4.699999999999999</samp>\n</pre>\n`}\n</Code>\n\n</ExampleBox>\n\n\n"
                    }
                },
                "map": {
                    "tagName": "map",
                    "categories": [
                        "flow content",
                        "phrasing content.",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент map в сочетании с элементом img и любыми дочерними элементами area показывает карту."
                    ],
                    "fullDescription": true,
                    "content_model": "transparent.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>map</LE> в сочетании с элементом <LE>img</LE> и любыми дочерними элементами <LE>area</LE> показывает карту.\n</p>\n\n<p>\n\tАтрибут <LA>name</LA> дает карте имя, чтобы на нее можно было ссылаться. Атрибут должен присутствовать и иметь непустое значение без пробелов ASCII. Значение атрибута <LA>name</LA> не должно быть равно значению атрибута <LA>name</LA> другого элемента <LE>map</LE> в том же коде. Если также указан атрибут <LA>id</LA>, оба атрибута должны иметь одинаковое значение.\n</p>\n\n<p>\n\tАтрибут <LA>areas</LA> должен возвращать HTMLCollection в <LE>map</LE>, фильтр которого соответствует только элементам <LA>areas</LA>.\n</p>\n\n<p>\n\t<LA>name</LA> должен отражать атрибут содержимого с тем же именем.\n</p>\n\n<ExampleBox>\n\nКарты могут быть определены вместе с другим контентом на странице, чтобы упростить восприятие. В этом примере показана страница с картой вверху страницы и соответствующим набором текстовых ссылок внизу.\n\n<Code>\n{`\n<!DOCTYPE HTML>\n<HTML LANG=\"EN\">\n<TITLE>Дети: Игрушки</TITLE>\n<HEADER>\n \t<H1>Игрушки</H1>\n\t<IMG SRC=\"/images/menu.gif\"\n     \t ALT=\"Babies™ navigation menu. Select a department to go to its page.\"\n      \t USEMAP=\"#NAV\">\n</HEADER>\n ...\n<FOOTER>\n \t<MAP NAME=\"NAV\">\n  \t<P>\n   \t\t<A HREF=\"/clothes/\">Вещи</A>\n   \t\t<AREA ALT=\"Clothes\" COORDS=\"0,0,100,50\" HREF=\"/clothes/\"> |\n   \t\t<A HREF=\"/toys/\">Игрушки</A>\n   \t\t<AREA ALT=\"Toys\" COORDS=\"100,0,200,50\" HREF=\"/toys/\"> |\n   \t\t<A HREF=\"/food/\">Еда</A>\n   \t\t<AREA ALT=\"Food\" COORDS=\"200,0,300,50\" HREF=\"/food/\"> |\n   \t\t<A HREF=\"/books/\">Книги</A>\n   \t\t<AREA ALT=\"Books\" COORDS=\"300,0,400,50\" HREF=\"/books/\">\n  \t</P>\n \t</MAP>\n</FOOTER>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "tbody": {
                    "tagName": "tbody",
                    "categories": [
                        "Отсутствуют."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент tbody представляет собой блок строк, состоящий из тела данных для родительского элемента таблицы, если у элемента tbody есть родительский элемент и это таблица."
                    ],
                    "content_model": "Ноль или более элементов tr и скриптов.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n    Элемент <LE>tbody</LE> представляет собой блок строк, состоящий из тела данных для родительского элемента таблицы, если у элемента tbody есть родительский элемент и это таблица.\n</p>\n\n<p>\n    Элемент <LE>tbody</LE> участвует в табличной модели.\n</p>\n\n\n\n\n\n\n\n\n\n"
                    }
                },
                "th": {
                    "tagName": "th",
                    "categories": [
                        "Отсутствует."
                    ],
                    "tag_omission": [
                        "Закрывающий тег может отсутствовать."
                    ],
                    "description": [
                        "Элемент th представляет ячейку заголовка в таблице."
                    ],
                    "content_model": "flow content.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true,
                        "custom_attributes": [
                            {
                                "name": "colspan",
                                "description": "Количество столбцов, которые должна охватывать ячейка."
                            },
                            {
                                "name": "rowspan",
                                "description": "Количество строк, которые должна охватывать ячейка."
                            },
                            {
                                "name": "headers",
                                "description": "Ячейки заголовка для этой ячейки."
                            },
                            {
                                "name": "scope",
                                "description": "Указывает, к каким ячейкам применяется ячейка заголовка."
                            },
                            {
                                "name": "abbr",
                                "description": "Альтернативная метка использования для ячейки заголовка при ссылке на ячейку в других контекстах."
                            }
                        ]
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n     Элемент <LE>th</LE> представляет ячейку заголовка в таблице.\n</p>\n\n<p>\n\tДля элемента <LE>th</LE> может быть указан атрибут содержимого <LA>abbr</LA>. Его значение должно быть альтернативной меткой для ячейки заголовка, которая будет использоваться при ссылке на ячейку в других контекстах (например, при описании ячеек заголовка, которые применяются к ячейке данных). Обычно это сокращенная форма ячейки полного заголовка, но также может быть расширением или просто другой формулировкой.\n</p>\n\n<p>\n\tЭлемент <LE>th</LE> и его атрибуты <LA>colspan</LA>, <LA>rowspan</LA>, <LA>headers</LA> и <LA>scope</LA> принимают участие в табличной модели.\n</p>\n\n<ExampleBox>\n\t\nВ следующем примере показано, как значение атрибута <LA>rowgroup</LA> влияет на <LE>scope</LE>, к каким ячейкам данных применяется ячейка заголовка.\n\nВот фрагмент разметки, показывающий таблицу:\n\n<Code>\n{`\n<table>\n\t\t <thead>\n\t\t  \t\t<tr> <th> ID <th> Значение <th> Название <th> Максимум\n\t\t <tbody>\n\t\t\t\t <tr> <td> <th scope=rowgroup> Первай <td> <td>\n\t\t\t\t <tr> <td> 93 <th scope=row> Второй <td> 3.5 <td> 4\n\t\t\t\t <tr> <td> 10 <th scope=row> Третий <td> 1 <td> 1\n\t\t <tbody>\n\t\t\t\t <tr> <td> <th scope=rowgroup> Четвертый <td> <td>\n\t\t\t\t <tr> <td> 32 <th scope=row> Пятый <td> 2.67 <td> 4\n\t\t\t\t <tr> <td> 35 <th scope=row> Шестой <td> 0.33 <td> 1\n</table>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n\n\n\n\n\n"
                    }
                },
                "legend": {
                    "tagName": "legend",
                    "categories": [
                        "Отсутствуют."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент legend представляет собой заголовок для остального содержимого родительского элемента fieldset элемента legend, если таковой имеется."
                    ],
                    "fullDescription": true,
                    "content_model": "phrasing content.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>legend</LE> представляет собой заголовок для остального содержимого родительского элемента <LE>fieldset</LE> элемента <LE>legend</LE>, если таковой имеется.\n</p>\n\n<p>\n\tПоведение атрибута IDL <LA>form</LA> зависит от того, находится ли элемент <LE>legend</LE> в элементе <LE>fieldset</LE>  или нет. Если <LE>legend</LE> имеет элемент <LE>fieldset</LE> в качестве своего родительского элемента, тогда атрибут IDL <LA>form</LA> должен возвращать то же значение, что и атрибут IDL <LA>form</LA> для элемента <LE>fieldset</LE>. В противном случае он должен вернуть  свое исходное значение.\n</p>\n\n\n\n\n\n\n\n"
                    }
                },
                "comment": {
                    "tagName": "comment",
                    "categories": [
                        "Отсутствуют."
                    ],
                    "tag_omission": [
                        "Закрывающий тег обязателен."
                    ],
                    "description": [
                        "Добавляет комментарий в код документа."
                    ],
                    "fullDescription": true,
                    "content_model": "Отсутствует.",
                    "content_attributes": {
                        "global_attributes": false
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tДобавляет комментарий в код документа. Тег <LE>comment</LE> допустимо использовать только в <LE>body</LE>.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n\t<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n\t<html>\n \t<head>\n  \t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n  \t\t\t<title>Тег COMMENT</title>\n  \t<style type=\"text/css\">\n  \t\t\tdiv {\n   \t\t\tbackground: green; \n   \t\t\tcolor: white; \n    \t\tpadding: 4px; \n  \t\t\t}\n   \t\t\tdiv.ie {\n    \t\tbackground: maroon; \n  \t\t\t}\n  \t</style>\n \t</head>\n \t<body>\n  \t\t\t <comment><div class=\"ie\">Этот текст не виден в браузере Internet Explorer</div></comment>\n   \t\t\t<div>Этот текст показывается во всех браузерах</div>\n \t</body>\n\t</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n"
                    }
                },
                "i": {
                    "tagName": "i",
                    "categories": [
                        "flow content.",
                        "phrasing content",
                        "palpable content"
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент i представляет собой отрезок текста с другим настроением, он выделен таким образом, чтобы показать текст по-другому, например: технический термин, идиоматическую фразу из другого языка, мысль или название в зарубежных текстах."
                    ],
                    "fullDescription": true,
                    "content_model": "phrasing content",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>i</LE> представляет собой отрезок текста с другим настроением, он выделен таким образом, чтобы показать текст по-другому, например: технический термин, идиоматическую фразу из другого языка, мысль или название в зарубежных текстах.\"\n</p>\n\n<p>\n    Термины на других языках, отличных от основного текста, должны быть описаны атрибутами <LA>lang</LA> (или в XML, атрибутами <LA>lang</LA> в пространстве имен XML).\n</p>\n\n<ExampleBox>\n\nВ приведенных ниже примерах показано использование элемента <LE>i</LE>:\n\n<Code>\n{`\n    <p> <i class=\"taxonomy\">Felis silvestris catus</i> звучит мило.</p>\n    <p>Термин <i>prose content</i> определен выше.</p>\n    <p>Вот определение <i lang=\"fr\">je ne sais quoi</i> в воздухе.</p>\n`}\n</Code>\n\nВ следующем примере последовательность мыслей размечена с помощью элементов <LE>i</LE>.\n\n<Code>\n{`\n<p>Реймонд пытался уснуть.</p>\n<p><i>Корабль отплыл в четверг</i>, он засыпал. <i>На борту было очень много приятных людей, Включая прекрасную принцессу Кари. Он смотрел на нее целыми днями, надеясь, что она заметит его, но этого не случалось.</i></p>\n<p><i>Однажды он наконекц заговорил с ней.</i></p>\n<p>Реймонд проснулся в поту от будильника.</p>\n`}\n</Code>\n\n</ExampleBox>\n\n<p>\n    Авторы могут использовать атрибут <LA>class</LA> в элементе <LE>i</LE>, чтобы показать, почему этот элемент используется, к примеру, стиль конкретного использования (например, последовательность мыслей в отличие от терминов). Нет необходимости просматривать весь документ (или серию связанных документов), описывая причину каждого использования.\n</p>\n\n<p>\n    Авторам рекомендуется подумать, могут ли другие элементы применяться вместо <LE>i</LE>, например, элемент <LE>em</LE> для разметки ударения или элемент <LE>dfn</LE> для разметки определяющего термина.\n</p>\n\n\n\n"
                    }
                },
                "u": {
                    "tagName": "u",
                    "categories": [
                        "flow content.",
                        "phrasing content.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент u представляет собой отрезок текста с невыделенной, но с визуализированной нетекстовой аннотацией, например: маркировка текста как имени собственного в китайском тексте (метка собственного имени на китайском языке) или маркировка текста написанного с ошибкой."
                    ],
                    "fullDescription": true,
                    "content_model": "phrasing content.",
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n\tЭлемент <LE>u</LE> представляет собой отрезок текста с невыделенной, но с визуализированной нетекстовой аннотацией, например: маркировка текста как имени собственного в китайском тексте (метка собственного имени на китайском языке) или маркировка текста написанного с ошибкой.\n</p>\n\n<p>\n\tВ большинстве случаев, вероятно, будет более подходящим другой элемент: для обозначения ударений следует использовать элемент <LE>em</LE>; для обозначения ключевых слов или фраз следует использовать либо элемент <LE>b</LE>, либо элемент <LE>mark</LE>, в зависимости от контекста; для обозначения названий книг следует использовать элемент <LE>cite</LE>; для маркировки с помощью определений следует использовать элемент <LE>ruby</LE>; для технических терминов, обозначения мысли или для обозначения названий кораблей в западных текстах следует использовать элемент <LE>i</LE>.\n</p>\n\n<ExampleBox>\n\nВ этом примере элемент <LE>u</LE> используется для пометки слова как орфографической ошибки:\n\n<Code>\n{`\n  <p><u>Увидеть,</u> много рыб.</p>\n`}\n</Code>\n\n</ExampleBox>\n\n"
                    }
                },
                "table": {
                    "tagName": "table",
                    "categories": [
                        "flow content.",
                        "palpable content."
                    ],
                    "tag_omission": [
                        "Открывающий и закрывающий теги обязательны."
                    ],
                    "description": [
                        "Элемент table представляет данные с более чем одним измерением в форме таблицы."
                    ],
                    "content_model": "Отсутствует.",
                    "fullDescription": true,
                    "content_attributes": {
                        "global_attributes": true
                    },
                    "example": false,
                    "additionalDescription": {
                        "isDataLoaded": true,
                        "data": "<p>\n    Элемент <LE>table</LE> представляет данные с более чем одним измерением в форме таблицы.\n</p>\n\n<p>\n    Элемент <LE>table</LE> участвует в создании таблицы. В таблицах есть строки, столбцы и ячейки, заданные их потомками. Строки и столбцы образуют сетку; ячейки таблицы должны полностью покрывать эту сетку.\n</p>\n\n\n<ExampleBox>\n\nВот пример <LE>table</LE>, используемой для разметки головоломки судоку. Обратите внимание на отсутствие заголовков, которые не нужны в такой таблице.\n\n<Code>\n{`\n<style>\n\t\t #sudoku { border-collapse: collapse; border: solid thick; }\n\t\t #sudoku colgroup, table#sudoku tbody { border: solid medium; }\n\t\t #sudoku td { border: solid thin; height: 1.4em; width: 1.4em; text-align: center; padding: 0; }\n</style>\n<h1>Сегодня судоку</h1>\n<table id=\"sudoku\">\n\t\t <colgroup><col><col><col>\n\t\t <colgroup><col><col><col>\n\t\t <colgroup><col><col><col>\n\t\t <tbody>\n\t\t  <tr> <td> 1 <td>   <td> 3 <td> 6 <td>   <td> 4 <td> 7 <td>   <td> 9\n\t\t  <tr> <td>   <td> 2 <td>   <td>   <td> 9 <td>   <td>   <td> 1 <td>\n\t\t  <tr> <td> 7 <td>   <td>   <td>   <td>   <td>   <td>   <td>   <td> 6\n\t\t <tbody>\n\t\t  <tr> <td> 2 <td>   <td> 4 <td>   <td> 3 <td>   <td> 9 <td>   <td> 8\n\t\t  <tr> <td>   <td>   <td>   <td>   <td>   <td>   <td>   <td>   <td>\n\t\t  <tr> <td> 5 <td>   <td>   <td> 9 <td>   <td> 7 <td>   <td>   <td> 1\n\t\t <tbody>\n\t\t  <tr> <td> 6 <td>   <td>   <td>   <td> 5 <td>   <td>   <td>   <td> 2\n\t\t  <tr> <td>   <td>   <td>   <td>   <td> 7 <td>   <td>   <td>   <td>\n\t\t  <tr> <td> 9 <td>   <td>   <td> 8 <td>   <td> 2 <td>   <td>   <td> 5\n</table>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n\n\n\n\n"
                    }
                }
            }
        },
        "htmlAttributesList": {
            "list": [
                {
                    "type": "global",
                    "name": "accesskey"
                },
                {
                    "type": "global",
                    "name": "autocapitalize"
                },
                {
                    "type": "global",
                    "name": "autofocus"
                },
                {
                    "type": "global",
                    "name": "contenteditable"
                },
                {
                    "type": "global",
                    "name": "dir"
                },
                {
                    "type": "global",
                    "name": "draggable"
                },
                {
                    "type": "global",
                    "name": "enterkeyhint"
                },
                {
                    "type": "global",
                    "name": "hidden"
                },
                {
                    "type": "global",
                    "name": "inputmode"
                },
                {
                    "type": "global",
                    "name": "is"
                },
                {
                    "type": "global",
                    "name": "itemid"
                },
                {
                    "type": "global",
                    "name": "itemprop"
                },
                {
                    "type": "global",
                    "name": "itemref"
                },
                {
                    "type": "global",
                    "name": "itemscope"
                },
                {
                    "type": "global",
                    "name": "itemtype"
                },
                {
                    "type": "global",
                    "name": "lang"
                },
                {
                    "type": "global",
                    "name": "nonce"
                },
                {
                    "type": "global",
                    "name": "spellcheck"
                },
                {
                    "type": "global",
                    "name": "style"
                },
                {
                    "type": "global",
                    "name": "tabindex"
                },
                {
                    "type": "global",
                    "name": "title"
                },
                {
                    "type": "global",
                    "name": "translate"
                },
                {
                    "type": "unique",
                    "name": "target"
                },
                {
                    "type": "event",
                    "name": "onafterprint"
                }
            ]
        },
        "attributesInfo": {
            "isLoading": false,
            "list": {
                "accesskey": {},
                "autocapitalize": {},
                "autofocus": {},
                "contenteditable": {},
                "dir": {},
                "hidden": {},
                "spellcheck": {},
                "translate": {},
                "onafterprint": null,
                "itemid": {
                    "description": "Атрибут itemid определяет уникальный глобальный идентификатор элемента для микроданных.",
                    "values": {
                        "description": "",
                        "values": []
                    },
                    "type": "global",
                    "fullDescription": true,
                    "additionalDescription": "<p>\n\tАтрибут <LA>itemid</LA> определяет уникальный глобальный идентификатор элемента для микроданных. Применяется только к таким элементам, у которых одновременно заданы атрибуты <LA>itemscope</LA> и <LA>itemtype</LA>. Кроме того, itemid допустимо использовать со словарями, поддерживающих глобальные идентификаторы.\n</p>\n\n<p>\n\tВ качестве значения указывается относительный или абсолютный адрес документа, который служит идентификатором. Кроме того, допустимо задавать и обычный текст.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<!DOCTYPE html>\n<html>\n\t <head>\n\t\t  <meta charset=\"utf-8\">\n\t\t  <title>itemid</title>\n\t </head>\n\t <body>\n\t\t  <div itemscope itemtype=\"http://schema.org/Book\" itemid=\"isbn:978-5-17-075250-8\">\n\t\t\t  <h2 itemprop=\"name\">Игра престолов</h2>\n\t\t\t  <div itemprop=\"author\">Джордж Мартин</div>\n\t\t\t  <div itemprop=\"bookFormat\">Твёрдый переплёт</div>\n\t\t\t  <div itemprop=\"description\">Эпическая, чеканная сага о мире Семи Королевств. \n\t\t\t   О мире суровых земель вечного холода и радостных земель вечного лета. Мире лордов и \n\t\t\t   героев, воинов и магов, чернокнижников и убийц — всех, кого свела воедино Судьба во \n\t\t\t   исполнение древнего пророчества. О мире опасных приключений, великих деяний и \n\t\t\t   тончайших политических интриг.</div>\n\t\t  </div>\n\t </body>\n</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n"
                },
                "itemtype": {
                    "description": "Атрибут itemtype указывает адрес словаря, который будет применяться для определения свойств элемента в структуре данных.",
                    "values": {
                        "description": "",
                        "values": []
                    },
                    "type": "global",
                    "fullDescription": true,
                    "additionalDescription": "<p>\n\tАтрибут <LA>itemtype</LA> указывает адрес словаря, который будет применяться для определения свойств элемента в структуре данных. \n</p>\n\n<p>\n\tВ качестве значения принимается адрес страницы словаря.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<!DOCTYPE html>\n<html>\n\t <head>\n\t\t  <meta charset=\"utf-8\">\n\t\t  <title>itemtype</title>\n\t </head>\n\t <body>\n\t\t  <div itemscope itemtype=\"http://schema.org/Organization\">\n\t\t\t   <span itemprop=\"name\">Яндекс</span>\n\t\t\t   Контакты:\n\t\t\t    <div itemprop=\"address\" itemscope itemtype=\"http://schema.org/PostalAddress\">\n\t\t\t\t     Адрес:\n\t\t\t\t      <span itemprop=\"streetAddress\">Льва Толстого, 16</span>\n\t\t\t\t      <span itemprop=\"postalCode\"> 119021</span>\n\t\t\t\t      <span itemprop=\"addressLocality\">Москва</span>,\n\t\t\t    </div>\n\t\t\t   Телефон:<span itemprop=\"telephone\">+7 495 739–70–00</span>,\n\t\t\t   Факс:<span itemprop=\"faxNumber\">+7 495 739–70–70</span>,\n\t\t\t   Электронная почта: <span itemprop=\"email\">pr@yandex-team.ru</span>\n\t\t  </div>\n\t </body>\n</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n"
                },
                "lang": {
                    "description": "Текст документа может быть набран как на одном языке, так и содержать вставки на других языках, которые могут различаться по своим правилам оформления текста.",
                    "values": {
                        "description": "",
                        "values": []
                    },
                    "type": "global",
                    "fullDescription": true,
                    "additionalDescription": "<p>\n\tТекст документа может быть набран как на одном языке, так и содержать вставки на других языках, которые могут различаться по своим правилам оформления текста. Например, для русского, немецкого и английского языка характерны разные кавычки, в которые берется цитата. Чтобы указать язык, на котором написан текст внутри текущего элемента и применяется атрибут <LA>lang</LA>. Браузер использует его значение для правильного отображения некоторых символов.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<!DOCTYPE html>\n<html>\n\t <head>\n\t\t  <meta charset=\"utf-8\">\n\t\t  <title>Атрибут lang</title>\n\t  <style>\n\t\t   p {\n\t\t    font-size: 130%; \n\t\t   }\n\t\t   q:lang(de) {\n\t\t    quotes: \"\\201E\" \"\\201C\"; \n\t\t   }\n\t\t   q:lang(en) {\n\t\t    quotes: \"\\201C\" \"\\201D\"; \n\t\t   }\n\t\t   q:lang(fr), q:lang(ru) { \n\t\t    quotes: \"\\00AB\" \"\\00BB\"; \n\t\t   }\n\t  </style>\n\t </head>\n\t <body>\n\t\t  <p>Цитата на французском языке: <q lang=\"fr\">Ce que femme veut, Dieu le veut</q>.</p>\n\t\t  <p>Цитата на немецком: <q lang=\"de\">Der Mensch, versuche die Gotter nicht</q>.</p>\n\t\t  <p>Цитата на английском: <q lang=\"en\">То be or not to be</q>.</p>\n\t </body>\n</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n"
                },
                "draggable": {
                    "description": "Для всех элементов HTML может быть установлен атрибут draggable.",
                    "values": {
                        "description": "",
                        "values": []
                    },
                    "type": "global",
                    "fullDescription": true,
                    "additionalDescription": "<p>\n\tДля всех элементов HTML может быть установлен атрибут <LA>draggable</LA>. Атрибут <LA>draggable</LA> - это перечислимый атрибут. Имеет три состояния. Первое состояние - true, и в нем есть ключевое слово \"true\". Второе состояние - false, и в нем есть ключевое слово \"false\". Третье состояние - auto; у него нет ключевых слов, но это значение по умолчанию с отсутствующим значением и недопустимым значением по умолчанию.\n</p>\n\n<p>\n\ttrue означает, что элемент можно перетаскивать; false состояние означает, что это не так. В auto состоянии используется поведение пользовательского агента по умолчанию.\n</p>\n\n<p>\n\tЭлемент с <LA>draggable</LA> атрибутом также должен иметь атрибут <LA>title</LA>, который дает название элементу с целью невизуальных взаимодействий.\n</p>\n\n\n\n\n"
                },
                "enterkeyhint": {
                    "description": "Пользовательские агенты могут поддерживать атрибут enterkeyhint в элементах управления формой.",
                    "values": {
                        "description": "",
                        "values": []
                    },
                    "type": "global",
                    "fullDescription": true,
                    "additionalDescription": "<p>\n\tПользовательские агенты могут поддерживать атрибут <LA>enterkeyhint</LA> в элементах управления формой (например, значение элементов <LE>textarea</LE>) или в элементах на узле редактирования (например, с использованием <LA>contenteditable</LA>).\n</p>\n\n<p>\n\tАтрибут содержимого <LA>enterkeyhint</LA> - это перечислимый атрибут, который указывает, какую метку действия (или значок) представить для клавиши ввода на виртуальных клавиатурах. Это позволяет авторам настраивать представление клавиши ввода, чтобы сделать ее более полезной для пользователей.\n</p>\n\n\n\n\n\n"
                },
                "itemscope": {
                    "description": "Атрибут itemscope — это логический атрибут, который сообщает любой машине, которая читает наш документ, что на этой странице есть Microdata, и задаёт область действия словаря, заданного атрибутом itemtype, в структуре данных.",
                    "values": {
                        "description": "",
                        "values": []
                    },
                    "type": "global",
                    "fullDescription": true,
                    "additionalDescription": "<p>\n\tАтрибут <LA>itemscope</LA>  — это логический атрибут, который сообщает любой машине, которая читает наш документ, что на этой странице есть Microdata, и задаёт область действия словаря, заданного атрибутом <LA> itemtype</LA> , в структуре данных.\n\tУказание атрибута <LA>itemscope</LA> для элемента создает новый элемент, результатом которого является группа пар имя-значение, которые описывают свойства и их значения для объекта, представленного этим элементом.\n</p>\n\n<p>\n\tДанный атрибут является логическим атрибутом. Может указываться либо без значения, либо с пустым значением. Атрибут <LA>itemscope</LA> относится к глобальным атрибутам, и может быть использован с любым элементом HTML. Атрибут <LA>itemscope</LA> относится к спецификации HTML Microdata.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<dl itemscope\n    itemtype=\"http://vocab.example.net/book\"\n    itemid=\"urn:isbn:0-330-34032-8\">\n<dt>Заглавие <dd itemprop=\"title\">Дисфункция реальности\n<dt>Автор <dd itemprop=\"author\">Питер Ф. Гамильтон\n<dt>Дата публикации\n<dd><time itemprop=\"pubdate\" datetime=\"1996-01-26\">26 января 1996</time></dl>\n`}\n</Code>\n\n</ExampleBox>\n\n\n"
                },
                "inputmode": {
                    "description": "Глобальный атрибут inputmode является вычисленным атрибутом, который предоставляет подсказку для типа данных, которые может ввести пользователь при редактировании содержания элемента.",
                    "values": {
                        "description": "Используйте данные значения атрибута чтобы переопределить поведение при переходе по ссылке.",
                        "values": [
                            {
                                "name": "_none",
                                "meaning": "Без виртуальной клавиатуры; это полезно когда приложение или сайт имплементируют свои собственные клавиатуру или поле ввода."
                            },
                            {
                                "name": "_text",
                                "meaning": "Стандартная раскладка клавиатуры для пользователя, учитывая его локализацию."
                            },
                            {
                                "name": "_decimal",
                                "meaning": "Дробные значения чисел, содержащие разряд и соответствующий символ-разделитель, который учитывает локализацию пользователя. Устройства могут показывать или нет символ минуса (отрицательное значение)."
                            },
                            {
                                "name": "_numeric",
                                "meaning": "Числовая раскладка клавиатуры; числа от 0 до 9. Устройства могут показывать или нет символ минуса (отрицательное значение)."
                            },
                            {
                                "name": "_tel",
                                "meaning": "Раскладка для ввода номера телефона, включая числа от 0 до 9, звёздочку, и решётку."
                            },
                            {
                                "name": "_search",
                                "meaning": "Виртуальная клавиатура, оптимизированная для работы с поиском. Например, кнопка ввода может быть заменена на поиск, и др."
                            },
                            {
                                "name": "_url",
                                "meaning": "Виртуальная клавиатура, оптимизированная для ввода ссылок."
                            }
                        ]
                    },
                    "type": "global",
                    "fullDescription": true,
                    "additionalDescription": "<p>\n\tГлобальный атрибут <LA>inputmode</LA> является вычисленным атрибутом, который предоставляет подсказку для типа данных, которые может ввести пользователь при редактировании содержания элемента. \n</p>\n\n\n\n\n"
                },
                "itemprop": {
                    "description": "Атрибут itemprop используется для добавления свойств словаря микроданных к элементу.",
                    "values": {
                        "description": "",
                        "values": []
                    },
                    "type": "global",
                    "fullDescription": true,
                    "additionalDescription": "<p>\n\tАтрибут <LA>itemprop</LA> используется для добавления свойств словаря микроданных к элементу. Имя свойства определяется значением <LA>itemprop</LA>, а значение свойства определяется содержимым HTML-элемента, к примеру, текстом который располагается внутри элемента.\n</p>\n\n<p>\n\tСвойство определяется словарём данных. \n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<!DOCTYPE html>\n<html>\n\t <head>\n\t\t  <meta charset=\"utf-8\">\n\t\t  <title>itemprop</title>\n\t </head>\n\t <body>\n\t\t  <div itemscope itemtype=\"http://schema.org/Movie\">\n\t\t\t   <div>\n\t\t\t\t    <h1 itemprop=\"name\">Облачный атлас </h1>\n\t\t\t\t    <span itemprop=\"alternativeHeadline\">Cloud Atlas</span>\n\t\t\t\t    <img src=\"http://st.kinopoisk.ru/images/film/464484.jpg\" alt=\"Облачный атлас (Cloud Atlas)\" itemprop=\"image\"/>\n\t\t\t   </div>\n\t\t\t   <span>\n\t\t\t\t    <a itemprop=\"director\" href=\"/name/23330/\">Лана Вачовски</a>,\n\t\t\t\t    <a itemprop=\"director\" href=\"/name/26439/\">Том Тыквер</a>,\n\t\t\t\t    <a itemprop=\"director\" href=\"/name/23329/\">Энди Вачовски</a>\n\t\t\t   </span>\n\t\t\t   <span>\n\t\t\t\t    <a itemprop=\"producer\" href=\"/name/26437/\">Штефан Арндт</a>,\n\t\t\t\t    <a itemprop=\"producer\" href=\"/name/31351/\">Грант Хилл</a>,\n\t\t\t\t    <a itemprop=\"producer\" href=\"/name/26439/\">Том Тыквер</a>,\n\t\t\t\t    <a href=\"/film/464484/cast/#producer\" >и другие</a>.\n\t\t\t   </span>\n\t\t\t   <span>\n\t\t\t\t    <a itemprop=\"musicBy\" href=\"/name/312865/\">Райнхольд Хайль</a>,\n\t\t\t\t    <a itemprop=\"musicBy\" href=\"/name/608605/\">Джонни Клаймек</a>,\n\t\t\t\t    <a itemprop=\"musicBy\" href=\"/name/26439/\">Том Тыквер</a>.\n\t\t\t   </span>\n\t\t\t   <span>\n\t\t\t\t    <a itemprop=\"genre\" href=\"/level/10/m_act%5Bgenre%5D/2/\">фантастика</a>,\n\t\t\t\t    <a itemprop=\"genre\" href=\"/level/10/m_act%5Bgenre%5D/8/\">драма</a>,\n\t\t\t\t    <a itemprop=\"genre\" href=\"/level/10/m_act%5Bgenre%5D/17/\">детектив</a>,\n\t\t\t   </span>  \n\t\t\t   <span class=\"title\">В главных ролях:</span>\n\t\t\t   <div> \n\t\t\t\t    <a itemprop=\"actor\" href=\"/name/9144/\">Том Хэнкс</a>\n\t\t\t\t    <a itemprop=\"actor\" href=\"/name/1179/\">Холли Берри</a>\n\t\t\t\t    <a itemprop=\"actor\" href=\"/name/38704/\">Джим Броудбент</a>\n\t\t\t   </div>\n\t\t\t   <span itemprop=\"description\">Шесть историй — пять реинкарнаций, \n\t\t\t    происходящих в разное время,тесно переплетаются между собой…</span>\n\t\t  </div>\n\t </body>\n</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n"
                },
                "target": {
                    "description": "В стандартном режиме, при клике по ссылке, новая станица открывается в том же окне, заменяя предыдущую страницу. Разные значения атрибута <LA>target</LA> могут изменить данное поведение. Например, при клике на ссылку, новая страница может открываться в соседнем окне.",
                    "values": {
                        "description": "Используйте данные значения атрибута чтобы переопределить поведение при переходе по ссылке.",
                        "values": [
                            {
                                "name": "_self",
                                "meaning": "Загружает страницу в текущую вкладку/окно браузера."
                            },
                            {
                                "name": "_blank",
                                "meaning": "Загружает страницу в новую вкладку/окно браузера."
                            },
                            {
                                "name": "_parent",
                                "meaning": "Открывает страницу в родительском фрейме."
                            },
                            {
                                "name": "_top",
                                "meaning": "Открывает страницу во всем теле окна."
                            }
                        ],
                        "defaultValue": "_self"
                    },
                    "type": "global",
                    "fullDescription": true,
                    "additionalDescription": "<p>\n    Атрибут target, если он присутствует на html элементе, должен сответствовать <a href=\"https://html.spec.whatwg.org/multipage/browsers.html#valid-browsing-context-name-or-keyword\" target=\"_blank\">спецификации</a>.\n</p>\n\n<p>\n    Данный атрибут может применяться к html элементам <LE>a</LE> и <LE>area</LE>.\n</p>\n"
                },
                "is": {
                    "description": "Атрибут is позволяет указать, что стандартный элемент HTML должен вести себя как определенный настраиваемый встроенный элемент.",
                    "values": {
                        "description": "",
                        "values": []
                    },
                    "type": "global",
                    "fullDescription": true,
                    "additionalDescription": "<p>\n\tАтрибут <LA>is</LA> позволяет указать, что стандартный элемент HTML должен вести себя как определенный настраиваемый встроенный элемент\n</p>\n\n<p>\n\tЭтот атрибут можно использовать только в том случае, если указанное имя настраиваемого элемента было успешно определено в текущем документе и соответствует типу элемента, к которому он применяется.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n// Создать class для элемента\nclass WordCount extends HTMLParagraphElement {\n  constructor() {\n    // Всегда называем именно так constructor();\n    // Содержимое сonstructor не записано для краткости\n    ...\n  }\n}\n// Определение нового элемента\ncustomElements.define('word-count', WordCount, { extends: 'p' });\n`}\n</Code>\n\n<Code>\n{`\n<p is=\"word-count\"></p>\n`}\n</Code>\n\n</ExampleBox>\n\n\n\n"
                },
                "itemref": {
                    "description": "Атрибут itemref предоставляет список идентификаторов элементов, которые содержат дополнительные свойствами в других местах документа.",
                    "values": {
                        "description": "",
                        "values": []
                    },
                    "type": "global",
                    "fullDescription": true,
                    "additionalDescription": "<p>\n\tАтрибут <LA>itemref</LA> предоставляет список идентификаторов элементов, которые содержат дополнительные свойства в других местах документа. Атрибут <LA>itemref</LA> может быть указан только для элементов, которые содержат атрибут <LA>itemscope</LA>. Свойства, которые не являются потомками элемента с атрибутом <LA>itemscope</LA>, можно связать с элементом используя атрибут <LA>itemref</LA>.\n</p>\n\n<p>\n\tАтрибут <LA>itemref</LA> относится к глобальным атрибутам, и может быть использован с любым элементом HTML. Атрибут <LA>itemref</LA> относится к спецификации HTML Microdata.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<div itemscope id=\"amanda\" itemref=\"a b\"></div>\n<p id=\"a\">Название: <span itemprop=\"name\">Аманда</span> </p>\n<div id=\"b\" itemprop=\"band\" itemscope itemref=\"c\"></div>\n<div id=\"c\">\n    <p>Группа: <span itemprop=\"name\">Джаз-группа</span> </p>\n    <p>Состав: <span itemprop=\"size\">12</span> участников</p>\n</div>\n`}\n</Code>\n\n</ExampleBox>\n\n\n"
                },
                "style": {
                    "description": "Атрибут style применяется для определения стиля элемента с помощью правил CSS.",
                    "values": {
                        "description": "",
                        "values": []
                    },
                    "type": "global",
                    "fullDescription": true,
                    "additionalDescription": "<p>\n\tАтрибут <LA>style</LA> применяется для определения стиля элемента с помощью правил CSS. В качестве значений указываются стилевые правила: вначале следует имя стилевого свойства, затем через двоеточие его значение. Стилевые свойства разделяются между собой точкой с запятой.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t  <meta charset=\"utf-8\">\n\t\t  <title>Атрибут style</title>\n\t</head> \n\t<body>\n\t\t  <p><span style=\"color: red; font-size: 2em\">Л</span>орен ведет незаконную деятельность.</p>\n\t\t  <p><span style=\"color: red; font-size: 2em\">М</span>ожно сказать об этом и на латыне.</p>\n\t </body>\n</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n"
                },
                "tabindex": {
                    "description": "Атрибут tabindex определяет последовательность перехода между ссылками при нажатии на кнопку tab.",
                    "values": {
                        "description": "",
                        "values": []
                    },
                    "type": "global",
                    "fullDescription": true,
                    "additionalDescription": "<p>\n\tАтрибут <LA>tabindex</LA> определяет последовательность перехода между ссылками при нажатии на кнопку tab. Любое целое положительное число. Значения выстраиваются последовательно и переход между ссылками происходит от меньшего значения к большему. Значения меньше нуля игнорируются и переход к таким ссылкам не происходит.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<!DOCTYPE HTML>\n<html>\n\t <head>\n\t\t  <meta charset=\"utf-8\">\n\t\t  <title>Тег А, атрибут tabindex</title>\n\t </head>\n\t <body>\n\t\t  <table>\n\t\t\t   <tr>\n\t\t\t\t    <td>\n\t\t\t\t\t     <p><a href=\"1.html\" tabindex=\"1\">Ссылка 1</a></p>\n\t\t\t\t\t     <p><a href=\"3.html\" tabindex=\"3\">Ссылка 3</a></p>\n\t\t\t\t    </td>\n\t\t\t\t    <td>\n\t\t\t\t\t     <p><a href=\"2.html\" tabindex=\"2\">Ссылка 2</a></p>\n\t\t\t\t\t     <p><a href=\"4.html\" tabindex=\"4\">Ссылка 4</a></p>\n\t\t\t\t    </td>\n\t\t\t   </tr>\n\t\t  </table>\n\t </body>\n</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n"
                },
                "nonce": {
                    "description": "nonce является атрибутом содержания определения криптографического одноразового номера.",
                    "values": {
                        "description": "",
                        "values": []
                    },
                    "type": "global",
                    "fullDescription": true,
                    "additionalDescription": "<p>\n\t<LA>nonce</LA> - глобальный атрибут. является атрибутом содержания определения криптографического одноразового номера ( «номер, который используется один раз»), который может быть использованы контентной политики безопасности, чтобы определить, является ли данная выборка будет разрешено проследовать для данного элемента.\n</p>\n\n<p>\n    <LA>nonce</LA>  может помочь вам избежать использования директивы CSP unsafe-inline, которая позволяет выводить список всех встроенных скриптов или стилей.\n</p>\n\n<p>\n    Используйте <LA>nonce</LA> только в тех случаях, когда у вас нет возможности обойтись без небезопасного встроенного скрипта или содержимого стиля. Если вам не нужен <LA>nonce</LA>, не используйте его. Если ваш скрипт статический, вы также можете использовать вместо него хеш CSP. Всегда старайтесь в полной мере использовать защиту CSP и по возможности избегайте одноразовых или небезопасных встроенных сценариев.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<script nonce=\"8IBTHwOdqNKAWeKl7plt8g==\">…</script>\n`}\n</Code>\n\n</ExampleBox>\n\n\n"
                },
                "title": {
                    "description": "Описывает содержимое элемента в виде всплывающей подсказки, которая появляется при наведении курсора на элемент.",
                    "values": {
                        "description": "",
                        "values": []
                    },
                    "type": "global",
                    "fullDescription": true,
                    "additionalDescription": "<p>\n\tОписывает содержимое элемента в виде всплывающей подсказки, которая появляется при наведении курсора на элемент. Вид такой подсказки зависит от браузера, настроек операционной системы и не может быть изменен с помощью HTML-кода или стилей.Любая текстовая строка. Строка должна заключаться в двойные или одинарные кавычки.\n</p>\n\n<ExampleBox>\n\n<Code>\n{`\n<!DOCTYPE html>\n<html>\n\t <head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>Атрибут title</title>\n\t </head>\n\t <body>\n\t    <p title=\"А вот и я!\">Пример всплывающей подсказки</p>\n\t </body>\n</html>\n`}\n</Code>\n\n</ExampleBox>\n\n\n"
                }
            }
        }
    },
    "UI": {
        "mobileMenu": {
            "isOpened": false
        }
    }
}